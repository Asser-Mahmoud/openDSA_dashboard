{"ast":null,"code":"import { classNames } from './list-view';\nimport { EventHandler, append, isNullOrUndefined, detach, removeClass, addClass, compile, formatUnit } from '@syncfusion/ej2-base';\nimport { ListBase } from '../common/list-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nvar listElementCount = 1.5;\nvar windowElementCount = 3;\n\nvar Virtualization =\n/** @class */\nfunction () {\n  function Virtualization(instance) {\n    this.elementDifference = 0;\n    this.listViewInstance = instance;\n  }\n  /**\n   * For internal use only.\n   *\n   * @private\n   */\n\n\n  Virtualization.prototype.isNgTemplate = function () {\n    return !isNullOrUndefined(this.listViewInstance.templateRef) && typeof this.listViewInstance.templateRef !== 'string';\n  };\n  /**\n   * Checks if the platform is a Vue and its template property is a function type.\n   *\n   * @returns {boolean} indicating the result of the check\n   */\n\n\n  Virtualization.prototype.isVueFunctionTemplate = function () {\n    return this.listViewInstance.isVue && typeof this.listViewInstance.template === 'function';\n  };\n  /**\n   * For internal use only.\n   *\n   * @private\n   */\n\n\n  Virtualization.prototype.uiVirtualization = function () {\n    this.wireScrollEvent(false);\n    var curViewDS = this.listViewInstance.curViewDS;\n    var firstDs = curViewDS.slice(0, 1);\n    this.listViewInstance.ulElement = this.listViewInstance.curUL = ListBase.createList( // eslint-disable-next-line\n    this.listViewInstance.createElement, firstDs, this.listViewInstance.listBaseOption, null, this.listViewInstance);\n    this.listViewInstance.contentContainer = this.listViewInstance.createElement('div', {\n      className: classNames.content\n    });\n    this.listViewInstance.element.appendChild(this.listViewInstance.contentContainer);\n    this.listViewInstance.contentContainer.appendChild(this.listViewInstance.ulElement);\n    this.listItemHeight = this.listViewInstance.ulElement.firstElementChild.getBoundingClientRect().height;\n    this.expectedDomItemCount = this.ValidateItemCount(10000);\n    this.domItemCount = this.ValidateItemCount(Object.keys(this.listViewInstance.curViewDS).length);\n    this.uiFirstIndex = 0;\n    this.uiLastIndex = this.domItemCount - 1;\n    var otherDs = curViewDS.slice(1, this.domItemCount);\n    var listItems = ListBase.createListItemFromJson( // eslint-disable-next-line\n    this.listViewInstance.createElement, otherDs, this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n    append(listItems, this.listViewInstance.ulElement);\n    this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n    this.topElement = this.listViewInstance.createElement('div');\n    this.listViewInstance.ulElement.insertBefore(this.topElement, this.listViewInstance.ulElement.firstElementChild);\n    this.bottomElement = this.listViewInstance.createElement('div');\n    this.listViewInstance.ulElement.insertBefore(this.bottomElement, null);\n    this.totalHeight = Object.keys(curViewDS).length * this.listItemHeight - this.domItemCount * this.listItemHeight;\n    this.topElement.style.height = 0 + 'px';\n    this.bottomElement.style.height = this.totalHeight + 'px';\n    this.topElementHeight = 0;\n    this.bottomElementHeight = this.totalHeight;\n    this.listDiff = 0;\n    this.uiIndicesInitialization();\n  };\n\n  Virtualization.prototype.wireScrollEvent = function (destroy) {\n    if (!destroy) {\n      if (this.listViewInstance.isWindow) {\n        this.onVirtualScroll = this.onVirtualUiScroll.bind(this);\n        window.addEventListener('scroll', this.onVirtualScroll);\n      } else {\n        EventHandler.add(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll, this);\n      }\n    } else {\n      if (this.listViewInstance.isWindow === true) {\n        window.removeEventListener('scroll', this.onVirtualScroll);\n        window.removeEventListener('scroll', this.updateUl);\n      } else {\n        EventHandler.remove(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll);\n        EventHandler.remove(this.listViewInstance.element, 'scroll', this.updateUlContainer);\n      }\n    }\n  };\n\n  Virtualization.prototype.updateUlContainer = function (e) {\n    var listDiff;\n    var virtualElementContainer = this.listViewInstance.ulElement.querySelector('.' + classNames.virtualElementContainer);\n\n    if (isNullOrUndefined(this.listViewInstance.liElementHeight)) {\n      this.listViewInstance.updateLiElementHeight();\n    }\n\n    if (this.listViewInstance.isWindow) {\n      // eslint-disable-next-line\n      listDiff = Math.round(e.target.documentElement.scrollTop / this.listViewInstance.liElementHeight) - 2;\n    } else {\n      // eslint-disable-next-line\n      listDiff = Math.round(e.target.scrollTop / this.listViewInstance.liElementHeight) - 2;\n    }\n\n    if ((listDiff - 1) * this.listViewInstance.liElementHeight < 0) {\n      virtualElementContainer.style.top = '0px';\n    } else {\n      virtualElementContainer.style.top = listDiff * this.listViewInstance.liElementHeight + 'px';\n    }\n  };\n\n  Virtualization.prototype.ValidateItemCount = function (dataSourceLength) {\n    var height = parseFloat(formatUnit(this.listViewInstance.height));\n    var itemCount;\n\n    if (this.listViewInstance.isWindow) {\n      itemCount = Math.round(window.innerHeight / this.listItemHeight * windowElementCount);\n    } else {\n      if (typeof this.listViewInstance.height === 'string' && this.listViewInstance.height.indexOf('%') !== -1) {\n        // eslint-disable-next-line max-len\n        itemCount = Math.round(this.listViewInstance.element.getBoundingClientRect().height / this.listItemHeight * listElementCount);\n      } else {\n        itemCount = Math.round(height / this.listItemHeight * listElementCount);\n      }\n    }\n\n    if (itemCount > dataSourceLength) {\n      itemCount = dataSourceLength;\n    }\n\n    return itemCount;\n  };\n\n  Virtualization.prototype.uiIndicesInitialization = function () {\n    this.uiIndices = {\n      'activeIndices': [],\n      'disabledItemIndices': [],\n      'hiddenItemIndices': []\n    };\n    var data = this.listViewInstance.curViewDS;\n\n    for (var i = 0; i < data.length; i++) {\n      if (this.listViewInstance.showCheckBox && data[i][this.listViewInstance.fields.isChecked]) {\n        this.uiIndices.activeIndices.push(i);\n      } // eslint-disable-next-line\n\n\n      if (!isNullOrUndefined(data[i][this.listViewInstance.fields.enabled]) && !data[i][this.listViewInstance.fields.enabled]) {\n        // eslint-disable-next-line\n        this.uiIndices.disabledItemIndices.push(i);\n      }\n    }\n\n    if (this.isNgTemplate()) {\n      var items = this.listViewInstance.element.querySelectorAll('.' + classNames.listItem);\n\n      for (var index = 0; index < items.length; index++) {\n        items[index].context = this.listViewInstance.viewContainerRef.get(index).context;\n      }\n    }\n  };\n\n  Virtualization.prototype.refreshItemHeight = function () {\n    if (this.listViewInstance.curViewDS.length) {\n      var curViewDS = this.listViewInstance.curViewDS;\n      this.listItemHeight = this.topElement.nextSibling.getBoundingClientRect().height;\n      this.totalHeight = Object.keys(curViewDS).length * this.listItemHeight - this.domItemCount * this.listItemHeight;\n      this.bottomElementHeight = this.totalHeight;\n      this.bottomElement.style.height = this.totalHeight + 'px';\n    }\n  };\n\n  Virtualization.prototype.getscrollerHeight = function (startingHeight) {\n    return this.listViewInstance.isWindow ? pageYOffset - startingHeight <= 0 ? 0 : pageYOffset - startingHeight : this.listViewInstance.element.scrollTop - startingHeight <= 0 ? 0 : this.listViewInstance.element.scrollTop - startingHeight;\n  };\n\n  Virtualization.prototype.onVirtualUiScroll = function (e) {\n    var _a;\n\n    var startingHeight;\n\n    if (this.listViewInstance.isWindow) {\n      startingHeight = this.listViewInstance.ulElement.getBoundingClientRect().top - document.documentElement.getBoundingClientRect().top;\n    } else {\n      startingHeight = this.listViewInstance.headerEle ? this.listViewInstance.headerEle.getBoundingClientRect().height : 0;\n    }\n\n    this.scrollPosition = isNullOrUndefined(this.scrollPosition) ? 0 : this.scrollPosition;\n    var scroll = this.getscrollerHeight(startingHeight);\n    this.topElementHeight = this.listItemHeight * Math.floor(scroll / this.listItemHeight);\n    this.bottomElementHeight = this.totalHeight - this.topElementHeight;\n    _a = scroll <= this.totalHeight ? [this.topElementHeight, this.bottomElementHeight] : [this.totalHeight, 0], this.topElementHeight = _a[0], this.bottomElementHeight = _a[1];\n\n    if (this.topElementHeight !== parseFloat(this.topElement.style.height)) {\n      this.topElement.style.height = this.topElementHeight + 'px';\n      this.bottomElement.style.height = this.bottomElementHeight + 'px';\n\n      if (scroll > this.scrollPosition) {\n        var listDiff = Math.round(this.topElementHeight / this.listItemHeight - this.listDiff);\n\n        if (listDiff > this.expectedDomItemCount + 5) {\n          this.onLongScroll(listDiff, true);\n        } else {\n          this.onNormalScroll(listDiff, true);\n        }\n      } else {\n        var listDiff = Math.round(this.listDiff - this.topElementHeight / this.listItemHeight);\n\n        if (listDiff > this.expectedDomItemCount + 5) {\n          this.onLongScroll(listDiff, false);\n        } else {\n          this.onNormalScroll(listDiff, false);\n        }\n      }\n    }\n\n    this.listDiff = Math.round(this.topElementHeight / this.listItemHeight);\n\n    if (typeof this.listViewInstance.onUIScrolled === 'function') {\n      this.listViewInstance.onUIScrolled();\n    }\n\n    this.scrollPosition = scroll;\n  };\n\n  Virtualization.prototype.onLongScroll = function (listDiff, isScrollingDown) {\n    var index = isScrollingDown ? this.uiFirstIndex + listDiff : this.uiFirstIndex - listDiff;\n    var elements = this.listViewInstance.ulElement.querySelectorAll('li');\n\n    for (var i = 0; i < elements.length; i++) {\n      this.updateUI(elements[i], index);\n      index++;\n    }\n\n    this.uiLastIndex = isScrollingDown ? this.uiLastIndex + listDiff : this.uiLastIndex - listDiff;\n    this.uiFirstIndex = isScrollingDown ? this.uiFirstIndex + listDiff : this.uiFirstIndex - listDiff;\n  };\n\n  Virtualization.prototype.onNormalScroll = function (listDiff, isScrollingDown) {\n    if (isScrollingDown) {\n      for (var i = 0; i < listDiff; i++) {\n        var index = ++this.uiLastIndex;\n        this.updateUI(this.topElement.nextElementSibling, index, this.bottomElement);\n        this.uiFirstIndex++;\n      }\n    } else {\n      for (var i = 0; i < listDiff; i++) {\n        var index = --this.uiFirstIndex;\n        var target = this.topElement.nextSibling;\n        this.updateUI(this.bottomElement.previousElementSibling, index, target);\n        this.uiLastIndex--;\n      }\n    }\n  };\n\n  Virtualization.prototype.updateUiContent = function (element, index) {\n    // eslint-disable-next-line\n    var curViewDs = this.listViewInstance.curViewDS;\n\n    if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n      element.dataset.uid = ListBase.generateId();\n      element.getElementsByClassName(classNames.listItemText)[0].innerHTML = this.listViewInstance.curViewDS[index].toString();\n    } else {\n      // eslint-disable-next-line\n      element.dataset.uid = curViewDs[index][this.listViewInstance.fields.id] ? // eslint-disable-next-line\n      curViewDs[index][this.listViewInstance.fields.id] : ListBase.generateId();\n      element.getElementsByClassName(classNames.listItemText)[0].innerHTML = // eslint-disable-next-line\n      curViewDs[index][this.listViewInstance.fields.text];\n    }\n\n    if (this.listViewInstance.showIcon) {\n      if (element.querySelector('.' + classNames.listIcon)) {\n        detach(element.querySelector('.' + classNames.listIcon));\n      }\n\n      if (this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]) {\n        var textContent = element.querySelector('.' + classNames.textContent);\n        var target = this.listViewInstance.createElement('div', {\n          className: classNames.listIcon + ' ' + this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]\n        });\n        textContent.insertBefore(target, element.querySelector('.' + classNames.listItemText));\n      }\n    }\n\n    if (this.listViewInstance.showCheckBox && this.listViewInstance.fields.groupBy) {\n      if (!this.checkListWrapper) {\n        this.checkListWrapper = this.listViewInstance.curUL.querySelector('.' + classNames.checkboxWrapper).cloneNode(true);\n      }\n\n      var textContent = element.querySelector('.' + classNames.textContent);\n\n      if (this.listViewInstance.curViewDS[index].isHeader) {\n        if (element.querySelector('.' + classNames.checkboxWrapper)) {\n          element.classList.remove(classNames.checklist);\n          textContent.classList.remove(classNames.checkbox);\n          detach(element.querySelector('.' + classNames.checkboxWrapper));\n        }\n      } else {\n        if (!element.querySelector('.' + classNames.checkboxWrapper)) {\n          element.classList.add(classNames.checklist);\n          textContent.classList.add(classNames.checkbox);\n          textContent.insertBefore(this.checkListWrapper.cloneNode(true), element.querySelector('.' + classNames.listItemText));\n        }\n      }\n    }\n  };\n\n  Virtualization.prototype.changeElementAttributes = function (element, index) {\n    element.classList.remove(classNames.disable);\n\n    if (this.uiIndices.disabledItemIndices.length && this.uiIndices.disabledItemIndices.indexOf(index) !== -1) {\n      element.classList.add(classNames.disable);\n    }\n\n    element.style.display = '';\n\n    if (this.uiIndices.hiddenItemIndices.length && this.uiIndices.hiddenItemIndices.indexOf(index) !== -1) {\n      element.style.display = 'none';\n    }\n\n    if (this.listViewInstance.showCheckBox) {\n      var checklistElement = element.querySelector('.' + classNames.checkboxWrapper);\n      element.classList.remove(classNames.selected);\n      element.classList.remove(classNames.focused);\n\n      if (checklistElement) {\n        checklistElement.removeAttribute('aria-checked');\n        checklistElement.firstElementChild.classList.remove(classNames.checked);\n      }\n\n      if (this.uiIndices.activeIndices.length && this.uiIndices.activeIndices.indexOf(index) !== -1 && !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n        element.classList.add(classNames.selected);\n        checklistElement.firstElementChild.classList.add(classNames.checked);\n        checklistElement.setAttribute('aria-checked', 'true');\n\n        if (this.activeIndex === index) {\n          element.classList.add(classNames.focused);\n        }\n      }\n    } else {\n      element.classList.remove(classNames.selected);\n      element.removeAttribute('aria-selected');\n\n      if (!isNullOrUndefined(this.activeIndex) && this.activeIndex === index && !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n        element.classList.add(classNames.selected);\n        element.setAttribute('aria-selected', 'true');\n      }\n    }\n\n    if (this.listViewInstance.fields.groupBy) {\n      if (this.listViewInstance.curViewDS[index].isHeader) {\n        if (element.classList.contains(classNames.listItem)) {\n          element.classList.remove(classNames.listItem);\n          element.setAttribute('role', 'group');\n          element.classList.add(classNames.groupListItem);\n        }\n      } else {\n        if (element.classList.contains(classNames.groupListItem)) {\n          element.classList.remove(classNames.groupListItem);\n          element.setAttribute('role', 'listitem');\n          element.classList.add(classNames.listItem);\n        }\n      }\n    }\n  };\n\n  Virtualization.prototype.findDSAndIndexFromId = function (ds, fields) {\n    var _this = this;\n\n    var resultJSON = {};\n    fields = this.listViewInstance.getElementUID(fields);\n\n    if (!isNullOrUndefined(fields)) {\n      ds.some(function (data, index) {\n        if (fields[_this.listViewInstance.fields.id] && // eslint-disable-next-line\n        fields[_this.listViewInstance.fields.id] // eslint-disable-next-line\n        === (data[_this.listViewInstance.fields.id] && data[_this.listViewInstance.fields.id]) || fields === data) {\n          resultJSON.index = index;\n          resultJSON.data = data;\n          return true;\n        } else {\n          return false;\n        }\n      });\n    }\n\n    return resultJSON;\n  };\n\n  Virtualization.prototype.getSelectedItems = function () {\n    var _this = this;\n\n    if (!isNullOrUndefined(this.activeIndex) || this.listViewInstance.showCheckBox && this.uiIndices.activeIndices.length) {\n      var dataCollection = [];\n      var textCollection = [];\n\n      if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n        var curViewDS_1 = this.listViewInstance.curViewDS;\n\n        if (this.listViewInstance.showCheckBox) {\n          var indices = this.uiIndices.activeIndices;\n\n          for (var i = 0; i < indices.length; i++) {\n            dataCollection.push(curViewDS_1[indices[i]]);\n          }\n\n          return {\n            text: dataCollection,\n            // eslint-disable-next-line\n            data: dataCollection,\n            index: this.uiIndices.activeIndices.map(function (index) {\n              return _this.listViewInstance.dataSource.indexOf(curViewDS_1[index]);\n            })\n          };\n        } else {\n          return {\n            text: curViewDS_1[this.activeIndex],\n            data: curViewDS_1[this.activeIndex],\n            index: this.listViewInstance.dataSource.indexOf(curViewDS_1[this.activeIndex])\n          };\n        }\n      } else {\n        var curViewDS_2 = this.listViewInstance.curViewDS;\n        var text = this.listViewInstance.fields.text;\n\n        if (this.listViewInstance.showCheckBox) {\n          var indexArray = this.uiIndices.activeIndices;\n\n          for (var i = 0; i < indexArray.length; i++) {\n            textCollection.push(curViewDS_2[indexArray[i]][\"\" + text]); // eslint-disable-next-line\n\n            dataCollection.push(curViewDS_2[indexArray[i]]);\n          } // eslint-disable-next-line\n\n\n          var dataSource_1 = this.listViewInstance.dataSource instanceof DataManager ? curViewDS_2 : this.listViewInstance.dataSource;\n          return {\n            text: textCollection,\n            // eslint-disable-next-line\n            data: dataCollection,\n            index: this.uiIndices.activeIndices.map(function (index) {\n              return dataSource_1.indexOf(curViewDS_2[index]);\n            })\n          };\n        } else {\n          // eslint-disable-next-line\n          var dataSource = this.listViewInstance.dataSource instanceof DataManager ? curViewDS_2 : this.listViewInstance.dataSource;\n          return {\n            text: curViewDS_2[this.activeIndex][this.listViewInstance.fields.text],\n            // eslint-disable-next-line\n            data: curViewDS_2[this.activeIndex],\n            index: dataSource.indexOf(curViewDS_2[this.activeIndex])\n          };\n        }\n      }\n    } else {\n      return undefined;\n    }\n  };\n\n  Virtualization.prototype.selectItem = function (obj) {\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (Object.keys(resutJSON).length) {\n      var isSelected = this.activeIndex === resutJSON.index;\n      var isChecked = void 0;\n      this.activeIndex = resutJSON.index;\n\n      if (this.listViewInstance.showCheckBox) {\n        if (this.uiIndices.activeIndices.indexOf(resutJSON.index) === -1) {\n          isChecked = true;\n          this.uiIndices.activeIndices.push(resutJSON.index);\n        } else {\n          isChecked = false;\n          this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(resutJSON.index), 1);\n        }\n\n        if (this.listViewInstance.curUL.querySelector('.' + classNames.focused)) {\n          this.listViewInstance.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n        }\n      }\n\n      if (this.listViewInstance.getLiFromObjOrElement(obj)) {\n        if (this.listViewInstance.showCheckBox) {\n          this.listViewInstance.setCheckboxLI(this.listViewInstance.getLiFromObjOrElement(obj));\n        } else {\n          this.listViewInstance.setSelectLI(this.listViewInstance.getLiFromObjOrElement(obj));\n        }\n      } else {\n        // eslint-disable-next-line\n        var eventArgs = void 0;\n\n        if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n          eventArgs = {\n            text: this.listViewInstance.curViewDS[this.activeIndex],\n            data: this.listViewInstance.curViewDS[this.activeIndex],\n            index: this.activeIndex\n          };\n        } else {\n          var curViewDS = this.listViewInstance.curViewDS;\n          eventArgs = {\n            text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n            data: curViewDS[this.activeIndex],\n            index: this.activeIndex\n          };\n        }\n\n        if (this.listViewInstance.showCheckBox) {\n          eventArgs.isChecked = isChecked;\n          this.listViewInstance.trigger('select', eventArgs);\n        } else if (!isSelected) {\n          this.listViewInstance.removeSelect();\n          this.listViewInstance.trigger('select', eventArgs);\n        }\n      }\n    } else if (isNullOrUndefined(obj) && !this.listViewInstance.showCheckBox) {\n      this.listViewInstance.removeSelect();\n      this.activeIndex = undefined;\n    }\n  };\n\n  Virtualization.prototype.enableItem = function (obj) {\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (Object.keys(resutJSON).length) {\n      this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(resutJSON.index), 1);\n    }\n  };\n\n  Virtualization.prototype.disableItem = function (obj) {\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (Object.keys(resutJSON).length && this.uiIndices.disabledItemIndices.indexOf(resutJSON.index) === -1) {\n      this.uiIndices.disabledItemIndices.push(resutJSON.index);\n    }\n  };\n\n  Virtualization.prototype.showItem = function (obj) {\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (Object.keys(resutJSON).length) {\n      this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index), 1);\n    }\n  };\n\n  Virtualization.prototype.hideItem = function (obj) {\n    // eslint-disable-next-line\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (Object.keys(resutJSON).length && this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index) === -1) {\n      this.uiIndices.hiddenItemIndices.push(resutJSON.index);\n    }\n  };\n\n  Virtualization.prototype.removeItem = function (obj) {\n    var dataSource;\n    var curViewDS = this.listViewInstance.curViewDS; // eslint-disable-next-line\n\n    var resutJSON = this.findDSAndIndexFromId(curViewDS, obj); // eslint-disable-next-line\n\n    if (Object.keys(resutJSON).length) {\n      dataSource = resutJSON.data;\n\n      if (curViewDS[resutJSON.index - 1] && curViewDS[resutJSON.index - 1].isHeader && curViewDS[resutJSON.index - 1].items.length === 1) {\n        this.removeUiItem(resutJSON.index - 1);\n        this.removeUiItem(resutJSON.index - 1);\n      } else {\n        this.removeUiItem(resutJSON.index);\n      }\n    }\n\n    var listDataSource = this.listViewInstance.dataSource instanceof DataManager ? this.listViewInstance.localData : this.listViewInstance.dataSource;\n    var index = listDataSource.indexOf(dataSource);\n\n    if (index !== -1) {\n      listDataSource.splice(index, 1);\n      this.listViewInstance.setViewDataSource(listDataSource);\n    } // recollect all the list item into collection\n\n\n    this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n  }; // eslint-disable-next-line\n\n\n  Virtualization.prototype.setCheckboxLI = function (li, e) {\n    var index = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n\n    if (li.classList.contains(classNames.selected)) {\n      if (this.uiIndices.activeIndices.indexOf(index) === -1) {\n        this.uiIndices.activeIndices.push(index);\n      }\n    } else {\n      this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n    }\n  }; // eslint-disable-next-line\n\n\n  Virtualization.prototype.setSelectLI = function (li, e) {\n    this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n  };\n\n  Virtualization.prototype.checkedItem = function (checked) {\n    if (checked) {\n      this.uiIndices.activeIndices = [];\n      this.activeIndex = undefined;\n      var data = this.listViewInstance.curViewDS;\n\n      for (var index = 0; index < data.length; index++) {\n        if (!data[index].isHeader) {\n          this.uiIndices.activeIndices.push(index);\n        }\n      }\n    } else {\n      this.activeIndex = undefined;\n      this.uiIndices.activeIndices = [];\n    }\n  };\n\n  Virtualization.prototype.addUiItem = function (index) {\n    // virtually new add list item based on the scollbar position\n    // if the scroll bar is at the top, just pretend the new item has been added since no UI\n    // change is required for the item that has been added at last but when scroll bar is at the bottom\n    // just detach top and inject into bottom to mimic new item is added\n    var curViewDs = this.listViewInstance.curViewDS;\n    this.changeUiIndices(index, true);\n\n    if (this.activeIndex && this.activeIndex >= index) {\n      this.activeIndex++;\n    }\n\n    if (this.listViewInstance.showCheckBox && curViewDs[index][this.listViewInstance.fields.isChecked]) {\n      this.uiIndices.activeIndices.push(index);\n    }\n\n    if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n      this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n    }\n\n    if (parseFloat(this.bottomElement.style.height)) {\n      var liItem = this.listViewInstance.curUL.lastElementChild.previousSibling;\n      var target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) || this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n\n      if (target) {\n        this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n        this.updateUI(liItem, index, target);\n      }\n    } else {\n      var liItem = this.listViewInstance.curUL.firstElementChild.nextSibling;\n      var target = void 0;\n\n      if (Object.keys(this.listViewInstance.curViewDS).length - 1 === index) {\n        target = this.listViewInstance.curUL.lastElementChild;\n      } else {\n        target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) || this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n      }\n\n      this.topElement.style.height = parseFloat(this.topElement.style.height) + this.listItemHeight + 'px';\n      this.uiFirstIndex++;\n      this.uiLastIndex++;\n\n      if (target) {\n        this.updateUI(liItem, index, target);\n\n        if (this.listViewInstance.isWindow === true) {\n          window.scrollTo(0, pageYOffset + this.listItemHeight);\n        } else {\n          this.listViewInstance.element.scrollTop += this.listItemHeight;\n        }\n      }\n    }\n\n    this.totalHeight += this.listItemHeight;\n    this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n  };\n\n  Virtualization.prototype.removeUiItem = function (index) {\n    this.totalHeight -= this.listItemHeight;\n    var curViewDS = this.listViewInstance.curViewDS[index];\n    var liItem = this.listViewInstance.getLiFromObjOrElement(curViewDS);\n    this.listViewInstance.curViewDS.splice(index, 1);\n\n    if (this.activeIndex && this.activeIndex >= index) {\n      this.activeIndex--;\n    }\n\n    if (liItem) {\n      if (this.domItemCount > Object.keys(this.listViewInstance.curViewDS).length) {\n        detach(liItem);\n        this.domItemCount--;\n        this.uiLastIndex--;\n        this.totalHeight = 0;\n      } else {\n        if (liItem.classList.contains(classNames.disable)) {\n          liItem.classList.remove(classNames.disable);\n          this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(index), 1);\n        }\n\n        if (liItem.style.display === 'none') {\n          liItem.style.display = '';\n          this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(index), 1);\n        }\n\n        if (this.listViewInstance.showCheckBox && liItem.classList.contains(classNames.selected)) {\n          this.listViewInstance.removeSelect();\n          this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n          var checklistElement = liItem.querySelector('.' + classNames.checkboxWrapper);\n          checklistElement.removeAttribute('aria-checked');\n          checklistElement.firstElementChild.classList.remove(classNames.checked);\n\n          if (liItem.classList.contains(classNames.focused)) {\n            liItem.classList.remove(classNames.focused);\n            this.activeIndex = undefined;\n          }\n        } else if (liItem.classList.contains(classNames.selected)) {\n          this.listViewInstance.removeSelect();\n          this.activeIndex = undefined;\n        }\n\n        if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n          this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n        } else if (parseFloat(this.bottomElement.style.height)) {\n          this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) - this.listItemHeight + 'px';\n          this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n        } else {\n          this.topElement.style.height = parseFloat(this.topElement.style.height) - this.listItemHeight + 'px';\n          this.updateUI(liItem, this.uiFirstIndex - 1, this.topElement.nextSibling);\n          this.uiLastIndex--;\n          this.uiFirstIndex--;\n        }\n      }\n    }\n\n    this.changeUiIndices(index, false);\n    this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n  };\n\n  Virtualization.prototype.changeUiIndices = function (index, increment) {\n    var keys = Object.keys(this.uiIndices);\n\n    for (var ind = 0; ind < keys.length; ind++) {\n      this.uiIndices[keys[ind]] = this.uiIndices[keys[ind]].map(function (i) {\n        if (i >= index) {\n          return increment ? ++i : --i;\n        } else {\n          return i;\n        }\n      });\n    }\n  };\n\n  Virtualization.prototype.addItem = function (data, fields, dataSource) {\n    for (var i = 0; i < data.length; i++) {\n      var currentItem = data[i]; // push the given data to main data array\n\n      dataSource.push(currentItem); // recalculate all the group data or other datasource related things\n\n      this.listViewInstance.setViewDataSource(dataSource); // render list items for first time due to no datasource present earlier\n\n      if (!this.domItemCount) {\n        // fresh rendering for first time\n        if ((this.listViewInstance.template || this.listViewInstance.groupTemplate) && !this.isNgTemplate()) {\n          this.listViewInstance.listBaseOption.template = null;\n          this.listViewInstance.listBaseOption.groupTemplate = null;\n          this.listViewInstance.listBaseOption.itemCreated = this.createUIItem.bind(this);\n        }\n\n        this.uiVirtualization(); // when expected expected DOM count doesn't meet the condition we need to create and inject new item into DOM\n      } else if (this.domItemCount < this.expectedDomItemCount) {\n        var ds = this.listViewInstance.findItemFromDS(dataSource, fields);\n\n        if (ds instanceof Array) {\n          if (this.listViewInstance.ulElement) {\n            var index = this.listViewInstance.curViewDS.indexOf(currentItem); // inject new list item into DOM\n\n            this.createAndInjectNewItem(currentItem, index); // check for group header item\n\n            var curViewDS = this.listViewInstance.curViewDS[index - 1];\n\n            if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n              // target group item index in datasource\n              --index; // inject new group header into DOM for previously created list item\n\n              this.createAndInjectNewItem(curViewDS, index);\n            }\n          } // recollect all the list item into collection\n\n\n          this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n        }\n      } else {\n        // eslint-disable-next-line\n        var index = this.listViewInstance.curViewDS.indexOf(currentItem); // virtually new add list item based on the scollbar position\n\n        this.addUiItem(index); // check for group header item needs to be added\n\n        var curViewDS = this.listViewInstance.curViewDS[index - 1];\n\n        if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n          this.addUiItem(index - 1);\n        }\n      }\n    }\n  };\n\n  Virtualization.prototype.createAndInjectNewItem = function (itemData, index) {\n    // generate li item for given datasource\n    var target;\n    var li = ListBase.createListItemFromJson(this.listViewInstance.createElement, // eslint-disable-next-line\n    [itemData], this.listViewInstance.listBaseOption, null, null, this.listViewInstance); // check for target element whether to insert before last item or group item\n\n    if (Object.keys(this.listViewInstance.curViewDS).length - 1 === index) {\n      target = this.listViewInstance.curUL.lastElementChild;\n    } else {\n      // target group header's first child item to append its header\n      target = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 1]) || this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 2]);\n    }\n\n    if (this.listViewInstance.fields.groupBy && this.listViewInstance.curViewDS[index + 1] && this.listViewInstance.curViewDS[index + 1].isHeader) {\n      var targetEle = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index - 1]);\n\n      if (targetEle) {\n        target = targetEle.nextElementSibling;\n      }\n    } // insert before the target element\n\n\n    this.listViewInstance.ulElement.insertBefore(li[0], target); // increment internal DOM count, last index count for new element\n\n    this.domItemCount++;\n\n    if (this.bottomElementHeight <= 0) {\n      this.uiLastIndex++;\n    } // recalculate the current item height, to avoid jumpy scroller\n\n\n    this.refreshItemHeight();\n  };\n\n  Virtualization.prototype.createUIItem = function (args) {\n    var virtualTemplate = this.listViewInstance.template;\n    var template = this.listViewInstance.createElement('div');\n    var commonTemplate = '<div class=\"e-text-content\" role=\"presentation\"> ' + '<span class=\"e-list-text\"> ${' + this.listViewInstance.fields.text + '} </span></div>';\n\n    if (this.listViewInstance.isReact) {\n      commonTemplate = null;\n    }\n\n    if (this.listViewInstance.showCheckBox) {\n      // eslint-disable-next-line\n      this.listViewInstance.renderCheckbox(args);\n\n      if (!isNullOrUndefined(this.listViewInstance.virtualCheckBox) && !isNullOrUndefined(this.listViewInstance.virtualCheckBox.outerHTML)) {\n        var div = document.createElement('div');\n        div.innerHTML = this.listViewInstance.template || commonTemplate;\n\n        if (div.children && div.children[0]) {\n          div.children[0].classList.add('e-checkbox');\n\n          if (this.listViewInstance.checkBoxPosition === 'Left') {\n            div.children[0].classList.add('e-checkbox-left');\n          } else {\n            div.children[0].classList.add('e-checkbox-right');\n          }\n\n          if (this.listViewInstance.checkBoxPosition === 'Left') {\n            div.children[0].insertBefore(this.listViewInstance.virtualCheckBox, div.childNodes[0].children[0]);\n          } else {\n            div.children[0].appendChild(this.listViewInstance.virtualCheckBox);\n          }\n\n          this.listViewInstance.template = div.innerHTML;\n        }\n      }\n\n      if (this.isVueFunctionTemplate()) return;\n      template.innerHTML = this.listViewInstance.template;\n      this.listViewInstance.template = virtualTemplate;\n    } else {\n      if (this.isVueFunctionTemplate()) return;\n      template.innerHTML = this.listViewInstance.template || commonTemplate;\n    } // eslint-disable-next-line\n\n\n    var templateElements = template.getElementsByTagName('*');\n    var groupTemplate = this.listViewInstance.createElement('div');\n\n    if (this.listViewInstance.fields.groupBy) {\n      groupTemplate.innerHTML = this.listViewInstance.groupTemplate || commonTemplate;\n    } // eslint-disable-next-line\n\n\n    var groupTemplateElements = groupTemplate.getElementsByTagName('*');\n\n    if (args.curData.isHeader) {\n      this.headerData = args.curData;\n    }\n\n    this.templateData = args.curData.isHeader ? args.curData.items[0] : args.curData;\n\n    if (!this.listViewInstance.isReact || typeof this.listViewInstance.template == \"string\" && !args.item.classList.contains(\"e-list-group-item\") || typeof this.listViewInstance.groupTemplate == \"string\" && args.item.classList.contains(\"e-list-group-item\")) {\n      args.item.innerHTML = '';\n    }\n\n    args.item.context = {\n      data: args.curData,\n      nodes: {\n        flatTemplateNodes: [],\n        groupTemplateNodes: []\n      }\n    };\n\n    for (var i = 0; i < templateElements.length; i++) {\n      this.compileTemplate(templateElements[i], args.item, false);\n    }\n\n    for (var i = 0; i < groupTemplateElements.length; i++) {\n      this.compileTemplate(groupTemplateElements[i], args.item, true);\n    }\n\n    args.item.context.template = args.curData.isHeader ? template.firstElementChild : groupTemplate.firstElementChild;\n    args.item.context.type = args.curData.isHeader ? 'flatList' : 'groupList';\n    var element = args.curData.isHeader ? groupTemplate : template;\n\n    if (element.firstElementChild) {\n      args.item.insertBefore(element.firstElementChild, null);\n    }\n  };\n\n  Virtualization.prototype.compileTemplate = function (element, item, isHeader) {\n    this.textProperty(element, item, isHeader);\n    this.classProperty(element, item, isHeader);\n    this.attributeProperty(element, item, isHeader);\n  };\n\n  Virtualization.prototype.onChange = function (newData, listElement) {\n    listElement.context.data = newData; // eslint-disable-next-line max-len\n\n    var groupTemplateNodes = listElement.context.nodes.groupTemplateNodes; // eslint-disable-next-line max-len\n\n    var flatTemplateNodes = listElement.context.nodes.flatTemplateNodes; // eslint-disable-next-line\n\n    if (!isNullOrUndefined(newData.isHeader) && newData.isHeader && listElement.context.type === 'groupList') {\n      // eslint-disable-next-line\n      var element = listElement.firstElementChild;\n      detach(listElement.firstElementChild);\n      listElement.insertBefore(listElement.context.template, null);\n      listElement.context.template = element;\n      listElement.context.type = 'flatList';\n\n      for (var i = 0; i < groupTemplateNodes.length; i++) {\n        // eslint-disable-next-line\n        groupTemplateNodes[i].onChange(newData);\n      }\n    } else if (!newData.isHeader && listElement.context.type === 'flatList') {\n      var element = listElement.firstElementChild;\n      detach(listElement.firstElementChild);\n      listElement.insertBefore(listElement.context.template, null);\n      listElement.context.template = element;\n      listElement.context.type = 'groupList';\n\n      for (var i = 0; i < flatTemplateNodes.length; i++) {\n        // eslint-disable-next-line\n        flatTemplateNodes[i].onChange(newData);\n      }\n    } else if (!newData.isHeader) {\n      for (var i = 0; i < flatTemplateNodes.length; i++) {\n        // eslint-disable-next-line\n        flatTemplateNodes[i].onChange(newData);\n      }\n    } else {\n      for (var i = 0; i < groupTemplateNodes.length; i++) {\n        // eslint-disable-next-line\n        groupTemplateNodes[i].onChange(newData);\n      }\n    }\n  }; // eslint-disable-next-line\n\n\n  Virtualization.prototype.updateContextData = function (listElement, node, isHeader) {\n    if (isHeader) {\n      listElement.context.nodes.groupTemplateNodes.push(node);\n    } else {\n      listElement.context.nodes.flatTemplateNodes.push(node);\n    }\n  };\n\n  Virtualization.prototype.classProperty = function (element, listElement, isHeader) {\n    var regex = new RegExp('\\\\${([^}]*)}', 'g');\n    var resultantOutput = [];\n    var regexMatch;\n\n    while (regexMatch !== null) {\n      var match = regex.exec(element.className);\n      resultantOutput.push(match);\n      regexMatch = match;\n\n      if (regexMatch === null) {\n        resultantOutput.pop();\n      }\n    }\n\n    if (resultantOutput && resultantOutput.length) {\n      var _loop_1 = function (i) {\n        var classNameMatch = resultantOutput[i]; // eslint-disable-next-line\n\n        var classFunction;\n\n        if (classNameMatch[1].indexOf('?') !== -1 && classNameMatch[1].indexOf(':') !== -1) {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          classFunction = new Function('data', 'return ' + classNameMatch[1].replace(/\\$/g, 'data.'));\n        } else {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          classFunction = new Function('data', 'return ' + 'data.' + classNameMatch[1]);\n        } // eslint-disable-next-line\n\n\n        var subNode = {};\n\n        if (isHeader) {\n          subNode.bindedvalue = classFunction(this_1.headerData);\n        } else {\n          subNode.bindedvalue = classFunction(this_1.templateData);\n        }\n\n        subNode.onChange = function (value) {\n          if (subNode.bindedvalue) {\n            removeClass([element], subNode.bindedvalue.split(' ').filter(function (css) {\n              return css;\n            }));\n          }\n\n          var newCss = classFunction(value);\n\n          if (newCss) {\n            addClass([element], newCss.split(' ').filter(function (css) {\n              return css;\n            }));\n          }\n\n          subNode.bindedvalue = newCss;\n        };\n\n        var className = classNameMatch[0].split(' ');\n\n        for (var i_1 = 0; i_1 < className.length; i_1++) {\n          element.classList.remove(className[i_1]);\n        }\n\n        if (subNode.bindedvalue) {\n          addClass([element], subNode.bindedvalue.split(' ').filter(function (css) {\n            return css;\n          }));\n        }\n\n        this_1.updateContextData(listElement, subNode, isHeader);\n      };\n\n      var this_1 = this;\n\n      for (var i = 0; i < resultantOutput.length; i++) {\n        _loop_1(i);\n      }\n    }\n  };\n\n  Virtualization.prototype.attributeProperty = function (element, listElement, isHeader) {\n    var attributeNames = [];\n\n    for (var i = 0; i < element.attributes.length; i++) {\n      attributeNames.push(element.attributes[i].nodeName);\n    }\n\n    if (attributeNames.indexOf('class') !== -1) {\n      attributeNames.splice(attributeNames.indexOf('class'), 1);\n    }\n\n    var _loop_2 = function (i) {\n      var attributeName = attributeNames[i];\n      var attrNameMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(attributeName) || [];\n      var attrValueMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(element.getAttribute(attributeName)) || []; // eslint-disable-next-line\n\n      var attributeNameFunction; // eslint-disable-next-line\n\n      var attributeValueFunction;\n\n      if (attrNameMatch.length || attrValueMatch.length) {\n        if (attrNameMatch[1]) {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          attributeNameFunction = new Function('data', 'return ' + 'data.' + attrNameMatch[1]);\n        }\n\n        if (attrValueMatch[1]) {\n          if (attrValueMatch[1].indexOf('?') !== -1 && attrValueMatch[1].indexOf(':') !== -1) {\n            // tslint:disable-next-line:no-function-constructor-with-string-args\n            attributeValueFunction = new Function('data', 'return ' + attrValueMatch[1].replace(/\\$/g, 'data.'));\n          } else {\n            // tslint:disable-next-line:no-function-constructor-with-string-args\n            attributeValueFunction = new Function('data', 'return ' + 'data.' + attrValueMatch[1]);\n          }\n        } // eslint-disable-next-line @typescript-eslint/ban-types\n\n\n        var subNode_1 = {};\n\n        if (isHeader) {\n          subNode_1.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(this_2.headerData), attrValueMatch[1] === undefined ? undefined : attributeValueFunction(this_2.headerData)];\n        } else {\n          subNode_1.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(this_2.templateData), attrValueMatch[1] === undefined ? undefined : attributeValueFunction(this_2.templateData)];\n        }\n\n        subNode_1.attrName = subNode_1.bindedvalue[0] === undefined ? attributeName : subNode_1.bindedvalue[0];\n\n        subNode_1.onChange = function (value) {\n          var bindedvalue = subNode_1.bindedvalue[1] === undefined ? element.getAttribute(subNode_1.attrName) : attributeValueFunction(value);\n          element.removeAttribute(subNode_1.attrName);\n          subNode_1.attrName = subNode_1.bindedvalue[0] === undefined ? subNode_1.attrName : attributeNameFunction(value);\n          element.setAttribute(subNode_1.attrName, bindedvalue);\n          subNode_1.bindedvalue = [subNode_1.bindedvalue[0] === undefined ? undefined : attributeNameFunction(value), subNode_1.bindedvalue[1] === undefined ? undefined : attributeValueFunction(value)];\n        };\n\n        var attributeValue = subNode_1.bindedvalue[1] === undefined ? element.getAttribute(attributeName) : subNode_1.bindedvalue[1];\n        element.removeAttribute(attributeName);\n        element.setAttribute(subNode_1.attrName, attributeValue);\n        this_2.updateContextData(listElement, subNode_1, isHeader);\n      }\n    };\n\n    var this_2 = this;\n\n    for (var i = 0; i < attributeNames.length; i++) {\n      _loop_2(i);\n    }\n  };\n\n  Virtualization.prototype.textProperty = function (element, listElement, isHeader) {\n    var regex = new RegExp('\\\\${([^}]*)}', 'g');\n    var resultantOutput = [];\n    var regexMatch;\n\n    while (regexMatch !== null) {\n      var match = regex.exec(element.innerText);\n      resultantOutput.push(match);\n      regexMatch = match;\n\n      if (regexMatch === null) {\n        resultantOutput.pop();\n      }\n    }\n\n    var isChildHasTextContent = Array.prototype.some.call(element.children, function (element) {\n      if (new RegExp('\\\\${([^}]*)}', 'g').exec(element.innerText)) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n\n    if (resultantOutput && resultantOutput.length && !isChildHasTextContent) {\n      var _loop_3 = function (i) {\n        var textPropertyMatch = resultantOutput[i]; // eslint-disable-next-line\n\n        var subNode = {}; // eslint-disable-next-line\n\n        var textFunction;\n\n        if (textPropertyMatch[1].indexOf('?') !== -1 && textPropertyMatch[1].indexOf(':') !== -1) {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          textFunction = new Function('data', 'return ' + textPropertyMatch[1].replace(/\\$/g, 'data.'));\n        } else {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          textFunction = new Function('data', 'return ' + 'data.' + textPropertyMatch[1]);\n        }\n\n        if (isHeader) {\n          subNode.bindedvalue = textFunction(this_3.headerData);\n        } else {\n          subNode.bindedvalue = textFunction(this_3.templateData);\n        }\n\n        subNode.onChange = function (value) {\n          element.innerText = element.innerText.replace(subNode.bindedvalue, textFunction(value));\n          subNode.bindedvalue = textFunction(value);\n        };\n\n        element.innerText = element.innerText.replace(textPropertyMatch[0], subNode.bindedvalue);\n        this_3.updateContextData(listElement, subNode, isHeader);\n      };\n\n      var this_3 = this;\n\n      for (var i = 0; i < resultantOutput.length; i++) {\n        _loop_3(i);\n      }\n    }\n  };\n\n  Virtualization.prototype.reRenderUiVirtualization = function () {\n    this.wireScrollEvent(true);\n\n    if (this.listViewInstance.contentContainer) {\n      detach(this.listViewInstance.contentContainer);\n    }\n\n    this.listViewInstance.preRender(); // resetting the dom count to 0, to avoid edge case of dataSource suddenly becoming zero\n    // and then manually adding item using addItem API\n\n    this.domItemCount = 0;\n    this.listViewInstance.header();\n    this.listViewInstance.setLocalData();\n  };\n\n  Virtualization.prototype.updateUI = function (element, index, targetElement) {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    var onChange = this.isNgTemplate() ? this.onNgChange : this.isVueFunctionTemplate() ? this.onVueChange : this.onChange;\n\n    if (this.listViewInstance.template || this.listViewInstance.groupTemplate) {\n      var curViewDS = this.listViewInstance.curViewDS[index]; // eslint-disable-next-line\n\n      element.dataset.uid = curViewDS[this.listViewInstance.fields.id] ? // eslint-disable-next-line\n      curViewDS[this.listViewInstance.fields.id] : ListBase.generateId();\n      onChange(curViewDS, element, this);\n    } else {\n      this.updateUiContent(element, index);\n    }\n\n    this.changeElementAttributes(element, index);\n\n    if (targetElement) {\n      this.listViewInstance.ulElement.insertBefore(element, targetElement);\n    }\n  };\n  /**\n   * Handles the UI change in vue for the list view.\n   *\n   * @param {DataSource} newData - The new data source for the list view.\n   * @param {ElementContext} listElement - The HTML element context for the list view.\n   * @param {Virtualization} virtualThis - The virtualization context for the list view.\n   */\n\n\n  Virtualization.prototype.onVueChange = function (newData, listElement, virtualThis) {\n    var liItem = ListBase.createListItemFromJson(virtualThis.listViewInstance.createElement, // eslint-disable-next-line\n    [newData], virtualThis.listViewInstance.listBaseOption, null, null, virtualThis.listViewInstance);\n\n    while (listElement.lastChild) {\n      listElement.removeChild(listElement.lastChild);\n    }\n\n    listElement.appendChild(liItem[0].firstChild);\n  };\n\n  Virtualization.prototype.onNgChange = function (newData, listElement, virtualThis) {\n    // compile given target element with template for new data\n    // eslint-disable-next-line\n    var templateCompiler = compile(virtualThis.listViewInstance.template);\n    var resultElement = templateCompiler(newData);\n\n    while (listElement.lastChild) {\n      listElement.removeChild(listElement.lastChild);\n    }\n\n    listElement.appendChild(resultElement[0]);\n  };\n\n  Virtualization.prototype.getModuleName = function () {\n    return 'virtualization';\n  };\n\n  Virtualization.prototype.destroy = function () {\n    this.wireScrollEvent(true);\n    this.topElement = null;\n    this.bottomElement = null;\n  };\n\n  return Virtualization;\n}();\n\nexport { Virtualization };","map":{"version":3,"sources":["C:/Users/amase/Desktop/open_dsa/openDSA_dashboard/project/node_modules/@syncfusion/ej2-react-lists/node_modules/@syncfusion/ej2-lists/src/list-view/virtualization.js"],"names":["classNames","EventHandler","append","isNullOrUndefined","detach","removeClass","addClass","compile","formatUnit","ListBase","DataManager","listElementCount","windowElementCount","Virtualization","instance","elementDifference","listViewInstance","prototype","isNgTemplate","templateRef","isVueFunctionTemplate","isVue","template","uiVirtualization","wireScrollEvent","curViewDS","firstDs","slice","ulElement","curUL","createList","createElement","listBaseOption","contentContainer","className","content","element","appendChild","listItemHeight","firstElementChild","getBoundingClientRect","height","expectedDomItemCount","ValidateItemCount","domItemCount","Object","keys","length","uiFirstIndex","uiLastIndex","otherDs","listItems","createListItemFromJson","liCollection","querySelectorAll","topElement","insertBefore","bottomElement","totalHeight","style","topElementHeight","bottomElementHeight","listDiff","uiIndicesInitialization","destroy","isWindow","onVirtualScroll","onVirtualUiScroll","bind","window","addEventListener","add","removeEventListener","updateUl","remove","updateUlContainer","e","virtualElementContainer","querySelector","liElementHeight","updateLiElementHeight","Math","round","target","documentElement","scrollTop","top","dataSourceLength","parseFloat","itemCount","innerHeight","indexOf","uiIndices","data","i","showCheckBox","fields","isChecked","activeIndices","push","enabled","disabledItemIndices","items","listItem","index","context","viewContainerRef","get","refreshItemHeight","nextSibling","getscrollerHeight","startingHeight","pageYOffset","_a","document","headerEle","scrollPosition","scroll","floor","onLongScroll","onNormalScroll","onUIScrolled","isScrollingDown","elements","updateUI","nextElementSibling","previousElementSibling","updateUiContent","curViewDs","dataSource","dataset","uid","generateId","getElementsByClassName","listItemText","innerHTML","toString","id","text","showIcon","listIcon","iconCss","textContent","groupBy","checkListWrapper","checkboxWrapper","cloneNode","isHeader","classList","checklist","checkbox","changeElementAttributes","disable","display","hiddenItemIndices","checklistElement","selected","focused","removeAttribute","checked","setAttribute","activeIndex","contains","groupListItem","findDSAndIndexFromId","ds","_this","resultJSON","getElementUID","some","getSelectedItems","dataCollection","textCollection","curViewDS_1","indices","map","curViewDS_2","indexArray","dataSource_1","undefined","selectItem","obj","resutJSON","isSelected","splice","getLiFromObjOrElement","setCheckboxLI","setSelectLI","eventArgs","trigger","removeSelect","enableItem","disableItem","showItem","hideItem","removeItem","removeUiItem","listDataSource","localData","setViewDataSource","li","Array","call","checkedItem","addUiItem","changeUiIndices","liItem","lastElementChild","previousSibling","scrollTo","increment","ind","addItem","currentItem","groupTemplate","itemCreated","createUIItem","findItemFromDS","createAndInjectNewItem","itemData","targetEle","args","virtualTemplate","commonTemplate","isReact","renderCheckbox","virtualCheckBox","outerHTML","div","children","checkBoxPosition","childNodes","templateElements","getElementsByTagName","groupTemplateElements","curData","headerData","templateData","item","nodes","flatTemplateNodes","groupTemplateNodes","compileTemplate","type","textProperty","classProperty","attributeProperty","onChange","newData","listElement","updateContextData","node","regex","RegExp","resultantOutput","regexMatch","match","exec","pop","_loop_1","classNameMatch","classFunction","Function","replace","subNode","bindedvalue","this_1","value","split","filter","css","newCss","i_1","attributeNames","attributes","nodeName","_loop_2","attributeName","attrNameMatch","attrValueMatch","getAttribute","attributeNameFunction","attributeValueFunction","subNode_1","this_2","attrName","attributeValue","innerText","isChildHasTextContent","_loop_3","textPropertyMatch","textFunction","this_3","reRenderUiVirtualization","preRender","header","setLocalData","targetElement","onNgChange","onVueChange","virtualThis","lastChild","removeChild","firstChild","templateCompiler","resultElement","getModuleName"],"mappings":"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","sourcesContent":["import { classNames } from './list-view';\nimport { EventHandler, append, isNullOrUndefined, detach, removeClass, addClass, compile, formatUnit } from '@syncfusion/ej2-base';\nimport { ListBase } from '../common/list-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nvar listElementCount = 1.5;\nvar windowElementCount = 3;\nvar Virtualization = /** @class */ (function () {\n    function Virtualization(instance) {\n        this.elementDifference = 0;\n        this.listViewInstance = instance;\n    }\n    /**\n     * For internal use only.\n     *\n     * @private\n     */\n    Virtualization.prototype.isNgTemplate = function () {\n        return !isNullOrUndefined(this.listViewInstance.templateRef) && typeof this.listViewInstance.templateRef !== 'string';\n    };\n    /**\n     * Checks if the platform is a Vue and its template property is a function type.\n     *\n     * @returns {boolean} indicating the result of the check\n     */\n    Virtualization.prototype.isVueFunctionTemplate = function () {\n        return this.listViewInstance.isVue && typeof this.listViewInstance.template === 'function';\n    };\n    /**\n     * For internal use only.\n     *\n     * @private\n     */\n    Virtualization.prototype.uiVirtualization = function () {\n        this.wireScrollEvent(false);\n        var curViewDS = this.listViewInstance.curViewDS;\n        var firstDs = curViewDS.slice(0, 1);\n        this.listViewInstance.ulElement = this.listViewInstance.curUL = ListBase.createList(\n        // eslint-disable-next-line\n        this.listViewInstance.createElement, firstDs, this.listViewInstance.listBaseOption, null, this.listViewInstance);\n        this.listViewInstance.contentContainer = this.listViewInstance.createElement('div', { className: classNames.content });\n        this.listViewInstance.element.appendChild(this.listViewInstance.contentContainer);\n        this.listViewInstance.contentContainer.appendChild(this.listViewInstance.ulElement);\n        this.listItemHeight = this.listViewInstance.ulElement.firstElementChild.getBoundingClientRect().height;\n        this.expectedDomItemCount = this.ValidateItemCount(10000);\n        this.domItemCount = this.ValidateItemCount(Object.keys(this.listViewInstance.curViewDS).length);\n        this.uiFirstIndex = 0;\n        this.uiLastIndex = this.domItemCount - 1;\n        var otherDs = curViewDS.slice(1, this.domItemCount);\n        var listItems = ListBase.createListItemFromJson(\n        // eslint-disable-next-line\n        this.listViewInstance.createElement, otherDs, this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n        append(listItems, this.listViewInstance.ulElement);\n        this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n        this.topElement = this.listViewInstance.createElement('div');\n        this.listViewInstance.ulElement.insertBefore(this.topElement, this.listViewInstance.ulElement.firstElementChild);\n        this.bottomElement = this.listViewInstance.createElement('div');\n        this.listViewInstance.ulElement.insertBefore(this.bottomElement, null);\n        this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n        this.topElement.style.height = 0 + 'px';\n        this.bottomElement.style.height = this.totalHeight + 'px';\n        this.topElementHeight = 0;\n        this.bottomElementHeight = this.totalHeight;\n        this.listDiff = 0;\n        this.uiIndicesInitialization();\n    };\n    Virtualization.prototype.wireScrollEvent = function (destroy) {\n        if (!destroy) {\n            if (this.listViewInstance.isWindow) {\n                this.onVirtualScroll = this.onVirtualUiScroll.bind(this);\n                window.addEventListener('scroll', this.onVirtualScroll);\n            }\n            else {\n                EventHandler.add(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll, this);\n            }\n        }\n        else {\n            if (this.listViewInstance.isWindow === true) {\n                window.removeEventListener('scroll', this.onVirtualScroll);\n                window.removeEventListener('scroll', this.updateUl);\n            }\n            else {\n                EventHandler.remove(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll);\n                EventHandler.remove(this.listViewInstance.element, 'scroll', this.updateUlContainer);\n            }\n        }\n    };\n    Virtualization.prototype.updateUlContainer = function (e) {\n        var listDiff;\n        var virtualElementContainer = this.listViewInstance.ulElement.querySelector('.' + classNames.virtualElementContainer);\n        if (isNullOrUndefined(this.listViewInstance.liElementHeight)) {\n            this.listViewInstance.updateLiElementHeight();\n        }\n        if (this.listViewInstance.isWindow) {\n            // eslint-disable-next-line\n            listDiff = Math.round(e.target.documentElement.scrollTop / this.listViewInstance.liElementHeight) - 2;\n        }\n        else {\n            // eslint-disable-next-line\n            listDiff = Math.round(e.target.scrollTop / this.listViewInstance.liElementHeight) - 2;\n        }\n        if (((listDiff - 1) * this.listViewInstance.liElementHeight) < 0) {\n            virtualElementContainer.style.top = '0px';\n        }\n        else {\n            virtualElementContainer.style.top = (listDiff) * this.listViewInstance.liElementHeight + 'px';\n        }\n    };\n    Virtualization.prototype.ValidateItemCount = function (dataSourceLength) {\n        var height = parseFloat(formatUnit(this.listViewInstance.height));\n        var itemCount;\n        if (this.listViewInstance.isWindow) {\n            itemCount = Math.round((window.innerHeight / this.listItemHeight) * windowElementCount);\n        }\n        else {\n            if (typeof this.listViewInstance.height === 'string' && this.listViewInstance.height.indexOf('%') !== -1) {\n                // eslint-disable-next-line max-len\n                itemCount = Math.round((this.listViewInstance.element.getBoundingClientRect().height / this.listItemHeight) * listElementCount);\n            }\n            else {\n                itemCount = Math.round((height / this.listItemHeight) * listElementCount);\n            }\n        }\n        if (itemCount > dataSourceLength) {\n            itemCount = dataSourceLength;\n        }\n        return itemCount;\n    };\n    Virtualization.prototype.uiIndicesInitialization = function () {\n        this.uiIndices = { 'activeIndices': [], 'disabledItemIndices': [], 'hiddenItemIndices': [] };\n        var data = this.listViewInstance.curViewDS;\n        for (var i = 0; i < data.length; i++) {\n            if (this.listViewInstance.showCheckBox && data[i][this.listViewInstance.fields.isChecked]) {\n                this.uiIndices.activeIndices.push(i);\n            }\n            // eslint-disable-next-line\n            if (!isNullOrUndefined(data[i][this.listViewInstance.fields.enabled]) &&\n                !data[i][this.listViewInstance.fields.enabled]) {\n                // eslint-disable-next-line\n                (this.uiIndices.disabledItemIndices.push(i));\n            }\n        }\n        if (this.isNgTemplate()) {\n            var items = this.listViewInstance.element.querySelectorAll('.' + classNames.listItem);\n            for (var index = 0; index < items.length; index++) {\n                items[index].context = this.listViewInstance.viewContainerRef.get(index).context;\n            }\n        }\n    };\n    Virtualization.prototype.refreshItemHeight = function () {\n        if (this.listViewInstance.curViewDS.length) {\n            var curViewDS = this.listViewInstance.curViewDS;\n            this.listItemHeight = this.topElement.nextSibling.getBoundingClientRect().height;\n            this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n            this.bottomElementHeight = this.totalHeight;\n            this.bottomElement.style.height = this.totalHeight + 'px';\n        }\n    };\n    Virtualization.prototype.getscrollerHeight = function (startingHeight) {\n        return this.listViewInstance.isWindow ? (((pageYOffset - startingHeight) <= 0) ? 0 :\n            (pageYOffset - startingHeight)) : ((this.listViewInstance.element.scrollTop - startingHeight) <= 0) ? 0 :\n            (this.listViewInstance.element.scrollTop - startingHeight);\n    };\n    Virtualization.prototype.onVirtualUiScroll = function (e) {\n        var _a;\n        var startingHeight;\n        if (this.listViewInstance.isWindow) {\n            startingHeight = this.listViewInstance.ulElement.getBoundingClientRect().top -\n                document.documentElement.getBoundingClientRect().top;\n        }\n        else {\n            startingHeight = this.listViewInstance.headerEle ? this.listViewInstance.headerEle.getBoundingClientRect().height : 0;\n        }\n        this.scrollPosition = isNullOrUndefined(this.scrollPosition) ? 0 : this.scrollPosition;\n        var scroll = this.getscrollerHeight(startingHeight);\n        this.topElementHeight = this.listItemHeight * Math.floor(scroll / this.listItemHeight);\n        this.bottomElementHeight = this.totalHeight - this.topElementHeight;\n        _a = scroll <= this.totalHeight ?\n            [this.topElementHeight, this.bottomElementHeight] : [this.totalHeight, 0], this.topElementHeight = _a[0], this.bottomElementHeight = _a[1];\n        if (this.topElementHeight !== parseFloat(this.topElement.style.height)) {\n            this.topElement.style.height = this.topElementHeight + 'px';\n            this.bottomElement.style.height = this.bottomElementHeight + 'px';\n            if (scroll > this.scrollPosition) {\n                var listDiff = Math.round(((this.topElementHeight / this.listItemHeight) - this.listDiff));\n                if (listDiff > (this.expectedDomItemCount + 5)) {\n                    this.onLongScroll(listDiff, true);\n                }\n                else {\n                    this.onNormalScroll(listDiff, true);\n                }\n            }\n            else {\n                var listDiff = Math.round((this.listDiff - (this.topElementHeight / this.listItemHeight)));\n                if (listDiff > (this.expectedDomItemCount + 5)) {\n                    this.onLongScroll(listDiff, false);\n                }\n                else {\n                    this.onNormalScroll(listDiff, false);\n                }\n            }\n        }\n        this.listDiff = Math.round(this.topElementHeight / this.listItemHeight);\n        if (typeof this.listViewInstance.onUIScrolled === 'function') {\n            this.listViewInstance.onUIScrolled();\n        }\n        this.scrollPosition = scroll;\n    };\n    Virtualization.prototype.onLongScroll = function (listDiff, isScrollingDown) {\n        var index = isScrollingDown ? (this.uiFirstIndex + listDiff) : (this.uiFirstIndex - listDiff);\n        var elements = this.listViewInstance.ulElement.querySelectorAll('li');\n        for (var i = 0; i < elements.length; i++) {\n            this.updateUI(elements[i], index);\n            index++;\n        }\n        this.uiLastIndex = isScrollingDown ? (this.uiLastIndex + listDiff) : (this.uiLastIndex - listDiff);\n        this.uiFirstIndex = isScrollingDown ? (this.uiFirstIndex + listDiff) : (this.uiFirstIndex - listDiff);\n    };\n    Virtualization.prototype.onNormalScroll = function (listDiff, isScrollingDown) {\n        if (isScrollingDown) {\n            for (var i = 0; i < listDiff; i++) {\n                var index = ++this.uiLastIndex;\n                this.updateUI(this.topElement.nextElementSibling, index, this.bottomElement);\n                this.uiFirstIndex++;\n            }\n        }\n        else {\n            for (var i = 0; i < listDiff; i++) {\n                var index = --this.uiFirstIndex;\n                var target = this.topElement.nextSibling;\n                this.updateUI(this.bottomElement.previousElementSibling, index, target);\n                this.uiLastIndex--;\n            }\n        }\n    };\n    Virtualization.prototype.updateUiContent = function (element, index) {\n        // eslint-disable-next-line\n        var curViewDs = this.listViewInstance.curViewDS;\n        if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n            typeof this.listViewInstance.dataSource[0] === 'number') {\n            element.dataset.uid = ListBase.generateId();\n            element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n                this.listViewInstance.curViewDS[index].toString();\n        }\n        else {\n            // eslint-disable-next-line\n            element.dataset.uid = (curViewDs[index][this.listViewInstance.fields.id]) ?\n                // eslint-disable-next-line\n                (curViewDs[index][this.listViewInstance.fields.id]) : ListBase.generateId();\n            element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n                // eslint-disable-next-line\n                (curViewDs[index][this.listViewInstance.fields.text]);\n        }\n        if (this.listViewInstance.showIcon) {\n            if (element.querySelector('.' + classNames.listIcon)) {\n                detach(element.querySelector('.' + classNames.listIcon));\n            }\n            if (this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]) {\n                var textContent = element.querySelector('.' + classNames.textContent);\n                var target = this.listViewInstance.createElement('div', {\n                    className: classNames.listIcon + ' ' +\n                        this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]\n                });\n                textContent.insertBefore(target, element.querySelector('.' + classNames.listItemText));\n            }\n        }\n        if (this.listViewInstance.showCheckBox && this.listViewInstance.fields.groupBy) {\n            if (!this.checkListWrapper) {\n                this.checkListWrapper = this.listViewInstance.curUL.querySelector('.' + classNames.checkboxWrapper).cloneNode(true);\n            }\n            var textContent = element.querySelector('.' + classNames.textContent);\n            if (this.listViewInstance.curViewDS[index].isHeader) {\n                if (element.querySelector('.' + classNames.checkboxWrapper)) {\n                    element.classList.remove(classNames.checklist);\n                    textContent.classList.remove(classNames.checkbox);\n                    detach(element.querySelector('.' + classNames.checkboxWrapper));\n                }\n            }\n            else {\n                if (!element.querySelector('.' + classNames.checkboxWrapper)) {\n                    element.classList.add(classNames.checklist);\n                    textContent.classList.add(classNames.checkbox);\n                    textContent.insertBefore(this.checkListWrapper.cloneNode(true), element.querySelector('.' + classNames.listItemText));\n                }\n            }\n        }\n    };\n    Virtualization.prototype.changeElementAttributes = function (element, index) {\n        element.classList.remove(classNames.disable);\n        if (this.uiIndices.disabledItemIndices.length && this.uiIndices.disabledItemIndices.indexOf(index) !== -1) {\n            element.classList.add(classNames.disable);\n        }\n        element.style.display = '';\n        if (this.uiIndices.hiddenItemIndices.length && this.uiIndices.hiddenItemIndices.indexOf(index) !== -1) {\n            element.style.display = 'none';\n        }\n        if (this.listViewInstance.showCheckBox) {\n            var checklistElement = element.querySelector('.' + classNames.checkboxWrapper);\n            element.classList.remove(classNames.selected);\n            element.classList.remove(classNames.focused);\n            if (checklistElement) {\n                checklistElement.removeAttribute('aria-checked');\n                checklistElement.firstElementChild.classList.remove(classNames.checked);\n            }\n            if (this.uiIndices.activeIndices.length && this.uiIndices.activeIndices.indexOf(index) !== -1 &&\n                !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n                element.classList.add(classNames.selected);\n                checklistElement.firstElementChild.classList.add(classNames.checked);\n                checklistElement.setAttribute('aria-checked', 'true');\n                if (this.activeIndex === index) {\n                    element.classList.add(classNames.focused);\n                }\n            }\n        }\n        else {\n            element.classList.remove(classNames.selected);\n            element.removeAttribute('aria-selected');\n            if (!isNullOrUndefined(this.activeIndex) && this.activeIndex === index &&\n                !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n                element.classList.add(classNames.selected);\n                element.setAttribute('aria-selected', 'true');\n            }\n        }\n        if (this.listViewInstance.fields.groupBy) {\n            if (this.listViewInstance.curViewDS[index].isHeader) {\n                if (element.classList.contains(classNames.listItem)) {\n                    element.classList.remove(classNames.listItem);\n                    element.setAttribute('role', 'group');\n                    element.classList.add(classNames.groupListItem);\n                }\n            }\n            else {\n                if (element.classList.contains(classNames.groupListItem)) {\n                    element.classList.remove(classNames.groupListItem);\n                    element.setAttribute('role', 'listitem');\n                    element.classList.add(classNames.listItem);\n                }\n            }\n        }\n    };\n    Virtualization.prototype.findDSAndIndexFromId = function (ds, fields) {\n        var _this = this;\n        var resultJSON = {};\n        fields = this.listViewInstance.getElementUID(fields);\n        if (!isNullOrUndefined(fields)) {\n            ds.some(function (data, index) {\n                if ((fields[_this.listViewInstance.fields.id] &&\n                    // eslint-disable-next-line\n                    fields[_this.listViewInstance.fields.id]\n                        // eslint-disable-next-line\n                        === (data[_this.listViewInstance.fields.id] && data[_this.listViewInstance.fields.id]) || fields === data)) {\n                    resultJSON.index = index;\n                    resultJSON.data = data;\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            });\n        }\n        return resultJSON;\n    };\n    Virtualization.prototype.getSelectedItems = function () {\n        var _this = this;\n        if (!isNullOrUndefined(this.activeIndex) || (this.listViewInstance.showCheckBox && this.uiIndices.activeIndices.length)) {\n            var dataCollection = [];\n            var textCollection = [];\n            if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n                typeof this.listViewInstance.dataSource[0] === 'number') {\n                var curViewDS_1 = this.listViewInstance.curViewDS;\n                if (this.listViewInstance.showCheckBox) {\n                    var indices = this.uiIndices.activeIndices;\n                    for (var i = 0; i < indices.length; i++) {\n                        dataCollection.push(curViewDS_1[indices[i]]);\n                    }\n                    return {\n                        text: dataCollection,\n                        // eslint-disable-next-line\n                        data: dataCollection,\n                        index: this.uiIndices.activeIndices.map(function (index) {\n                            return _this.listViewInstance.dataSource.indexOf(curViewDS_1[index]);\n                        })\n                    };\n                }\n                else {\n                    return {\n                        text: curViewDS_1[this.activeIndex],\n                        data: curViewDS_1[this.activeIndex],\n                        index: this.listViewInstance.dataSource.indexOf(curViewDS_1[this.activeIndex])\n                    };\n                }\n            }\n            else {\n                var curViewDS_2 = this.listViewInstance.curViewDS;\n                var text = this.listViewInstance.fields.text;\n                if (this.listViewInstance.showCheckBox) {\n                    var indexArray = this.uiIndices.activeIndices;\n                    for (var i = 0; i < indexArray.length; i++) {\n                        textCollection.push(curViewDS_2[indexArray[i]][\"\" + text]);\n                        // eslint-disable-next-line\n                        dataCollection.push(curViewDS_2[indexArray[i]]);\n                    }\n                    // eslint-disable-next-line\n                    var dataSource_1 = this.listViewInstance.dataSource instanceof DataManager\n                        ? curViewDS_2 : this.listViewInstance.dataSource;\n                    return {\n                        text: textCollection,\n                        // eslint-disable-next-line\n                        data: dataCollection,\n                        index: this.uiIndices.activeIndices.map(function (index) {\n                            return dataSource_1.indexOf(curViewDS_2[index]);\n                        })\n                    };\n                }\n                else {\n                    // eslint-disable-next-line\n                    var dataSource = this.listViewInstance.dataSource instanceof DataManager\n                        ? curViewDS_2 : this.listViewInstance.dataSource;\n                    return {\n                        text: curViewDS_2[this.activeIndex][this.listViewInstance.fields.text],\n                        // eslint-disable-next-line\n                        data: curViewDS_2[this.activeIndex],\n                        index: dataSource.indexOf(curViewDS_2[this.activeIndex])\n                    };\n                }\n            }\n        }\n        else {\n            return undefined;\n        }\n    };\n    Virtualization.prototype.selectItem = function (obj) {\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            var isSelected = this.activeIndex === resutJSON.index;\n            var isChecked = void 0;\n            this.activeIndex = resutJSON.index;\n            if (this.listViewInstance.showCheckBox) {\n                if (this.uiIndices.activeIndices.indexOf(resutJSON.index) === -1) {\n                    isChecked = true;\n                    this.uiIndices.activeIndices.push(resutJSON.index);\n                }\n                else {\n                    isChecked = false;\n                    this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(resutJSON.index), 1);\n                }\n                if (this.listViewInstance.curUL.querySelector('.' + classNames.focused)) {\n                    this.listViewInstance.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n                }\n            }\n            if (this.listViewInstance.getLiFromObjOrElement(obj)) {\n                if (this.listViewInstance.showCheckBox) {\n                    this.listViewInstance.setCheckboxLI(this.listViewInstance.getLiFromObjOrElement(obj));\n                }\n                else {\n                    this.listViewInstance.setSelectLI(this.listViewInstance.getLiFromObjOrElement(obj));\n                }\n            }\n            else {\n                // eslint-disable-next-line\n                var eventArgs = void 0;\n                if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n                    typeof this.listViewInstance.dataSource[0] === 'number') {\n                    eventArgs = {\n                        text: this.listViewInstance.curViewDS[this.activeIndex],\n                        data: this.listViewInstance.curViewDS[this.activeIndex],\n                        index: this.activeIndex\n                    };\n                }\n                else {\n                    var curViewDS = this.listViewInstance.curViewDS;\n                    eventArgs = {\n                        text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n                        data: curViewDS[this.activeIndex],\n                        index: this.activeIndex\n                    };\n                }\n                if (this.listViewInstance.showCheckBox) {\n                    eventArgs.isChecked = isChecked;\n                    this.listViewInstance.trigger('select', eventArgs);\n                }\n                else if (!isSelected) {\n                    this.listViewInstance.removeSelect();\n                    this.listViewInstance.trigger('select', eventArgs);\n                }\n            }\n        }\n        else if (isNullOrUndefined(obj) && !this.listViewInstance.showCheckBox) {\n            this.listViewInstance.removeSelect();\n            this.activeIndex = undefined;\n        }\n    };\n    Virtualization.prototype.enableItem = function (obj) {\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(resutJSON.index), 1);\n        }\n    };\n    Virtualization.prototype.disableItem = function (obj) {\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length && this.uiIndices.disabledItemIndices.indexOf(resutJSON.index) === -1) {\n            this.uiIndices.disabledItemIndices.push(resutJSON.index);\n        }\n    };\n    Virtualization.prototype.showItem = function (obj) {\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index), 1);\n        }\n    };\n    Virtualization.prototype.hideItem = function (obj) {\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length && this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index) === -1) {\n            this.uiIndices.hiddenItemIndices.push(resutJSON.index);\n        }\n    };\n    Virtualization.prototype.removeItem = function (obj) {\n        var dataSource;\n        var curViewDS = this.listViewInstance.curViewDS;\n        // eslint-disable-next-line\n        var resutJSON = this.findDSAndIndexFromId(curViewDS, obj);\n        // eslint-disable-next-line\n        if (Object.keys(resutJSON).length) {\n            dataSource = resutJSON.data;\n            if (curViewDS[resutJSON.index - 1] &&\n                curViewDS[resutJSON.index - 1].isHeader &&\n                (curViewDS[resutJSON.index - 1])\n                    .items.length === 1) {\n                this.removeUiItem(resutJSON.index - 1);\n                this.removeUiItem(resutJSON.index - 1);\n            }\n            else {\n                this.removeUiItem(resutJSON.index);\n            }\n        }\n        var listDataSource = this.listViewInstance.dataSource instanceof DataManager\n            ? this.listViewInstance.localData : this.listViewInstance.dataSource;\n        var index = listDataSource.indexOf(dataSource);\n        if (index !== -1) {\n            listDataSource.splice(index, 1);\n            this.listViewInstance.setViewDataSource(listDataSource);\n        }\n        // recollect all the list item into collection\n        this.listViewInstance.liCollection =\n            this.listViewInstance.curUL.querySelectorAll('li');\n    };\n    // eslint-disable-next-line\n    Virtualization.prototype.setCheckboxLI = function (li, e) {\n        var index = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n        this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n        if (li.classList.contains(classNames.selected)) {\n            if (this.uiIndices.activeIndices.indexOf(index) === -1) {\n                this.uiIndices.activeIndices.push(index);\n            }\n        }\n        else {\n            this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n        }\n    };\n    // eslint-disable-next-line\n    Virtualization.prototype.setSelectLI = function (li, e) {\n        this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    };\n    Virtualization.prototype.checkedItem = function (checked) {\n        if (checked) {\n            this.uiIndices.activeIndices = [];\n            this.activeIndex = undefined;\n            var data = this.listViewInstance.curViewDS;\n            for (var index = 0; index < data.length; index++) {\n                if (!data[index].isHeader) {\n                    this.uiIndices.activeIndices.push(index);\n                }\n            }\n        }\n        else {\n            this.activeIndex = undefined;\n            this.uiIndices.activeIndices = [];\n        }\n    };\n    Virtualization.prototype.addUiItem = function (index) {\n        // virtually new add list item based on the scollbar position\n        // if the scroll bar is at the top, just pretend the new item has been added since no UI\n        // change is required for the item that has been added at last but when scroll bar is at the bottom\n        // just detach top and inject into bottom to mimic new item is added\n        var curViewDs = this.listViewInstance.curViewDS;\n        this.changeUiIndices(index, true);\n        if (this.activeIndex && this.activeIndex >= index) {\n            this.activeIndex++;\n        }\n        if (this.listViewInstance.showCheckBox &&\n            curViewDs[index][this.listViewInstance.fields.isChecked]) {\n            this.uiIndices.activeIndices.push(index);\n        }\n        if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n            this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n        }\n        if (parseFloat(this.bottomElement.style.height)) {\n            var liItem = this.listViewInstance.curUL.lastElementChild.previousSibling;\n            var target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) ||\n                this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n            if (target) {\n                this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n                this.updateUI(liItem, index, target);\n            }\n        }\n        else {\n            var liItem = this.listViewInstance.curUL.firstElementChild.nextSibling;\n            var target = void 0;\n            if ((Object.keys(this.listViewInstance.curViewDS).length - 1) === index) {\n                target = this.listViewInstance.curUL.lastElementChild;\n            }\n            else {\n                target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) ||\n                    this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n            }\n            this.topElement.style.height = parseFloat(this.topElement.style.height) + this.listItemHeight + 'px';\n            this.uiFirstIndex++;\n            this.uiLastIndex++;\n            if (target) {\n                this.updateUI(liItem, index, target);\n                if (this.listViewInstance.isWindow === true) {\n                    window.scrollTo(0, (pageYOffset + this.listItemHeight));\n                }\n                else {\n                    this.listViewInstance.element.scrollTop += this.listItemHeight;\n                }\n            }\n        }\n        this.totalHeight += this.listItemHeight;\n        this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n    };\n    Virtualization.prototype.removeUiItem = function (index) {\n        this.totalHeight -= this.listItemHeight;\n        var curViewDS = this.listViewInstance.curViewDS[index];\n        var liItem = this.listViewInstance.getLiFromObjOrElement(curViewDS);\n        this.listViewInstance.curViewDS.splice(index, 1);\n        if (this.activeIndex && this.activeIndex >= index) {\n            this.activeIndex--;\n        }\n        if (liItem) {\n            if (this.domItemCount > Object.keys(this.listViewInstance.curViewDS).length) {\n                detach(liItem);\n                this.domItemCount--;\n                this.uiLastIndex--;\n                this.totalHeight = 0;\n            }\n            else {\n                if (liItem.classList.contains(classNames.disable)) {\n                    liItem.classList.remove(classNames.disable);\n                    this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(index), 1);\n                }\n                if (liItem.style.display === 'none') {\n                    liItem.style.display = '';\n                    this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(index), 1);\n                }\n                if (this.listViewInstance.showCheckBox && liItem.classList.contains(classNames.selected)) {\n                    this.listViewInstance.removeSelect();\n                    this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n                    var checklistElement = liItem.querySelector('.' + classNames.checkboxWrapper);\n                    checklistElement.removeAttribute('aria-checked');\n                    checklistElement.firstElementChild.classList.remove(classNames.checked);\n                    if (liItem.classList.contains(classNames.focused)) {\n                        liItem.classList.remove(classNames.focused);\n                        this.activeIndex = undefined;\n                    }\n                }\n                else if (liItem.classList.contains(classNames.selected)) {\n                    this.listViewInstance.removeSelect();\n                    this.activeIndex = undefined;\n                }\n                if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n                    this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n                }\n                else if (parseFloat(this.bottomElement.style.height)) {\n                    this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) - this.listItemHeight + 'px';\n                    this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n                }\n                else {\n                    this.topElement.style.height = parseFloat(this.topElement.style.height) - this.listItemHeight + 'px';\n                    this.updateUI(liItem, (this.uiFirstIndex - 1), this.topElement.nextSibling);\n                    this.uiLastIndex--;\n                    this.uiFirstIndex--;\n                }\n            }\n        }\n        this.changeUiIndices(index, false);\n        this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n    };\n    Virtualization.prototype.changeUiIndices = function (index, increment) {\n        var keys = Object.keys(this.uiIndices);\n        for (var ind = 0; ind < keys.length; ind++) {\n            this.uiIndices[keys[ind]] = this.uiIndices[keys[ind]].map(function (i) {\n                if (i >= index) {\n                    return increment ? ++i : --i;\n                }\n                else {\n                    return i;\n                }\n            });\n        }\n    };\n    Virtualization.prototype.addItem = function (data, fields, dataSource) {\n        for (var i = 0; i < data.length; i++) {\n            var currentItem = data[i];\n            // push the given data to main data array\n            dataSource.push(currentItem);\n            // recalculate all the group data or other datasource related things\n            this.listViewInstance.setViewDataSource(dataSource);\n            // render list items for first time due to no datasource present earlier\n            if (!this.domItemCount) {\n                // fresh rendering for first time\n                if ((this.listViewInstance.template || this.listViewInstance.groupTemplate) && !this.isNgTemplate()) {\n                    this.listViewInstance.listBaseOption.template = null;\n                    this.listViewInstance.listBaseOption.groupTemplate = null;\n                    this.listViewInstance.listBaseOption.itemCreated = this.createUIItem.bind(this);\n                }\n                this.uiVirtualization();\n                // when expected expected DOM count doesn't meet the condition we need to create and inject new item into DOM\n            }\n            else if (this.domItemCount < this.expectedDomItemCount) {\n                var ds = this.listViewInstance.findItemFromDS(dataSource, fields);\n                if (ds instanceof Array) {\n                    if (this.listViewInstance.ulElement) {\n                        var index = this.listViewInstance.curViewDS.indexOf(currentItem);\n                        // inject new list item into DOM\n                        this.createAndInjectNewItem(currentItem, index);\n                        // check for group header item\n                        var curViewDS = this.listViewInstance.curViewDS[index - 1];\n                        if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                            // target group item index in datasource\n                            --index;\n                            // inject new group header into DOM for previously created list item\n                            this.createAndInjectNewItem(curViewDS, index);\n                        }\n                    }\n                    // recollect all the list item into collection\n                    this.listViewInstance.liCollection =\n                        this.listViewInstance.curUL.querySelectorAll('li');\n                }\n            }\n            else {\n                // eslint-disable-next-line\n                var index = this.listViewInstance.curViewDS.indexOf(currentItem);\n                // virtually new add list item based on the scollbar position\n                this.addUiItem(index);\n                // check for group header item needs to be added\n                var curViewDS = this.listViewInstance.curViewDS[index - 1];\n                if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                    this.addUiItem(index - 1);\n                }\n            }\n        }\n    };\n    Virtualization.prototype.createAndInjectNewItem = function (itemData, index) {\n        // generate li item for given datasource\n        var target;\n        var li = ListBase.createListItemFromJson(this.listViewInstance.createElement, \n        // eslint-disable-next-line\n        [itemData], this.listViewInstance.listBaseOption, null, null, this.listViewInstance);\n        // check for target element whether to insert before last item or group item\n        if ((Object.keys(this.listViewInstance.curViewDS).length - 1) === index) {\n            target = this.listViewInstance.curUL.lastElementChild;\n        }\n        else {\n            // target group header's first child item to append its header\n            target = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 1]) ||\n                this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 2]);\n        }\n        if (this.listViewInstance.fields.groupBy && this.listViewInstance.curViewDS[index + 1] && this.listViewInstance.curViewDS[index + 1].isHeader) {\n            var targetEle = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index - 1]);\n            if (targetEle) {\n                target = targetEle.nextElementSibling;\n            }\n        }\n        // insert before the target element\n        this.listViewInstance.ulElement.insertBefore(li[0], target);\n        // increment internal DOM count, last index count for new element\n        this.domItemCount++;\n        if (this.bottomElementHeight <= 0) {\n            this.uiLastIndex++;\n        }\n        // recalculate the current item height, to avoid jumpy scroller\n        this.refreshItemHeight();\n    };\n    Virtualization.prototype.createUIItem = function (args) {\n        var virtualTemplate = this.listViewInstance.template;\n        var template = this.listViewInstance.createElement('div');\n        var commonTemplate = '<div class=\"e-text-content\" role=\"presentation\"> ' +\n            '<span class=\"e-list-text\"> ${' + this.listViewInstance.fields.text + '} </span></div>';\n        if (this.listViewInstance.isReact) {\n            commonTemplate = null;\n        }\n        if (this.listViewInstance.showCheckBox) {\n            // eslint-disable-next-line\n            this.listViewInstance.renderCheckbox(args);\n            if ((!isNullOrUndefined(this.listViewInstance.virtualCheckBox)) &&\n                (!isNullOrUndefined(this.listViewInstance.virtualCheckBox.outerHTML))) {\n                var div = document.createElement('div');\n                div.innerHTML = this.listViewInstance.template || commonTemplate;\n                if (div.children && div.children[0]) {\n                    div.children[0].classList.add('e-checkbox');\n                    if (this.listViewInstance.checkBoxPosition === 'Left') {\n                        div.children[0].classList.add('e-checkbox-left');\n                    }\n                    else {\n                        div.children[0].classList.add('e-checkbox-right');\n                    }\n                    if (this.listViewInstance.checkBoxPosition === 'Left') {\n                        div.children[0].insertBefore(this.listViewInstance.virtualCheckBox, div.childNodes[0].children[0]);\n                    }\n                    else {\n                        div.children[0].appendChild(this.listViewInstance.virtualCheckBox);\n                    }\n                    this.listViewInstance.template = div.innerHTML;\n                }\n            }\n            if (this.isVueFunctionTemplate())\n                return;\n            template.innerHTML = this.listViewInstance.template;\n            this.listViewInstance.template = virtualTemplate;\n        }\n        else {\n            if (this.isVueFunctionTemplate())\n                return;\n            template.innerHTML = this.listViewInstance.template || commonTemplate;\n        }\n        // eslint-disable-next-line\n        var templateElements = template.getElementsByTagName('*');\n        var groupTemplate = this.listViewInstance.createElement('div');\n        if (this.listViewInstance.fields.groupBy) {\n            groupTemplate.innerHTML = this.listViewInstance.groupTemplate || commonTemplate;\n        }\n        // eslint-disable-next-line\n        var groupTemplateElements = groupTemplate.getElementsByTagName('*');\n        if (args.curData.isHeader) {\n            this.headerData = args.curData;\n        }\n        this.templateData = args.curData.isHeader ? args.curData.items[0] :\n            args.curData;\n        if (!this.listViewInstance.isReact || (typeof this.listViewInstance.template == \"string\" && !args.item.classList.contains(\"e-list-group-item\")) ||\n            (typeof this.listViewInstance.groupTemplate == \"string\" && args.item.classList.contains(\"e-list-group-item\"))) {\n            args.item.innerHTML = '';\n        }\n        args.item.context = { data: args.curData, nodes: { flatTemplateNodes: [], groupTemplateNodes: [] } };\n        for (var i = 0; i < templateElements.length; i++) {\n            this.compileTemplate(templateElements[i], args.item, false);\n        }\n        for (var i = 0; i < groupTemplateElements.length; i++) {\n            this.compileTemplate(groupTemplateElements[i], args.item, true);\n        }\n        args.item.context.template = args.curData.isHeader ? template.firstElementChild :\n            groupTemplate.firstElementChild;\n        args.item.context.type = args.curData.isHeader ? 'flatList' : 'groupList';\n        var element = args.curData.isHeader ? groupTemplate : template;\n        if (element.firstElementChild) {\n            args.item.insertBefore(element.firstElementChild, null);\n        }\n    };\n    Virtualization.prototype.compileTemplate = function (element, item, isHeader) {\n        this.textProperty(element, item, isHeader);\n        this.classProperty(element, item, isHeader);\n        this.attributeProperty(element, item, isHeader);\n    };\n    Virtualization.prototype.onChange = function (newData, listElement) {\n        listElement.context.data = newData;\n        // eslint-disable-next-line max-len\n        var groupTemplateNodes = listElement.context.nodes.groupTemplateNodes;\n        // eslint-disable-next-line max-len\n        var flatTemplateNodes = listElement.context.nodes.flatTemplateNodes;\n        // eslint-disable-next-line\n        if (!isNullOrUndefined(newData.isHeader) && newData.isHeader && listElement.context.type === 'groupList') {\n            // eslint-disable-next-line\n            var element = listElement.firstElementChild;\n            detach(listElement.firstElementChild);\n            listElement.insertBefore(listElement.context.template, null);\n            listElement.context.template = element;\n            listElement.context.type = 'flatList';\n            for (var i = 0; i < groupTemplateNodes.length; i++) {\n                // eslint-disable-next-line\n                groupTemplateNodes[i].onChange(newData);\n            }\n        }\n        else if (!newData.isHeader && listElement.context.type === 'flatList') {\n            var element = listElement.firstElementChild;\n            detach(listElement.firstElementChild);\n            listElement.insertBefore(listElement.context.template, null);\n            listElement.context.template = element;\n            listElement.context.type = 'groupList';\n            for (var i = 0; i < flatTemplateNodes.length; i++) {\n                // eslint-disable-next-line\n                flatTemplateNodes[i].onChange(newData);\n            }\n        }\n        else if (!newData.isHeader) {\n            for (var i = 0; i < flatTemplateNodes.length; i++) {\n                // eslint-disable-next-line\n                flatTemplateNodes[i].onChange(newData);\n            }\n        }\n        else {\n            for (var i = 0; i < groupTemplateNodes.length; i++) {\n                // eslint-disable-next-line\n                groupTemplateNodes[i].onChange(newData);\n            }\n        }\n    };\n    // eslint-disable-next-line\n    Virtualization.prototype.updateContextData = function (listElement, node, isHeader) {\n        if (isHeader) {\n            listElement.context.nodes.groupTemplateNodes.push(node);\n        }\n        else {\n            listElement.context.nodes.flatTemplateNodes.push(node);\n        }\n    };\n    Virtualization.prototype.classProperty = function (element, listElement, isHeader) {\n        var regex = new RegExp('\\\\${([^}]*)}', 'g');\n        var resultantOutput = [];\n        var regexMatch;\n        while (regexMatch !== null) {\n            var match = regex.exec(element.className);\n            resultantOutput.push(match);\n            regexMatch = match;\n            if (regexMatch === null) {\n                resultantOutput.pop();\n            }\n        }\n        if (resultantOutput && resultantOutput.length) {\n            var _loop_1 = function (i) {\n                var classNameMatch = resultantOutput[i];\n                // eslint-disable-next-line\n                var classFunction;\n                if (classNameMatch[1].indexOf('?') !== -1 && classNameMatch[1].indexOf(':') !== -1) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    classFunction = new Function('data', 'return ' + classNameMatch[1].replace(/\\$/g, 'data.'));\n                }\n                else {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    classFunction = new Function('data', 'return ' + 'data.' + classNameMatch[1]);\n                }\n                // eslint-disable-next-line\n                var subNode = {};\n                if (isHeader) {\n                    subNode.bindedvalue = classFunction(this_1.headerData);\n                }\n                else {\n                    subNode.bindedvalue = classFunction(this_1.templateData);\n                }\n                subNode.onChange = function (value) {\n                    if (subNode.bindedvalue) {\n                        removeClass([element], subNode.bindedvalue.split(' ').filter(function (css) { return css; }));\n                    }\n                    var newCss = classFunction(value);\n                    if (newCss) {\n                        addClass([element], (newCss).split(' ').filter(function (css) { return css; }));\n                    }\n                    subNode.bindedvalue = newCss;\n                };\n                var className = classNameMatch[0].split(' ');\n                for (var i_1 = 0; i_1 < className.length; i_1++) {\n                    element.classList.remove(className[i_1]);\n                }\n                if (subNode.bindedvalue) {\n                    addClass([element], subNode.bindedvalue.split(' ').filter(function (css) { return css; }));\n                }\n                this_1.updateContextData(listElement, subNode, isHeader);\n            };\n            var this_1 = this;\n            for (var i = 0; i < resultantOutput.length; i++) {\n                _loop_1(i);\n            }\n        }\n    };\n    Virtualization.prototype.attributeProperty = function (element, listElement, isHeader) {\n        var attributeNames = [];\n        for (var i = 0; i < element.attributes.length; i++) {\n            attributeNames.push(element.attributes[i].nodeName);\n        }\n        if (attributeNames.indexOf('class') !== -1) {\n            attributeNames.splice(attributeNames.indexOf('class'), 1);\n        }\n        var _loop_2 = function (i) {\n            var attributeName = attributeNames[i];\n            var attrNameMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(attributeName) || [];\n            var attrValueMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(element.getAttribute(attributeName))\n                || [];\n            // eslint-disable-next-line\n            var attributeNameFunction;\n            // eslint-disable-next-line\n            var attributeValueFunction;\n            if (attrNameMatch.length || attrValueMatch.length) {\n                if (attrNameMatch[1]) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    attributeNameFunction = new Function('data', 'return ' + 'data.' + attrNameMatch[1]);\n                }\n                if (attrValueMatch[1]) {\n                    if (attrValueMatch[1].indexOf('?') !== -1 && attrValueMatch[1].indexOf(':') !== -1) {\n                        // tslint:disable-next-line:no-function-constructor-with-string-args\n                        attributeValueFunction = new Function('data', 'return ' + attrValueMatch[1].replace(/\\$/g, 'data.'));\n                    }\n                    else {\n                        // tslint:disable-next-line:no-function-constructor-with-string-args\n                        attributeValueFunction = new Function('data', 'return ' + 'data.' + attrValueMatch[1]);\n                    }\n                }\n                // eslint-disable-next-line @typescript-eslint/ban-types\n                var subNode_1 = {};\n                if (isHeader) {\n                    subNode_1.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(this_2.headerData),\n                        attrValueMatch[1] === undefined ? undefined : attributeValueFunction(this_2.headerData)];\n                }\n                else {\n                    subNode_1.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(this_2.templateData),\n                        attrValueMatch[1] === undefined ? undefined : attributeValueFunction(this_2.templateData)];\n                }\n                subNode_1.attrName = subNode_1.bindedvalue[0] === undefined ?\n                    attributeName : subNode_1.bindedvalue[0];\n                subNode_1.onChange = function (value) {\n                    var bindedvalue = subNode_1.bindedvalue[1] === undefined ?\n                        element.getAttribute(subNode_1.attrName) : attributeValueFunction(value);\n                    element.removeAttribute(subNode_1.attrName);\n                    subNode_1.attrName = subNode_1.bindedvalue[0] === undefined ? subNode_1.attrName : attributeNameFunction(value);\n                    element.setAttribute(subNode_1.attrName, bindedvalue);\n                    subNode_1.bindedvalue = [subNode_1.bindedvalue[0] === undefined ? undefined : attributeNameFunction(value),\n                        subNode_1.bindedvalue[1] === undefined ? undefined : attributeValueFunction(value)];\n                };\n                var attributeValue = subNode_1.bindedvalue[1] === undefined ? element.getAttribute(attributeName) :\n                    subNode_1.bindedvalue[1];\n                element.removeAttribute(attributeName);\n                element.setAttribute(subNode_1.attrName, attributeValue);\n                this_2.updateContextData(listElement, subNode_1, isHeader);\n            }\n        };\n        var this_2 = this;\n        for (var i = 0; i < attributeNames.length; i++) {\n            _loop_2(i);\n        }\n    };\n    Virtualization.prototype.textProperty = function (element, listElement, isHeader) {\n        var regex = new RegExp('\\\\${([^}]*)}', 'g');\n        var resultantOutput = [];\n        var regexMatch;\n        while (regexMatch !== null) {\n            var match = regex.exec(element.innerText);\n            resultantOutput.push(match);\n            regexMatch = match;\n            if (regexMatch === null) {\n                resultantOutput.pop();\n            }\n        }\n        var isChildHasTextContent = Array.prototype.some.call(element.children, function (element) {\n            if (new RegExp('\\\\${([^}]*)}', 'g').exec(element.innerText)) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        if (resultantOutput && resultantOutput.length && !isChildHasTextContent) {\n            var _loop_3 = function (i) {\n                var textPropertyMatch = resultantOutput[i];\n                // eslint-disable-next-line\n                var subNode = {};\n                // eslint-disable-next-line\n                var textFunction;\n                if (textPropertyMatch[1].indexOf('?') !== -1 && textPropertyMatch[1].indexOf(':') !== -1) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    textFunction = new Function('data', 'return ' + textPropertyMatch[1].replace(/\\$/g, 'data.'));\n                }\n                else {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    textFunction = new Function('data', 'return ' + 'data.' + textPropertyMatch[1]);\n                }\n                if (isHeader) {\n                    subNode.bindedvalue = textFunction(this_3.headerData);\n                }\n                else {\n                    subNode.bindedvalue = textFunction(this_3.templateData);\n                }\n                subNode.onChange = function (value) {\n                    element.innerText = element.innerText.replace(subNode.bindedvalue, textFunction(value));\n                    subNode.bindedvalue = textFunction(value);\n                };\n                element.innerText = element.innerText.replace(textPropertyMatch[0], subNode.bindedvalue);\n                this_3.updateContextData(listElement, subNode, isHeader);\n            };\n            var this_3 = this;\n            for (var i = 0; i < resultantOutput.length; i++) {\n                _loop_3(i);\n            }\n        }\n    };\n    Virtualization.prototype.reRenderUiVirtualization = function () {\n        this.wireScrollEvent(true);\n        if (this.listViewInstance.contentContainer) {\n            detach(this.listViewInstance.contentContainer);\n        }\n        this.listViewInstance.preRender();\n        // resetting the dom count to 0, to avoid edge case of dataSource suddenly becoming zero\n        // and then manually adding item using addItem API\n        this.domItemCount = 0;\n        this.listViewInstance.header();\n        this.listViewInstance.setLocalData();\n    };\n    Virtualization.prototype.updateUI = function (element, index, targetElement) {\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        var onChange = this.isNgTemplate() ? this.onNgChange : (this.isVueFunctionTemplate()) ? this.onVueChange : this.onChange;\n        if (this.listViewInstance.template || this.listViewInstance.groupTemplate) {\n            var curViewDS = this.listViewInstance.curViewDS[index];\n            // eslint-disable-next-line\n            element.dataset.uid = (curViewDS[this.listViewInstance.fields.id]) ?\n                // eslint-disable-next-line\n                (curViewDS[this.listViewInstance.fields.id]) : ListBase.generateId();\n            onChange(curViewDS, element, this);\n        }\n        else {\n            this.updateUiContent(element, index);\n        }\n        this.changeElementAttributes(element, index);\n        if (targetElement) {\n            this.listViewInstance.ulElement.insertBefore(element, targetElement);\n        }\n    };\n    /**\n     * Handles the UI change in vue for the list view.\n     *\n     * @param {DataSource} newData - The new data source for the list view.\n     * @param {ElementContext} listElement - The HTML element context for the list view.\n     * @param {Virtualization} virtualThis - The virtualization context for the list view.\n     */\n    Virtualization.prototype.onVueChange = function (newData, listElement, virtualThis) {\n        var liItem = ListBase.createListItemFromJson(virtualThis.listViewInstance.createElement, \n        // eslint-disable-next-line\n        [newData], virtualThis.listViewInstance.listBaseOption, null, null, virtualThis.listViewInstance);\n        while (listElement.lastChild) {\n            listElement.removeChild(listElement.lastChild);\n        }\n        listElement.appendChild(liItem[0].firstChild);\n    };\n    Virtualization.prototype.onNgChange = function (newData, listElement, virtualThis) {\n        // compile given target element with template for new data\n        // eslint-disable-next-line\n        var templateCompiler = compile(virtualThis.listViewInstance.template);\n        var resultElement = templateCompiler(newData);\n        while (listElement.lastChild) {\n            listElement.removeChild(listElement.lastChild);\n        }\n        listElement.appendChild(resultElement[0]);\n    };\n    Virtualization.prototype.getModuleName = function () {\n        return 'virtualization';\n    };\n    Virtualization.prototype.destroy = function () {\n        this.wireScrollEvent(true);\n        this.topElement = null;\n        this.bottomElement = null;\n    };\n    return Virtualization;\n}());\nexport { Virtualization };\n"]},"metadata":{},"sourceType":"module"}