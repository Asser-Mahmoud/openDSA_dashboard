{"ast":null,"code":"import { ChartData } from '../utils/get-data';\nimport { getTransform, firstToLowerCase } from '../../common/utils/helper';\nimport { dragStart, drag, dragEnd } from '../../common/model/constants';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\r\n * `DataEditing` module handles data editing\r\n */\n\nvar DataEditing =\n/** @class */\nfunction () {\n  /**\r\n   * Constructor for DataEditing module.\r\n   *\r\n   * @private\r\n   */\n  function DataEditing(chart) {\n    /**\r\n     * It is used to identify point is dragging for data editing in other modules.\r\n     *\r\n     * @private\r\n     */\n    this.isPointDragging = false;\n    this.chart = chart;\n  }\n  /**\r\n   * Point drag start here\r\n   */\n\n\n  DataEditing.prototype.pointMouseDown = function () {\n    var chart = this.chart;\n    var series;\n    var data = new ChartData(chart);\n    var pointData = data.getData();\n\n    if (pointData.point && (data.insideRegion || !pointData.series.isRectSeries)) {\n      this.seriesIndex = pointData.series.index;\n      this.pointIndex = pointData.point.index;\n      series = chart.series[this.seriesIndex];\n\n      if (series.dragSettings.enable && !chart.zoomModule) {\n        chart.trigger(dragStart, {\n          series: pointData.series,\n          seriesIndex: this.seriesIndex,\n          pointIndex: this.pointIndex,\n          point: pointData.point,\n          oldValue: chart.visibleSeries[this.seriesIndex].yData[this.pointIndex],\n          newValue: chart.visibleSeries[this.seriesIndex].points[this.pointIndex].yValue\n        });\n        chart.isPointMouseDown = true;\n        chart.zoomSettings.enableDeferredZooming = false;\n      }\n    }\n  };\n  /**\r\n   * Point dragging\r\n   */\n\n\n  DataEditing.prototype.pointMouseMove = function (event) {\n    var chart = this.chart;\n    var series;\n\n    if (event.type === 'touchmove' && event.preventDefault) {\n      event.preventDefault();\n    }\n\n    var data = new ChartData(chart);\n    var pointData = data.getData();\n\n    if (pointData.series.dragSettings.enable && pointData.point && (data.insideRegion || !pointData.series.isRectSeries)) {\n      this.getCursorStyle(pointData);\n    } else {\n      chart.svgObject.style.cursor = 'null';\n    }\n\n    if (chart.isPointMouseDown) {\n      series = chart.series[this.seriesIndex];\n\n      if (series.type.indexOf('Spline') > -1) {\n        chart[firstToLowerCase(series.type) + 'SeriesModule'].findSplinePoint(series);\n      }\n\n      this.pointDragging(this.seriesIndex, this.pointIndex);\n    }\n  };\n  /**\r\n   * Get cursor style\r\n   */\n\n\n  DataEditing.prototype.getCursorStyle = function (pointData) {\n    var chart = this.chart;\n\n    if (pointData.series.type === 'Bar' && chart.isTransposed) {\n      chart.svgObject.style.cursor = 'ns-resize';\n    } else if (chart.isTransposed || pointData.series.type === 'Bar') {\n      chart.svgObject.style.cursor = 'ew-resize';\n    } else {\n      chart.svgObject.style.cursor = 'ns-resize';\n    }\n  };\n  /**\r\n   * Dragging calculation\r\n   */\n\n\n  DataEditing.prototype.pointDragging = function (si, pi) {\n    var chart = this.chart;\n    var yValueArray = [];\n    var y;\n    var ySize;\n    var yValue;\n    var series = chart.visibleSeries[si];\n    var pointDrag = series.dragSettings;\n    var xAxis = series.xAxis;\n    var yAxis = series.yAxis; // To get drag region for column and bar series\n\n    var extra = series.isRectSeries ? 1 : 0;\n    var axis = getTransform(xAxis, yAxis, chart.requireInvertedAxis);\n\n    if (series.type === 'Bar') {\n      y = chart.isTransposed ? axis.y + axis.height - chart.mouseY : chart.mouseX - axis.x;\n      ySize = chart.isTransposed ? axis.height : axis.width;\n    } else {\n      y = chart.isTransposed ? chart.mouseX - axis.x : axis.y + axis.height - chart.mouseY;\n      ySize = chart.isTransposed ? axis.width : axis.height;\n    }\n\n    yValue = yAxis.isAxisInverse ? 1 - y / ySize : y / ySize;\n    yValue = yValue * yAxis.visibleRange.delta + yAxis.visibleRange.min;\n    var minRange = yAxis.minimum !== null ? yAxis.visibleRange.min + extra : isNullOrUndefined(pointDrag.minY) ? yValue : pointDrag.minY;\n    var maxRange = yAxis.maximum !== null ? yAxis.visibleRange.max + extra : isNullOrUndefined(pointDrag.maxY) ? yValue : pointDrag.maxY;\n\n    if (maxRange >= yValue && minRange <= yValue) {\n      series.points[pi].yValue = series.points[pi].y = chart.dragY = yAxis.valueType === 'Logarithmic' ? Math.pow(yAxis.logBase, yValue) : parseFloat(yValue.toFixed(2));\n      series.points[pi].interior = pointDrag.fill;\n\n      for (var i = 0; i < series.points.length; i++) {\n        yValueArray[i] = series.points[i].yValue;\n      }\n\n      series.yMin = Math.min.apply(null, yValueArray);\n      series.yMax = Math.max.apply(null, yValueArray);\n      this.isPointDragging = true;\n      chart.refreshBound();\n      chart.trigger(drag, {\n        seriesIndex: si,\n        pointIndex: pi,\n        series: series,\n        point: series.points[pi],\n        oldValue: chart.visibleSeries[this.seriesIndex].yData[this.pointIndex],\n        newValue: series.points[pi].yValue\n      });\n    }\n  };\n  /**\r\n   * Point drag ends here\r\n   */\n\n\n  DataEditing.prototype.pointMouseUp = function () {\n    var chart = this.chart;\n\n    if (chart.isPointMouseDown) {\n      if (chart.series[this.seriesIndex].dragSettings.enable) {\n        chart.trigger(dragEnd, {\n          series: chart.series[this.seriesIndex],\n          point: chart.visibleSeries[this.seriesIndex].points[this.pointIndex],\n          seriesIndex: this.seriesIndex,\n          pointIndex: this.pointIndex,\n          oldValue: chart.visibleSeries[this.seriesIndex].yData[this.pointIndex],\n          newValue: chart.visibleSeries[this.seriesIndex].points[this.pointIndex].yValue\n        });\n        chart.visibleSeries[this.seriesIndex].points[this.pointIndex].y = chart.visibleSeries[this.seriesIndex].points[this.pointIndex].yValue;\n        chart.isPointMouseDown = false;\n        this.isPointDragging = false;\n        this.seriesIndex = this.pointIndex = undefined;\n      }\n    }\n  };\n  /**\r\n   * Get module name.\r\n   */\n\n\n  DataEditing.prototype.getModuleName = function () {\n    // Returns te module name\n    return 'DataEditing';\n  };\n  /**\r\n   * To destroy the DataEditing.\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n\n\n  DataEditing.prototype.destroy = function () {// Destroy method performed here\n  };\n\n  return DataEditing;\n}();\n\nexport { DataEditing };","map":{"version":3,"sources":["C:/Users/x/Desktop/openDSA/openDSA_dashboard/project/node_modules/@syncfusion/ej2-react-charts/node_modules/@syncfusion/ej2-charts/src/chart/user-interaction/data-editing.js"],"names":["ChartData","getTransform","firstToLowerCase","dragStart","drag","dragEnd","isNullOrUndefined","DataEditing","chart","isPointDragging","prototype","pointMouseDown","series","data","pointData","getData","point","insideRegion","isRectSeries","seriesIndex","index","pointIndex","dragSettings","enable","zoomModule","trigger","oldValue","visibleSeries","yData","newValue","points","yValue","isPointMouseDown","zoomSettings","enableDeferredZooming","pointMouseMove","event","type","preventDefault","getCursorStyle","svgObject","style","cursor","indexOf","findSplinePoint","pointDragging","isTransposed","si","pi","yValueArray","y","ySize","pointDrag","xAxis","yAxis","extra","axis","requireInvertedAxis","height","mouseY","mouseX","x","width","isAxisInverse","visibleRange","delta","min","minRange","minimum","minY","maxRange","maximum","max","maxY","dragY","valueType","Math","pow","logBase","parseFloat","toFixed","interior","fill","i","length","yMin","apply","yMax","refreshBound","pointMouseUp","undefined","getModuleName","destroy"],"mappings":"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","sourcesContent":["import { ChartData, } from '../utils/get-data';\r\nimport { getTransform, firstToLowerCase } from '../../common/utils/helper';\r\nimport { dragStart, drag, dragEnd } from '../../common/model/constants';\r\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\r\n/**\r\n * `DataEditing` module handles data editing\r\n */\r\nvar DataEditing = /** @class */ (function () {\r\n    /**\r\n     * Constructor for DataEditing module.\r\n     *\r\n     * @private\r\n     */\r\n    function DataEditing(chart) {\r\n        /**\r\n         * It is used to identify point is dragging for data editing in other modules.\r\n         *\r\n         * @private\r\n         */\r\n        this.isPointDragging = false;\r\n        this.chart = chart;\r\n    }\r\n    /**\r\n     * Point drag start here\r\n     */\r\n    DataEditing.prototype.pointMouseDown = function () {\r\n        var chart = this.chart;\r\n        var series;\r\n        var data = new ChartData(chart);\r\n        var pointData = data.getData();\r\n        if (pointData.point && (data.insideRegion || !pointData.series.isRectSeries)) {\r\n            this.seriesIndex = pointData.series.index;\r\n            this.pointIndex = pointData.point.index;\r\n            series = chart.series[this.seriesIndex];\r\n            if (series.dragSettings.enable && !chart.zoomModule) {\r\n                chart.trigger(dragStart, {\r\n                    series: pointData.series, seriesIndex: this.seriesIndex, pointIndex: this.pointIndex, point: pointData.point,\r\n                    oldValue: chart.visibleSeries[this.seriesIndex].yData[this.pointIndex],\r\n                    newValue: chart.visibleSeries[this.seriesIndex].points[this.pointIndex].yValue\r\n                });\r\n                chart.isPointMouseDown = true;\r\n                chart.zoomSettings.enableDeferredZooming = false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Point dragging\r\n     */\r\n    DataEditing.prototype.pointMouseMove = function (event) {\r\n        var chart = this.chart;\r\n        var series;\r\n        if (event.type === 'touchmove' && event.preventDefault) {\r\n            event.preventDefault();\r\n        }\r\n        var data = new ChartData(chart);\r\n        var pointData = data.getData();\r\n        if (pointData.series.dragSettings.enable && pointData.point && (data.insideRegion || !pointData.series.isRectSeries)) {\r\n            this.getCursorStyle(pointData);\r\n        }\r\n        else {\r\n            chart.svgObject.style.cursor = 'null';\r\n        }\r\n        if (chart.isPointMouseDown) {\r\n            series = chart.series[this.seriesIndex];\r\n            if (series.type.indexOf('Spline') > -1) {\r\n                chart[firstToLowerCase(series.type) + 'SeriesModule'].findSplinePoint(series);\r\n            }\r\n            this.pointDragging(this.seriesIndex, this.pointIndex);\r\n        }\r\n    };\r\n    /**\r\n     * Get cursor style\r\n     */\r\n    DataEditing.prototype.getCursorStyle = function (pointData) {\r\n        var chart = this.chart;\r\n        if (pointData.series.type === 'Bar' && chart.isTransposed) {\r\n            chart.svgObject.style.cursor = 'ns-resize';\r\n        }\r\n        else if (chart.isTransposed || pointData.series.type === 'Bar') {\r\n            chart.svgObject.style.cursor = 'ew-resize';\r\n        }\r\n        else {\r\n            chart.svgObject.style.cursor = 'ns-resize';\r\n        }\r\n    };\r\n    /**\r\n     * Dragging calculation\r\n     */\r\n    DataEditing.prototype.pointDragging = function (si, pi) {\r\n        var chart = this.chart;\r\n        var yValueArray = [];\r\n        var y;\r\n        var ySize;\r\n        var yValue;\r\n        var series = chart.visibleSeries[si];\r\n        var pointDrag = series.dragSettings;\r\n        var xAxis = series.xAxis;\r\n        var yAxis = series.yAxis;\r\n        // To get drag region for column and bar series\r\n        var extra = series.isRectSeries ? 1 : 0;\r\n        var axis = getTransform(xAxis, yAxis, chart.requireInvertedAxis);\r\n        if (series.type === 'Bar') {\r\n            y = chart.isTransposed ? (axis.y + axis.height) - chart.mouseY : chart.mouseX - axis.x;\r\n            ySize = chart.isTransposed ? axis.height : axis.width;\r\n        }\r\n        else {\r\n            y = chart.isTransposed ? chart.mouseX - axis.x : (axis.y + axis.height) - chart.mouseY;\r\n            ySize = chart.isTransposed ? axis.width : axis.height;\r\n        }\r\n        yValue = yAxis.isAxisInverse ? (1 - (y / ySize)) : (y / ySize);\r\n        yValue = (yValue * yAxis.visibleRange.delta) + yAxis.visibleRange.min;\r\n        var minRange = yAxis.minimum !== null ? yAxis.visibleRange.min + extra : (isNullOrUndefined(pointDrag.minY) ?\r\n            (yValue) : pointDrag.minY);\r\n        var maxRange = yAxis.maximum !== null ? yAxis.visibleRange.max + extra : (isNullOrUndefined(pointDrag.maxY) ?\r\n            (yValue) : pointDrag.maxY);\r\n        if (maxRange >= yValue && minRange <= yValue) {\r\n            series.points[pi].yValue = series.points[pi].y = chart.dragY = (yAxis.valueType === 'Logarithmic') ?\r\n                Math.pow(yAxis.logBase, yValue) : parseFloat(yValue.toFixed(2));\r\n            series.points[pi].interior = pointDrag.fill;\r\n            for (var i = 0; i < series.points.length; i++) {\r\n                yValueArray[i] = series.points[i].yValue;\r\n            }\r\n            series.yMin = Math.min.apply(null, yValueArray);\r\n            series.yMax = Math.max.apply(null, yValueArray);\r\n            this.isPointDragging = true;\r\n            chart.refreshBound();\r\n            chart.trigger(drag, {\r\n                seriesIndex: si, pointIndex: pi, series: series, point: series.points[pi],\r\n                oldValue: chart.visibleSeries[this.seriesIndex].yData[this.pointIndex], newValue: series.points[pi].yValue\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Point drag ends here\r\n     */\r\n    DataEditing.prototype.pointMouseUp = function () {\r\n        var chart = this.chart;\r\n        if (chart.isPointMouseDown) {\r\n            if (chart.series[this.seriesIndex].dragSettings.enable) {\r\n                chart.trigger(dragEnd, {\r\n                    series: chart.series[this.seriesIndex], point: chart.visibleSeries[this.seriesIndex].points[this.pointIndex],\r\n                    seriesIndex: this.seriesIndex,\r\n                    pointIndex: this.pointIndex, oldValue: chart.visibleSeries[this.seriesIndex].yData[this.pointIndex],\r\n                    newValue: chart.visibleSeries[this.seriesIndex].points[this.pointIndex].yValue\r\n                });\r\n                chart.visibleSeries[this.seriesIndex].points[this.pointIndex].y =\r\n                    chart.visibleSeries[this.seriesIndex].points[this.pointIndex].yValue;\r\n                chart.isPointMouseDown = false;\r\n                this.isPointDragging = false;\r\n                this.seriesIndex = this.pointIndex = undefined;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Get module name.\r\n     */\r\n    DataEditing.prototype.getModuleName = function () {\r\n        // Returns te module name\r\n        return 'DataEditing';\r\n    };\r\n    /**\r\n     * To destroy the DataEditing.\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    DataEditing.prototype.destroy = function () {\r\n        // Destroy method performed here\r\n    };\r\n    return DataEditing;\r\n}());\r\nexport { DataEditing };\r\n"]},"metadata":{},"sourceType":"module"}