{"ast":null,"code":"import { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { SizeF, RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\r\n * `PdfAnnotationCollection` class represents the collection of 'PdfAnnotation' objects.\r\n * @private\r\n */\n\nvar PdfAnnotationCollection =\n/** @class */\nfunction () {\n  function PdfAnnotationCollection(page) {\n    // Constants\n\n    /**\r\n     * `Error` constant message.\r\n     * @private\r\n     */\n    this.alreadyExistsAnnotationError = 'This annotatation had been already added to page';\n    /**\r\n     * `Error` constant message.\r\n     * @private\r\n     */\n\n    this.missingAnnotationException = 'Annotation is not contained in collection.';\n    /**\r\n     * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\r\n     * @private\r\n     */\n\n    this.dictionaryProperties = new DictionaryProperties();\n    /**\r\n     * Array of the `annotations`.\r\n     * @private\r\n     */\n\n    this.internalAnnotations = new PdfArray();\n    /**\r\n     * privte `list` for the annotations.\r\n     * @private\r\n     */\n\n    this.lists = [];\n\n    if (typeof page !== 'undefined') {\n      this.page = page;\n    }\n  }\n\n  Object.defineProperty(PdfAnnotationCollection.prototype, \"annotations\", {\n    /**\r\n     * Gets the `PdfAnnotation` object at the specified index. Read-Only.\r\n     * @private\r\n     */\n    get: function () {\n      return this.internalAnnotations;\n    },\n    set: function (value) {\n      this.internalAnnotations = value;\n    },\n    enumerable: true,\n    configurable: true\n  }); // Public methods\n\n  /**\r\n   * `Adds` a new annotation to the collection.\r\n   * @private\r\n   */\n\n  PdfAnnotationCollection.prototype.add = function (annotation) {\n    // this.SetPrint(annotation);\n    this.doAdd(annotation);\n  };\n  /**\r\n   * `Adds` a Annotation to collection.\r\n   * @private\r\n   */\n\n  /* tslint:disable */\n\n\n  PdfAnnotationCollection.prototype.doAdd = function (annotation) {\n    if (typeof annotation.destination !== 'undefined') {\n      var layout = new PdfStringLayouter();\n      var layoutResult = layout.layout(annotation.text, annotation.font, annotation.stringFormat, new SizeF(annotation.bounds.width, 0), false, new SizeF(0, 0));\n      var lastPosition = annotation.bounds.y;\n\n      if (layoutResult.lines.length === 1) {\n        var size = annotation.font.measureString(layoutResult.lines[0].text);\n        annotation.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n        annotation.text = layoutResult.lines[0].text; //Draw Annotation Text.\n\n        this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, annotation.bounds.y, annotation.bounds.width, annotation.bounds.height, null); //Add annotation to dictionary.\n\n        annotation.setPage(this.page);\n        this.setColor(annotation);\n        this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n        this.lists.push(annotation);\n      } else {\n        for (var i = 0; i < layoutResult.lines.length; i++) {\n          var size = annotation.font.measureString(layoutResult.lines[i].text);\n\n          if (i === 0) {\n            annotation.bounds = new RectangleF(annotation.bounds.x, lastPosition, size.width, size.height);\n            annotation.text = layoutResult.lines[i].text; //Draw Annotation Text.\n\n            this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, lastPosition, size.width, size.height, null); //Add annotation to dictionary.\n\n            annotation.setPage(this.page);\n            this.setColor(annotation);\n            this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n            this.lists.push(annotation); //Update y for drawing next line of the text.\n\n            lastPosition += annotation.bounds.height;\n          } else {\n            var annot = annotation.clone();\n            annot.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n            annot.text = layoutResult.lines[i].text; //Draw Annotation Text.\n\n            this.page.graphics.drawString(annot.text, annot.font, null, annot.brush, annot.bounds.x, annot.bounds.y, annot.bounds.width, annot.bounds.height, null); //Add annotation to dictionary.\n\n            annot.setPage(this.page);\n            this.setColor(annot);\n            this.internalAnnotations.add(new PdfReferenceHolder(annot));\n            this.lists.push(annot); //Update y for drawing next line of the text.\n\n            lastPosition += annot.bounds.height;\n          }\n        }\n      }\n    } else {\n      annotation.setPage(this.page);\n      this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n      return this.lists.push(annotation);\n    }\n  };\n  /* tslint:enable */\n\n  /**\r\n   * `Set a color of an annotation`.\r\n   * @private\r\n   */\n\n\n  PdfAnnotationCollection.prototype.setColor = function (annotation) {\n    var cs = PdfColorSpace.Rgb;\n    var colours = annotation.color.toArray(cs);\n    annotation.dictionary.items.setValue(this.dictionaryProperties.c, colours);\n  };\n\n  Object.defineProperty(PdfAnnotationCollection.prototype, \"element\", {\n    // IPdfWrapper Members\n\n    /**\r\n     * Gets the `Element` representing this object.\r\n     * @private\r\n     */\n    get: function () {\n      return this.internalAnnotations;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfAnnotationCollection;\n}();\n\nexport { PdfAnnotationCollection };","map":{"version":3,"sources":["C:/Users/amase/Desktop/open_dsa/openDSA_dashboard/project/node_modules/@syncfusion/ej2-react-grids/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/annotation-collection.js"],"names":["PdfArray","PdfReferenceHolder","DictionaryProperties","SizeF","RectangleF","PointF","PdfStringLayouter","PdfColorSpace","PdfAnnotationCollection","page","alreadyExistsAnnotationError","missingAnnotationException","dictionaryProperties","internalAnnotations","lists","Object","defineProperty","prototype","get","set","value","enumerable","configurable","add","annotation","doAdd","destination","layout","layoutResult","text","font","stringFormat","bounds","width","lastPosition","y","lines","length","size","measureString","x","graphics","drawString","brush","height","setPage","setColor","push","i","annot","clone","cs","Rgb","colours","color","toArray","dictionary","items","setValue","c"],"mappings":"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","sourcesContent":["import { PdfArray } from './../primitives/pdf-array';\r\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\r\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\r\nimport { SizeF, RectangleF, PointF } from './../drawing/pdf-drawing';\r\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\r\nimport { PdfColorSpace } from './../graphics/enum';\r\n/**\r\n * `PdfAnnotationCollection` class represents the collection of 'PdfAnnotation' objects.\r\n * @private\r\n */\r\nvar PdfAnnotationCollection = /** @class */ (function () {\r\n    function PdfAnnotationCollection(page) {\r\n        // Constants\r\n        /**\r\n         * `Error` constant message.\r\n         * @private\r\n         */\r\n        this.alreadyExistsAnnotationError = 'This annotatation had been already added to page';\r\n        /**\r\n         * `Error` constant message.\r\n         * @private\r\n         */\r\n        this.missingAnnotationException = 'Annotation is not contained in collection.';\r\n        /**\r\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\r\n         * @private\r\n         */\r\n        this.dictionaryProperties = new DictionaryProperties();\r\n        /**\r\n         * Array of the `annotations`.\r\n         * @private\r\n         */\r\n        this.internalAnnotations = new PdfArray();\r\n        /**\r\n         * privte `list` for the annotations.\r\n         * @private\r\n         */\r\n        this.lists = [];\r\n        if (typeof page !== 'undefined') {\r\n            this.page = page;\r\n        }\r\n    }\r\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"annotations\", {\r\n        /**\r\n         * Gets the `PdfAnnotation` object at the specified index. Read-Only.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.internalAnnotations;\r\n        },\r\n        set: function (value) {\r\n            this.internalAnnotations = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    // Public methods\r\n    /**\r\n     * `Adds` a new annotation to the collection.\r\n     * @private\r\n     */\r\n    PdfAnnotationCollection.prototype.add = function (annotation) {\r\n        // this.SetPrint(annotation);\r\n        this.doAdd(annotation);\r\n    };\r\n    /**\r\n     * `Adds` a Annotation to collection.\r\n     * @private\r\n     */\r\n    /* tslint:disable */\r\n    PdfAnnotationCollection.prototype.doAdd = function (annotation) {\r\n        if (typeof annotation.destination !== 'undefined') {\r\n            var layout = new PdfStringLayouter();\r\n            var layoutResult = layout.layout(annotation.text, annotation.font, annotation.stringFormat, new SizeF((annotation.bounds.width), 0), false, new SizeF(0, 0));\r\n            var lastPosition = annotation.bounds.y;\r\n            if (layoutResult.lines.length === 1) {\r\n                var size = annotation.font.measureString(layoutResult.lines[0].text);\r\n                annotation.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\r\n                annotation.text = layoutResult.lines[0].text;\r\n                //Draw Annotation Text.\r\n                this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, annotation.bounds.y, annotation.bounds.width, annotation.bounds.height, null);\r\n                //Add annotation to dictionary.\r\n                annotation.setPage(this.page);\r\n                this.setColor(annotation);\r\n                this.internalAnnotations.add(new PdfReferenceHolder(annotation));\r\n                this.lists.push(annotation);\r\n            }\r\n            else {\r\n                for (var i = 0; i < layoutResult.lines.length; i++) {\r\n                    var size = annotation.font.measureString(layoutResult.lines[i].text);\r\n                    if (i === 0) {\r\n                        annotation.bounds = new RectangleF(annotation.bounds.x, lastPosition, size.width, size.height);\r\n                        annotation.text = layoutResult.lines[i].text;\r\n                        //Draw Annotation Text.\r\n                        this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, lastPosition, size.width, size.height, null);\r\n                        //Add annotation to dictionary.\r\n                        annotation.setPage(this.page);\r\n                        this.setColor(annotation);\r\n                        this.internalAnnotations.add(new PdfReferenceHolder(annotation));\r\n                        this.lists.push(annotation);\r\n                        //Update y for drawing next line of the text.\r\n                        lastPosition += annotation.bounds.height;\r\n                    }\r\n                    else {\r\n                        var annot = annotation.clone();\r\n                        annot.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\r\n                        annot.text = layoutResult.lines[i].text;\r\n                        //Draw Annotation Text.\r\n                        this.page.graphics.drawString(annot.text, annot.font, null, annot.brush, annot.bounds.x, annot.bounds.y, annot.bounds.width, annot.bounds.height, null);\r\n                        //Add annotation to dictionary.\r\n                        annot.setPage(this.page);\r\n                        this.setColor(annot);\r\n                        this.internalAnnotations.add(new PdfReferenceHolder(annot));\r\n                        this.lists.push(annot);\r\n                        //Update y for drawing next line of the text.\r\n                        lastPosition += annot.bounds.height;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            annotation.setPage(this.page);\r\n            this.internalAnnotations.add(new PdfReferenceHolder(annotation));\r\n            return this.lists.push(annotation);\r\n        }\r\n    };\r\n    /* tslint:enable */\r\n    /**\r\n     * `Set a color of an annotation`.\r\n     * @private\r\n     */\r\n    PdfAnnotationCollection.prototype.setColor = function (annotation) {\r\n        var cs = PdfColorSpace.Rgb;\r\n        var colours = annotation.color.toArray(cs);\r\n        annotation.dictionary.items.setValue(this.dictionaryProperties.c, colours);\r\n    };\r\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"element\", {\r\n        // IPdfWrapper Members\r\n        /**\r\n         * Gets the `Element` representing this object.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.internalAnnotations;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PdfAnnotationCollection;\r\n}());\r\nexport { PdfAnnotationCollection };\r\n"]},"metadata":{},"sourceType":"module"}