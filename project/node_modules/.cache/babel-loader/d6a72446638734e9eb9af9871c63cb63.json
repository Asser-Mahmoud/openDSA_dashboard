{"ast":null,"code":"/**\r\n * PdfTemplate.ts class for EJ2-PDF\r\n */\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PointF, SizeF, RectangleF } from './../../drawing/pdf-drawing';\nimport { GetResourceEventHandler } from './../pdf-graphics';\n/**\r\n * Represents `Pdf Template` object.\r\n * @private\r\n */\n\nvar PdfTemplate =\n/** @class */\nfunction () {\n  function PdfTemplate(arg1, arg2) {\n    /**\r\n     * Initialize an instance for `DictionaryProperties` class.\r\n     * @private\r\n     * @hidden\r\n     */\n    this.dictionaryProperties = new DictionaryProperties();\n    /**\r\n     * Checks whether the transformation 'is performed'.\r\n     * @default true\r\n     * @private\r\n     */\n\n    this.writeTransformation = true;\n\n    if (typeof arg1 === 'undefined') {//\n    } else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n      this.content = new PdfStream();\n      var tempSize = new SizeF(arg1.width, arg1.height);\n      this.setSize(tempSize);\n      this.initialize();\n    } else {\n      this.content = new PdfStream();\n      this.setSize(new SizeF(arg1, arg2));\n      this.initialize();\n    }\n  }\n\n  Object.defineProperty(PdfTemplate.prototype, \"size\", {\n    //Properties\n\n    /**\r\n     * Gets the size of the 'PdfTemplate'.\r\n     */\n    get: function () {\n      return this.templateSize;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTemplate.prototype, \"width\", {\n    /**\r\n     * Gets the width of the 'PdfTemplate'.\r\n     */\n    get: function () {\n      return this.size.width;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTemplate.prototype, \"height\", {\n    /**\r\n     * Gets the height of the 'PdfTemplate'.\r\n     */\n    get: function () {\n      return this.size.height;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n    /**\r\n     * Gets the `graphics` of the 'PdfTemplate'.\r\n     */\n    get: function () {\n      if (this.pdfGraphics == null || typeof this.pdfGraphics === 'undefined') {\n        var gr = new GetResourceEventHandler(this);\n        var g = new PdfGraphics(this.size, gr, this.content);\n        this.pdfGraphics = g; // if(this.writeTransformation) {\n        // Transform co-ordinates to Top/Left.\n\n        this.pdfGraphics.initializeCoordinates(); // }\n      }\n\n      return this.pdfGraphics;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Gets the resources and modifies the template dictionary.\r\n   * @private\r\n   */\n\n  PdfTemplate.prototype.getResources = function () {\n    if (this.resources == null) {\n      this.resources = new PdfResources();\n      this.content.items.setValue(this.dictionaryProperties.resources, this.resources);\n    }\n\n    return this.resources;\n  }; // Public methods\n\n  /**\r\n   * `Initialize` the type and subtype of the template.\r\n   * @private\r\n   */\n\n\n  PdfTemplate.prototype.initialize = function () {\n    this.addType();\n    this.addSubType();\n  };\n  /**\r\n   * `Adds type key`.\r\n   * @private\r\n   */\n\n\n  PdfTemplate.prototype.addType = function () {\n    var value = new PdfName(this.dictionaryProperties.xObject);\n    this.content.items.setValue(this.dictionaryProperties.type, value);\n  };\n  /**\r\n   * `Adds SubType key`.\r\n   * @private\r\n   */\n\n\n  PdfTemplate.prototype.addSubType = function () {\n    var value = new PdfName(this.dictionaryProperties.form);\n    this.content.items.setValue(this.dictionaryProperties.subtype, value);\n  };\n\n  PdfTemplate.prototype.reset = function (size) {\n    if (typeof size === 'undefined') {\n      if (this.resources != null) {\n        this.resources = null;\n        this.content.remove(this.dictionaryProperties.resources);\n      }\n\n      if (this.graphics != null) {\n        this.graphics.reset(this.size);\n      }\n    } else {\n      this.setSize(size);\n      this.reset();\n    }\n  };\n  /**\r\n   * `Set the size` of the 'PdfTemplate'.\r\n   * @private\r\n   */\n\n\n  PdfTemplate.prototype.setSize = function (size) {\n    var rect = new RectangleF(new PointF(0, 0), size);\n    var val = PdfArray.fromRectangle(rect);\n    this.content.items.setValue(this.dictionaryProperties.bBox, val);\n    this.templateSize = size;\n  };\n\n  Object.defineProperty(PdfTemplate.prototype, \"element\", {\n    // /**\n    //  * Returns the value of current graphics.\n    //  * @private\n    //  */\n    // public GetGraphics(g : PdfGraphics) : PdfGraphics {\n    //     if (this.graphics == null || typeof this.graphics === 'undefined') {\n    //         this.graphics = g;\n    //         this.graphics.Size = this.Size;\n    //         this.graphics.StreamWriter = new PdfStreamWriter(this.content)\n    //         this.graphics.Initialize();\n    //         if(this.writeTransformation) {\n    //             this.graphics.InitializeCoordinates();\n    //         }\n    //     }\n    //     return this.graphics;\n    // }\n    // IPdfWrapper Members\n\n    /**\r\n     * Gets the `content stream` of 'PdfTemplate' class.\r\n     * @private\r\n     */\n    get: function () {\n      return this.content;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfTemplate;\n}();\n\nexport { PdfTemplate };","map":{"version":3,"sources":["C:/Users/amase/Desktop/open_dsa/openDSA_dashboard/project/node_modules/@syncfusion/ej2-react-grids/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/pdf-template.js"],"names":["PdfStream","DictionaryProperties","PdfArray","PdfGraphics","PdfResources","PdfName","PointF","SizeF","RectangleF","GetResourceEventHandler","PdfTemplate","arg1","arg2","dictionaryProperties","writeTransformation","content","tempSize","width","height","setSize","initialize","Object","defineProperty","prototype","get","templateSize","enumerable","configurable","size","pdfGraphics","gr","g","initializeCoordinates","getResources","resources","items","setValue","addType","addSubType","value","xObject","type","form","subtype","reset","remove","graphics","rect","val","fromRectangle","bBox"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,+BAA1B;AACA,SAASC,oBAAT,QAAqC,gDAArC;AACA,SAASC,QAAT,QAAyB,8BAAzB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,UAAxB,QAA0C,6BAA1C;AACA,SAASC,uBAAT,QAAwC,mBAAxC;AACA;AACA;AACA;AACA;;AACA,IAAIC,WAAW;AAAG;AAAe,YAAY;AACzC,WAASA,WAAT,CAAqBC,IAArB,EAA2BC,IAA3B,EAAiC;AAC7B;AACR;AACA;AACA;AACA;AACQ,SAAKC,oBAAL,GAA4B,IAAIZ,oBAAJ,EAA5B;AACA;AACR;AACA;AACA;AACA;;AACQ,SAAKa,mBAAL,GAA2B,IAA3B;;AACA,QAAI,OAAOH,IAAP,KAAgB,WAApB,EAAiC,CAC7B;AACH,KAFD,MAGK,IAAIA,IAAI,YAAYJ,KAAhB,IAAyB,OAAOK,IAAP,KAAgB,WAA7C,EAA0D;AAC3D,WAAKG,OAAL,GAAe,IAAIf,SAAJ,EAAf;AACA,UAAIgB,QAAQ,GAAG,IAAIT,KAAJ,CAAUI,IAAI,CAACM,KAAf,EAAsBN,IAAI,CAACO,MAA3B,CAAf;AACA,WAAKC,OAAL,CAAaH,QAAb;AACA,WAAKI,UAAL;AACH,KALI,MAMA;AACD,WAAKL,OAAL,GAAe,IAAIf,SAAJ,EAAf;AACA,WAAKmB,OAAL,CAAa,IAAIZ,KAAJ,CAAUI,IAAV,EAAgBC,IAAhB,CAAb;AACA,WAAKQ,UAAL;AACH;AACJ;;AACDC,EAAAA,MAAM,CAACC,cAAP,CAAsBZ,WAAW,CAACa,SAAlC,EAA6C,MAA7C,EAAqD;AACjD;;AACA;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKC,YAAZ;AACH,KAPgD;AAQjDC,IAAAA,UAAU,EAAE,IARqC;AASjDC,IAAAA,YAAY,EAAE;AATmC,GAArD;AAWAN,EAAAA,MAAM,CAACC,cAAP,CAAsBZ,WAAW,CAACa,SAAlC,EAA6C,OAA7C,EAAsD;AAClD;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,IAAL,CAAUX,KAAjB;AACH,KANiD;AAOlDS,IAAAA,UAAU,EAAE,IAPsC;AAQlDC,IAAAA,YAAY,EAAE;AARoC,GAAtD;AAUAN,EAAAA,MAAM,CAACC,cAAP,CAAsBZ,WAAW,CAACa,SAAlC,EAA6C,QAA7C,EAAuD;AACnD;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,IAAL,CAAUV,MAAjB;AACH,KANkD;AAOnDQ,IAAAA,UAAU,EAAE,IAPuC;AAQnDC,IAAAA,YAAY,EAAE;AARqC,GAAvD;AAUAN,EAAAA,MAAM,CAACC,cAAP,CAAsBZ,WAAW,CAACa,SAAlC,EAA6C,UAA7C,EAAyD;AACrD;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,UAAI,KAAKK,WAAL,IAAoB,IAApB,IAA4B,OAAO,KAAKA,WAAZ,KAA4B,WAA5D,EAAyE;AACrE,YAAIC,EAAE,GAAG,IAAIrB,uBAAJ,CAA4B,IAA5B,CAAT;AACA,YAAIsB,CAAC,GAAG,IAAI5B,WAAJ,CAAgB,KAAKyB,IAArB,EAA2BE,EAA3B,EAA+B,KAAKf,OAApC,CAAR;AACA,aAAKc,WAAL,GAAmBE,CAAnB,CAHqE,CAIrE;AACA;;AACA,aAAKF,WAAL,CAAiBG,qBAAjB,GANqE,CAOrE;AACH;;AACD,aAAO,KAAKH,WAAZ;AACH,KAfoD;AAgBrDH,IAAAA,UAAU,EAAE,IAhByC;AAiBrDC,IAAAA,YAAY,EAAE;AAjBuC,GAAzD;AAmBA;AACJ;AACA;AACA;;AACIjB,EAAAA,WAAW,CAACa,SAAZ,CAAsBU,YAAtB,GAAqC,YAAY;AAC7C,QAAI,KAAKC,SAAL,IAAkB,IAAtB,EAA4B;AACxB,WAAKA,SAAL,GAAiB,IAAI9B,YAAJ,EAAjB;AACA,WAAKW,OAAL,CAAaoB,KAAb,CAAmBC,QAAnB,CAA4B,KAAKvB,oBAAL,CAA0BqB,SAAtD,EAAiE,KAAKA,SAAtE;AACH;;AACD,WAAO,KAAKA,SAAZ;AACH,GAND,CAnFyC,CA0FzC;;AACA;AACJ;AACA;AACA;;;AACIxB,EAAAA,WAAW,CAACa,SAAZ,CAAsBH,UAAtB,GAAmC,YAAY;AAC3C,SAAKiB,OAAL;AACA,SAAKC,UAAL;AACH,GAHD;AAIA;AACJ;AACA;AACA;;;AACI5B,EAAAA,WAAW,CAACa,SAAZ,CAAsBc,OAAtB,GAAgC,YAAY;AACxC,QAAIE,KAAK,GAAG,IAAIlC,OAAJ,CAAY,KAAKQ,oBAAL,CAA0B2B,OAAtC,CAAZ;AACA,SAAKzB,OAAL,CAAaoB,KAAb,CAAmBC,QAAnB,CAA4B,KAAKvB,oBAAL,CAA0B4B,IAAtD,EAA4DF,KAA5D;AACH,GAHD;AAIA;AACJ;AACA;AACA;;;AACI7B,EAAAA,WAAW,CAACa,SAAZ,CAAsBe,UAAtB,GAAmC,YAAY;AAC3C,QAAIC,KAAK,GAAG,IAAIlC,OAAJ,CAAY,KAAKQ,oBAAL,CAA0B6B,IAAtC,CAAZ;AACA,SAAK3B,OAAL,CAAaoB,KAAb,CAAmBC,QAAnB,CAA4B,KAAKvB,oBAAL,CAA0B8B,OAAtD,EAA+DJ,KAA/D;AACH,GAHD;;AAIA7B,EAAAA,WAAW,CAACa,SAAZ,CAAsBqB,KAAtB,GAA8B,UAAUhB,IAAV,EAAgB;AAC1C,QAAI,OAAOA,IAAP,KAAgB,WAApB,EAAiC;AAC7B,UAAI,KAAKM,SAAL,IAAkB,IAAtB,EAA4B;AACxB,aAAKA,SAAL,GAAiB,IAAjB;AACA,aAAKnB,OAAL,CAAa8B,MAAb,CAAoB,KAAKhC,oBAAL,CAA0BqB,SAA9C;AACH;;AACD,UAAI,KAAKY,QAAL,IAAiB,IAArB,EAA2B;AACvB,aAAKA,QAAL,CAAcF,KAAd,CAAoB,KAAKhB,IAAzB;AACH;AACJ,KARD,MASK;AACD,WAAKT,OAAL,CAAaS,IAAb;AACA,WAAKgB,KAAL;AACH;AACJ,GAdD;AAeA;AACJ;AACA;AACA;;;AACIlC,EAAAA,WAAW,CAACa,SAAZ,CAAsBJ,OAAtB,GAAgC,UAAUS,IAAV,EAAgB;AAC5C,QAAImB,IAAI,GAAG,IAAIvC,UAAJ,CAAe,IAAIF,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAf,EAAiCsB,IAAjC,CAAX;AACA,QAAIoB,GAAG,GAAG9C,QAAQ,CAAC+C,aAAT,CAAuBF,IAAvB,CAAV;AACA,SAAKhC,OAAL,CAAaoB,KAAb,CAAmBC,QAAnB,CAA4B,KAAKvB,oBAAL,CAA0BqC,IAAtD,EAA4DF,GAA5D;AACA,SAAKvB,YAAL,GAAoBG,IAApB;AACH,GALD;;AAMAP,EAAAA,MAAM,CAACC,cAAP,CAAsBZ,WAAW,CAACa,SAAlC,EAA6C,SAA7C,EAAwD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACR;AACA;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKT,OAAZ;AACH,KAxBmD;AAyBpDW,IAAAA,UAAU,EAAE,IAzBwC;AA0BpDC,IAAAA,YAAY,EAAE;AA1BsC,GAAxD;AA4BA,SAAOjB,WAAP;AACH,CAzKgC,EAAjC;;AA0KA,SAASA,WAAT","sourcesContent":["/**\r\n * PdfTemplate.ts class for EJ2-PDF\r\n */\r\nimport { PdfStream } from './../../primitives/pdf-stream';\r\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\r\nimport { PdfArray } from './../../primitives/pdf-array';\r\nimport { PdfGraphics } from './../pdf-graphics';\r\nimport { PdfResources } from './../pdf-resources';\r\nimport { PdfName } from './../../primitives/pdf-name';\r\nimport { PointF, SizeF, RectangleF } from './../../drawing/pdf-drawing';\r\nimport { GetResourceEventHandler } from './../pdf-graphics';\r\n/**\r\n * Represents `Pdf Template` object.\r\n * @private\r\n */\r\nvar PdfTemplate = /** @class */ (function () {\r\n    function PdfTemplate(arg1, arg2) {\r\n        /**\r\n         * Initialize an instance for `DictionaryProperties` class.\r\n         * @private\r\n         * @hidden\r\n         */\r\n        this.dictionaryProperties = new DictionaryProperties();\r\n        /**\r\n         * Checks whether the transformation 'is performed'.\r\n         * @default true\r\n         * @private\r\n         */\r\n        this.writeTransformation = true;\r\n        if (typeof arg1 === 'undefined') {\r\n            //\r\n        }\r\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\r\n            this.content = new PdfStream();\r\n            var tempSize = new SizeF(arg1.width, arg1.height);\r\n            this.setSize(tempSize);\r\n            this.initialize();\r\n        }\r\n        else {\r\n            this.content = new PdfStream();\r\n            this.setSize(new SizeF(arg1, arg2));\r\n            this.initialize();\r\n        }\r\n    }\r\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\r\n        //Properties\r\n        /**\r\n         * Gets the size of the 'PdfTemplate'.\r\n         */\r\n        get: function () {\r\n            return this.templateSize;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfTemplate.prototype, \"width\", {\r\n        /**\r\n         * Gets the width of the 'PdfTemplate'.\r\n         */\r\n        get: function () {\r\n            return this.size.width;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfTemplate.prototype, \"height\", {\r\n        /**\r\n         * Gets the height of the 'PdfTemplate'.\r\n         */\r\n        get: function () {\r\n            return this.size.height;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\r\n        /**\r\n         * Gets the `graphics` of the 'PdfTemplate'.\r\n         */\r\n        get: function () {\r\n            if (this.pdfGraphics == null || typeof this.pdfGraphics === 'undefined') {\r\n                var gr = new GetResourceEventHandler(this);\r\n                var g = new PdfGraphics(this.size, gr, this.content);\r\n                this.pdfGraphics = g;\r\n                // if(this.writeTransformation) {\r\n                // Transform co-ordinates to Top/Left.\r\n                this.pdfGraphics.initializeCoordinates();\r\n                // }\r\n            }\r\n            return this.pdfGraphics;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets the resources and modifies the template dictionary.\r\n     * @private\r\n     */\r\n    PdfTemplate.prototype.getResources = function () {\r\n        if (this.resources == null) {\r\n            this.resources = new PdfResources();\r\n            this.content.items.setValue(this.dictionaryProperties.resources, this.resources);\r\n        }\r\n        return this.resources;\r\n    };\r\n    // Public methods\r\n    /**\r\n     * `Initialize` the type and subtype of the template.\r\n     * @private\r\n     */\r\n    PdfTemplate.prototype.initialize = function () {\r\n        this.addType();\r\n        this.addSubType();\r\n    };\r\n    /**\r\n     * `Adds type key`.\r\n     * @private\r\n     */\r\n    PdfTemplate.prototype.addType = function () {\r\n        var value = new PdfName(this.dictionaryProperties.xObject);\r\n        this.content.items.setValue(this.dictionaryProperties.type, value);\r\n    };\r\n    /**\r\n     * `Adds SubType key`.\r\n     * @private\r\n     */\r\n    PdfTemplate.prototype.addSubType = function () {\r\n        var value = new PdfName(this.dictionaryProperties.form);\r\n        this.content.items.setValue(this.dictionaryProperties.subtype, value);\r\n    };\r\n    PdfTemplate.prototype.reset = function (size) {\r\n        if (typeof size === 'undefined') {\r\n            if (this.resources != null) {\r\n                this.resources = null;\r\n                this.content.remove(this.dictionaryProperties.resources);\r\n            }\r\n            if (this.graphics != null) {\r\n                this.graphics.reset(this.size);\r\n            }\r\n        }\r\n        else {\r\n            this.setSize(size);\r\n            this.reset();\r\n        }\r\n    };\r\n    /**\r\n     * `Set the size` of the 'PdfTemplate'.\r\n     * @private\r\n     */\r\n    PdfTemplate.prototype.setSize = function (size) {\r\n        var rect = new RectangleF(new PointF(0, 0), size);\r\n        var val = PdfArray.fromRectangle(rect);\r\n        this.content.items.setValue(this.dictionaryProperties.bBox, val);\r\n        this.templateSize = size;\r\n    };\r\n    Object.defineProperty(PdfTemplate.prototype, \"element\", {\r\n        // /**\r\n        //  * Returns the value of current graphics.\r\n        //  * @private\r\n        //  */\r\n        // public GetGraphics(g : PdfGraphics) : PdfGraphics {\r\n        //     if (this.graphics == null || typeof this.graphics === 'undefined') {\r\n        //         this.graphics = g;\r\n        //         this.graphics.Size = this.Size;\r\n        //         this.graphics.StreamWriter = new PdfStreamWriter(this.content)\r\n        //         this.graphics.Initialize();\r\n        //         if(this.writeTransformation) {\r\n        //             this.graphics.InitializeCoordinates();\r\n        //         }\r\n        //     }\r\n        //     return this.graphics;\r\n        // }\r\n        // IPdfWrapper Members\r\n        /**\r\n         * Gets the `content stream` of 'PdfTemplate' class.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.content;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PdfTemplate;\r\n}());\r\nexport { PdfTemplate };\r\n"]},"metadata":{},"sourceType":"module"}