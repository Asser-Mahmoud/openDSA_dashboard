{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\r\n * PdfPageCountField.ts class for EJ2-PDF\r\n */\n\n\nimport { PdfSingleValueField } from './single-value-field';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\n/**\r\n * Represents total PDF document page count automatic field.\r\n */\n\nvar PdfPageCountField =\n/** @class */\nfunction (_super) {\n  __extends(PdfPageCountField, _super);\n\n  function PdfPageCountField(font, arg2) {\n    var _this = _super.call(this) || this; // Fields\n\n    /**\r\n     * Stores the number style of the field.\r\n     * @private\r\n     */\n\n\n    _this.internalNumberStyle = PdfNumberStyle.Numeric;\n\n    if (typeof arg2 === 'undefined') {\n      _this.font = font;\n    } else if (arg2 instanceof PdfBrush) {\n      _this.font = font;\n      _this.brush = arg2;\n    } else {\n      _this.font = font;\n      _this.bounds = arg2;\n    }\n\n    return _this;\n  }\n\n  Object.defineProperty(PdfPageCountField.prototype, \"numberStyle\", {\n    // Properties\n\n    /**\r\n     * Gets and sets the number style of the field.\r\n     * @public\r\n     */\n    get: function () {\n      return this.internalNumberStyle;\n    },\n    set: function (value) {\n      this.internalNumberStyle = value;\n    },\n    enumerable: true,\n    configurable: true\n  }); // Implementation\n\n  /**\r\n   * Return the actual value of the content to drawn.\r\n   * @public\r\n   */\n\n  PdfPageCountField.prototype.getValue = function (graphics) {\n    var result = null;\n    var page = this.getPageFromGraphics(graphics);\n    var document = page.section.parent.document;\n    var count = document.pages.count;\n    result = PdfNumbersConvertor.convert(count, this.numberStyle);\n    return result;\n  };\n\n  return PdfPageCountField;\n}(PdfSingleValueField);\n\nexport { PdfPageCountField };","map":{"version":3,"sources":["C:/Users/amase/Desktop/open_dsa/openDSA_dashboard/project/node_modules/@syncfusion/ej2-react-grids/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/page-count-field.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","PdfSingleValueField","PdfNumberStyle","PdfBrush","PdfNumbersConvertor","PdfPageCountField","_super","font","arg2","_this","call","internalNumberStyle","Numeric","brush","bounds","defineProperty","get","set","value","enumerable","configurable","getValue","graphics","result","page","getPageFromGraphics","document","section","parent","count","pages","convert","numberStyle"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * PdfPageCountField.ts class for EJ2-PDF\r\n */\r\nimport { PdfSingleValueField } from './single-value-field';\r\nimport { PdfNumberStyle } from './../../pages/enum';\r\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\r\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\r\n/**\r\n * Represents total PDF document page count automatic field.\r\n */\r\nvar PdfPageCountField = /** @class */ (function (_super) {\r\n    __extends(PdfPageCountField, _super);\r\n    function PdfPageCountField(font, arg2) {\r\n        var _this = _super.call(this) || this;\r\n        // Fields\r\n        /**\r\n         * Stores the number style of the field.\r\n         * @private\r\n         */\r\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\r\n        if (typeof arg2 === 'undefined') {\r\n            _this.font = font;\r\n        }\r\n        else if (arg2 instanceof PdfBrush) {\r\n            _this.font = font;\r\n            _this.brush = arg2;\r\n        }\r\n        else {\r\n            _this.font = font;\r\n            _this.bounds = arg2;\r\n        }\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PdfPageCountField.prototype, \"numberStyle\", {\r\n        // Properties\r\n        /**\r\n         * Gets and sets the number style of the field.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            return this.internalNumberStyle;\r\n        },\r\n        set: function (value) {\r\n            this.internalNumberStyle = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    // Implementation\r\n    /**\r\n     * Return the actual value of the content to drawn.\r\n     * @public\r\n     */\r\n    PdfPageCountField.prototype.getValue = function (graphics) {\r\n        var result = null;\r\n        var page = this.getPageFromGraphics(graphics);\r\n        var document = page.section.parent.document;\r\n        var count = document.pages.count;\r\n        result = PdfNumbersConvertor.convert(count, this.numberStyle);\r\n        return result;\r\n    };\r\n    return PdfPageCountField;\r\n}(PdfSingleValueField));\r\nexport { PdfPageCountField };\r\n"]},"metadata":{},"sourceType":"module"}