{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { createStd } from '../../function/statistics/std.js';\nimport { errorTransform } from './utils/errorTransform.js';\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\nvar name = 'std';\nvar dependencies = ['typed', 'map', 'sqrt', 'variance'];\n/**\r\n * Attach a transform function to math.std\r\n * Adds a property transform containing the transform function.\r\n *\r\n * This transform changed the `dim` parameter of function std\r\n * from one-based to zero based\r\n */\n\nexport var createStdTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed,\n    map,\n    sqrt,\n    variance\n  } = _ref;\n  var std = createStd({\n    typed,\n    map,\n    sqrt,\n    variance\n  });\n  return typed('std', {\n    '...any': function any(args) {\n      args = lastDimToZeroBase(args);\n\n      try {\n        return std.apply(null, args);\n      } catch (err) {\n        throw errorTransform(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});","map":{"version":3,"sources":["C:/Users/x/Desktop/openDSA/openDSA_dashboard/project/node_modules/mathjs/lib/esm/expression/transform/std.transform.js"],"names":["factory","createStd","errorTransform","lastDimToZeroBase","name","dependencies","createStdTransform","_ref","typed","map","sqrt","variance","std","any","args","apply","err","isTransformFunction"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,SAAT,QAA0B,kCAA1B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,IAAIC,IAAI,GAAG,KAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,EAAU,KAAV,EAAiB,MAAjB,EAAyB,UAAzB,CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,kBAAkB,GAAG,eAAeN,OAAO,CAACI,IAAD,EAAOC,YAAP,EAAqBE,IAAI,IAAI;AACjF,MAAI;AACFC,IAAAA,KADE;AAEFC,IAAAA,GAFE;AAGFC,IAAAA,IAHE;AAIFC,IAAAA;AAJE,MAKAJ,IALJ;AAMA,MAAIK,GAAG,GAAGX,SAAS,CAAC;AAClBO,IAAAA,KADkB;AAElBC,IAAAA,GAFkB;AAGlBC,IAAAA,IAHkB;AAIlBC,IAAAA;AAJkB,GAAD,CAAnB;AAMA,SAAOH,KAAK,CAAC,KAAD,EAAQ;AAClB,cAAU,SAASK,GAAT,CAAaC,IAAb,EAAmB;AAC3BA,MAAAA,IAAI,GAAGX,iBAAiB,CAACW,IAAD,CAAxB;;AACA,UAAI;AACF,eAAOF,GAAG,CAACG,KAAJ,CAAU,IAAV,EAAgBD,IAAhB,CAAP;AACD,OAFD,CAEE,OAAOE,GAAP,EAAY;AACZ,cAAMd,cAAc,CAACc,GAAD,CAApB;AACD;AACF;AARiB,GAAR,CAAZ;AAUD,CAvBqD,EAuBnD;AACDC,EAAAA,mBAAmB,EAAE;AADpB,CAvBmD,CAA/C","sourcesContent":["import { factory } from '../../utils/factory.js';\r\nimport { createStd } from '../../function/statistics/std.js';\r\nimport { errorTransform } from './utils/errorTransform.js';\r\nimport { lastDimToZeroBase } from './utils/lastDimToZeroBase.js';\r\nvar name = 'std';\r\nvar dependencies = ['typed', 'map', 'sqrt', 'variance'];\r\n\r\n/**\r\n * Attach a transform function to math.std\r\n * Adds a property transform containing the transform function.\r\n *\r\n * This transform changed the `dim` parameter of function std\r\n * from one-based to zero based\r\n */\r\nexport var createStdTransform = /* #__PURE__ */factory(name, dependencies, _ref => {\r\n  var {\r\n    typed,\r\n    map,\r\n    sqrt,\r\n    variance\r\n  } = _ref;\r\n  var std = createStd({\r\n    typed,\r\n    map,\r\n    sqrt,\r\n    variance\r\n  });\r\n  return typed('std', {\r\n    '...any': function any(args) {\r\n      args = lastDimToZeroBase(args);\r\n      try {\r\n        return std.apply(null, args);\r\n      } catch (err) {\r\n        throw errorTransform(err);\r\n      }\r\n    }\r\n  });\r\n}, {\r\n  isTransformFunction: true\r\n});"]},"metadata":{},"sourceType":"module"}