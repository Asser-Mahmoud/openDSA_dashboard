{"ast":null,"code":"/**\r\n * PdfAutomaticFieldInfo.ts class for EJ2-PDF\r\n * @private\r\n */\nimport { PointF } from './../../drawing/pdf-drawing';\nimport { PdfAutomaticField } from './automatic-field';\n/**\r\n * Represents information about the automatic field.\r\n * @private\r\n */\n\nvar PdfAutomaticFieldInfo =\n/** @class */\nfunction () {\n  function PdfAutomaticFieldInfo(field, location, scaleX, scaleY) {\n    // Fields\n\n    /**\r\n     * Internal variable to store location of the field.\r\n     * @private\r\n     */\n    this.pageNumberFieldLocation = new PointF();\n    /**\r\n     * Internal variable to store field.\r\n     * @private\r\n     */\n\n    this.pageNumberField = null;\n    /**\r\n     * Internal variable to store x scaling factor.\r\n     * @private\r\n     */\n\n    this.scaleX = 1;\n    /**\r\n     * Internal variable to store y scaling factor.\r\n     * @private\r\n     */\n\n    this.scaleY = 1;\n\n    if (typeof location === 'undefined' && field instanceof PdfAutomaticFieldInfo) {\n      this.pageNumberField = field.field;\n      this.pageNumberFieldLocation = field.location;\n      this.scaleX = field.scalingX;\n      this.scaleY = field.scalingY;\n    } else if (typeof scaleX === 'undefined' && location instanceof PointF && field instanceof PdfAutomaticField) {\n      this.pageNumberField = field;\n      this.pageNumberFieldLocation = location;\n    } else {\n      this.pageNumberField = field;\n      this.pageNumberFieldLocation = location;\n      this.scaleX = scaleX;\n      this.scaleY = scaleY;\n    }\n  }\n\n  Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"location\", {\n    /* tslint:enable */\n    // Properties\n\n    /**\r\n     * Gets or sets the location.\r\n     * @private\r\n     */\n    get: function () {\n      return this.pageNumberFieldLocation;\n    },\n    set: function (value) {\n      this.pageNumberFieldLocation = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"field\", {\n    /**\r\n     * Gets or sets the field.\r\n     * @private\r\n     */\n    get: function () {\n      return this.pageNumberField;\n    },\n    set: function (value) {\n      this.pageNumberField = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingX\", {\n    /**\r\n     * Gets or sets the scaling X factor.\r\n     * @private\r\n     */\n    get: function () {\n      return this.scaleX;\n    },\n    set: function (value) {\n      this.scaleX = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingY\", {\n    /**\r\n     * Gets or sets the scaling Y factor.\r\n     * @private\r\n     */\n    get: function () {\n      return this.scaleY;\n    },\n    set: function (value) {\n      this.scaleY = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfAutomaticFieldInfo;\n}();\n\nexport { PdfAutomaticFieldInfo };","map":{"version":3,"sources":["C:/Users/amase/Desktop/open_dsa/openDSA_dashboard/project/node_modules/@syncfusion/ej2-react-charts/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/automatic-field-info.js"],"names":["PointF","PdfAutomaticField","PdfAutomaticFieldInfo","field","location","scaleX","scaleY","pageNumberFieldLocation","pageNumberField","scalingX","scalingY","Object","defineProperty","prototype","get","set","value","enumerable","configurable"],"mappings":"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","sourcesContent":["/**\r\n * PdfAutomaticFieldInfo.ts class for EJ2-PDF\r\n * @private\r\n */\r\nimport { PointF } from './../../drawing/pdf-drawing';\r\nimport { PdfAutomaticField } from './automatic-field';\r\n/**\r\n * Represents information about the automatic field.\r\n * @private\r\n */\r\nvar PdfAutomaticFieldInfo = /** @class */ (function () {\r\n    function PdfAutomaticFieldInfo(field, location, scaleX, scaleY) {\r\n        // Fields\r\n        /**\r\n         * Internal variable to store location of the field.\r\n         * @private\r\n         */\r\n        this.pageNumberFieldLocation = new PointF();\r\n        /**\r\n         * Internal variable to store field.\r\n         * @private\r\n         */\r\n        this.pageNumberField = null;\r\n        /**\r\n         * Internal variable to store x scaling factor.\r\n         * @private\r\n         */\r\n        this.scaleX = 1;\r\n        /**\r\n         * Internal variable to store y scaling factor.\r\n         * @private\r\n         */\r\n        this.scaleY = 1;\r\n        if (typeof location === 'undefined' && field instanceof PdfAutomaticFieldInfo) {\r\n            this.pageNumberField = field.field;\r\n            this.pageNumberFieldLocation = field.location;\r\n            this.scaleX = field.scalingX;\r\n            this.scaleY = field.scalingY;\r\n        }\r\n        else if (typeof scaleX === 'undefined' && location instanceof PointF && field instanceof PdfAutomaticField) {\r\n            this.pageNumberField = field;\r\n            this.pageNumberFieldLocation = location;\r\n        }\r\n        else {\r\n            this.pageNumberField = field;\r\n            this.pageNumberFieldLocation = location;\r\n            this.scaleX = scaleX;\r\n            this.scaleY = scaleY;\r\n        }\r\n    }\r\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"location\", {\r\n        /* tslint:enable */\r\n        // Properties\r\n        /**\r\n         * Gets or sets the location.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.pageNumberFieldLocation;\r\n        },\r\n        set: function (value) {\r\n            this.pageNumberFieldLocation = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"field\", {\r\n        /**\r\n         * Gets or sets the field.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.pageNumberField;\r\n        },\r\n        set: function (value) {\r\n            this.pageNumberField = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingX\", {\r\n        /**\r\n         * Gets or sets the scaling X factor.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.scaleX;\r\n        },\r\n        set: function (value) {\r\n            this.scaleX = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingY\", {\r\n        /**\r\n         * Gets or sets the scaling Y factor.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.scaleY;\r\n        },\r\n        set: function (value) {\r\n            this.scaleY = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PdfAutomaticFieldInfo;\r\n}());\r\nexport { PdfAutomaticFieldInfo };\r\n"]},"metadata":{},"sourceType":"module"}