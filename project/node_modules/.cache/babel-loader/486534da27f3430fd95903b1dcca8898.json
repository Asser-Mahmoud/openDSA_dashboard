{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nimport { tanh as _tanh } from '../../utils/number.js';\nvar name = 'tanh';\nvar dependencies = ['typed'];\nexport var createTanh = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    typed\n  } = _ref;\n  /**\r\n   * Calculate the hyperbolic tangent of a value,\r\n   * defined as `tanh(x) = (exp(2 * x) - 1) / (exp(2 * x) + 1)`.\r\n   *\r\n   * To avoid confusion with matrix hyperbolic tangent, this function does\r\n   * not apply to matrices.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.tanh(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    // tanh(x) = sinh(x) / cosh(x) = 1 / coth(x)\r\n   *    math.tanh(0.5)                   // returns 0.46211715726000974\r\n   *    math.sinh(0.5) / math.cosh(0.5)  // returns 0.46211715726000974\r\n   *    1 / math.coth(0.5)               // returns 0.46211715726000974\r\n   *\r\n   * See also:\r\n   *\r\n   *    sinh, cosh, coth\r\n   *\r\n   * @param {number | BigNumber | Complex} x  Function input\r\n   * @return {number | BigNumber | Complex} Hyperbolic tangent of x\r\n   */\n\n  return typed('tanh', {\n    number: _tanh,\n    'Complex | BigNumber': x => x.tanh()\n  });\n});","map":{"version":3,"sources":["C:/Users/x/Desktop/openDSA/openDSA_dashboard/project/node_modules/mathjs/lib/esm/function/trigonometry/tanh.js"],"names":["factory","tanh","_tanh","name","dependencies","createTanh","_ref","typed","number","x"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,uBAA9B;AACA,IAAIC,IAAI,GAAG,MAAX;AACA,IAAIC,YAAY,GAAG,CAAC,OAAD,CAAnB;AACA,OAAO,IAAIC,UAAU,GAAG,eAAeL,OAAO,CAACG,IAAD,EAAOC,YAAP,EAAqBE,IAAI,IAAI;AACzE,MAAI;AACFC,IAAAA;AADE,MAEAD,IAFJ;AAGA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,SAAOC,KAAK,CAAC,MAAD,EAAS;AACnBC,IAAAA,MAAM,EAAEN,KADW;AAEnB,2BAAuBO,CAAC,IAAIA,CAAC,CAACR,IAAF;AAFT,GAAT,CAAZ;AAID,CAjC6C,CAAvC","sourcesContent":["import { factory } from '../../utils/factory.js';\r\nimport { tanh as _tanh } from '../../utils/number.js';\r\nvar name = 'tanh';\r\nvar dependencies = ['typed'];\r\nexport var createTanh = /* #__PURE__ */factory(name, dependencies, _ref => {\r\n  var {\r\n    typed\r\n  } = _ref;\r\n  /**\r\n   * Calculate the hyperbolic tangent of a value,\r\n   * defined as `tanh(x) = (exp(2 * x) - 1) / (exp(2 * x) + 1)`.\r\n   *\r\n   * To avoid confusion with matrix hyperbolic tangent, this function does\r\n   * not apply to matrices.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.tanh(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    // tanh(x) = sinh(x) / cosh(x) = 1 / coth(x)\r\n   *    math.tanh(0.5)                   // returns 0.46211715726000974\r\n   *    math.sinh(0.5) / math.cosh(0.5)  // returns 0.46211715726000974\r\n   *    1 / math.coth(0.5)               // returns 0.46211715726000974\r\n   *\r\n   * See also:\r\n   *\r\n   *    sinh, cosh, coth\r\n   *\r\n   * @param {number | BigNumber | Complex} x  Function input\r\n   * @return {number | BigNumber | Complex} Hyperbolic tangent of x\r\n   */\r\n  return typed('tanh', {\r\n    number: _tanh,\r\n    'Complex | BigNumber': x => x.tanh()\r\n  });\r\n});"]},"metadata":{},"sourceType":"module"}