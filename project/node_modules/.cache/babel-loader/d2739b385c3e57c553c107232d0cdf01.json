{"ast":null,"code":"import { createInstance, isUndefined, merge, extend, getValue } from './util';\n/**\n * Returns the Class Object\n *\n * @param {ClassObject} instance - instance of ClassObject\n * @param {string} curKey - key of the current instance\n * @param {Object} defaultValue - default Value\n * @param {Object[]} type ?\n * @returns {ClassObject} ?\n */\n// eslint-disable-next-line\n\nfunction getObject(instance, curKey, defaultValue, type) {\n  // eslint-disable-next-line\n  if (!instance.properties.hasOwnProperty(curKey) || !(instance.properties[curKey] instanceof type)) {\n    instance.properties[\"\" + curKey] = createInstance(type, [instance, curKey, defaultValue]);\n  }\n\n  return instance.properties[\"\" + curKey];\n}\n/**\n * Returns object array\n *\n * @param {ClassObject} instance ?\n * @param {string} curKey ?\n * @param {Object[]} defaultValue ?\n * @param {Object} type ?\n * @param {boolean} isSetter ?\n * @param {boolean} isFactory ?\n * @returns {Object[]} ?\n */\n// eslint-disable-next-line\n\n\nfunction getObjectArray(instance, curKey, defaultValue, type, isSetter, isFactory) {\n  var result = [];\n  var len = defaultValue ? defaultValue.length : 0;\n\n  for (var i = 0; i < len; i++) {\n    var curType = type;\n\n    if (isFactory) {\n      curType = type(defaultValue[parseInt(i.toString(), 10)], instance);\n    }\n\n    if (isSetter) {\n      var inst = createInstance(curType, [instance, curKey, {}, true]);\n      inst.setProperties(defaultValue[parseInt(i.toString(), 10)], true);\n      result.push(inst);\n    } else {\n      result.push(createInstance(curType, [instance, curKey, defaultValue[parseInt(i.toString(), 10)], false]));\n    }\n  }\n\n  return result;\n}\n/**\n * Returns the properties of the object\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @returns {void} ?\n */\n\n\nfunction propertyGetter(defaultValue, curKey) {\n  return function () {\n    // eslint-disable-next-line\n    if (!this.properties.hasOwnProperty(curKey)) {\n      this.properties[\"\" + curKey] = defaultValue;\n    }\n\n    return this.properties[\"\" + curKey];\n  };\n}\n/**\n * Set the properties for the object\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @returns {void} ?\n */\n\n\nfunction propertySetter(defaultValue, curKey) {\n  return function (newValue) {\n    if (this.properties[\"\" + curKey] !== newValue) {\n      // eslint-disable-next-line\n      var oldVal = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n      this.saveChanges(curKey, newValue, oldVal);\n      this.properties[\"\" + curKey] = newValue;\n    }\n  };\n}\n/**\n * Returns complex objects\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n// eslint-disable-next-line\n\n\nfunction complexGetter(defaultValue, curKey, type) {\n  return function () {\n    return getObject(this, curKey, defaultValue, type);\n  };\n}\n/**\n * Sets complex objects\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n\n\nfunction complexSetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    getObject(this, curKey, defaultValue, type).setProperties(newValue);\n  };\n}\n/**\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {FunctionConstructor} type ?\n * @returns {void} ?\n */\n// eslint-disable-next-line\n\n\nfunction complexFactoryGetter(defaultValue, curKey, type) {\n  return function () {\n    var curType = type({}); // eslint-disable-next-line\n\n    if (this.properties.hasOwnProperty(curKey)) {\n      return this.properties[\"\" + curKey];\n    } else {\n      return getObject(this, curKey, defaultValue, curType);\n    }\n  };\n}\n/**\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n\n\nfunction complexFactorySetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    var curType = type(newValue, this);\n    getObject(this, curKey, defaultValue, curType).setProperties(newValue);\n  };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n\n\nfunction complexArrayGetter(defaultValue, curKey, type) {\n  return function () {\n    var _this = this; // eslint-disable-next-line\n\n\n    if (!this.properties.hasOwnProperty(curKey)) {\n      var defCollection = getObjectArray(this, curKey, defaultValue, type, false);\n      this.properties[\"\" + curKey] = defCollection;\n    }\n\n    var ignore = this.controlParent !== undefined && this.controlParent.ignoreCollectionWatch || this.ignoreCollectionWatch; // eslint-disable-next-line\n\n    if (!this.properties[curKey].hasOwnProperty('push') && !ignore) {\n      ['push', 'pop'].forEach(function (extendFunc) {\n        var descriptor = {\n          value: complexArrayDefinedCallback(extendFunc, curKey, type, _this.properties[\"\" + curKey]).bind(_this),\n          configurable: true\n        };\n        Object.defineProperty(_this.properties[\"\" + curKey], extendFunc, descriptor);\n      });\n    } // eslint-disable-next-line\n\n\n    if (!this.properties[curKey].hasOwnProperty('isComplexArray')) {\n      Object.defineProperty(this.properties[\"\" + curKey], 'isComplexArray', {\n        value: true\n      });\n    }\n\n    return this.properties[\"\" + curKey];\n  };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n\n\nfunction complexArraySetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    this.isComplexArraySetter = true;\n    var oldValueCollection = getObjectArray(this, curKey, defaultValue, type, false);\n    var newValCollection = getObjectArray(this, curKey, newValue, type, true);\n    this.isComplexArraySetter = false;\n    this.saveChanges(curKey, newValCollection, oldValueCollection);\n    this.properties[\"\" + curKey] = newValCollection;\n  };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n\n\nfunction complexArrayFactorySetter(defaultValue, curKey, type) {\n  return function (newValue) {\n    // eslint-disable-next-line\n    var oldValueCollection = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n    var newValCollection = getObjectArray(this, curKey, newValue, type, true, true);\n    this.saveChanges(curKey, newValCollection, oldValueCollection);\n    this.properties[\"\" + curKey] = newValCollection;\n  };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {FunctionConstructor} type ?\n * @returns {void} ?\n */\n\n\nfunction complexArrayFactoryGetter(defaultValue, curKey, type) {\n  return function () {\n    var curType = type({}); // eslint-disable-next-line\n\n    if (!this.properties.hasOwnProperty(curKey)) {\n      var defCollection = getObjectArray(this, curKey, defaultValue, curType, false);\n      this.properties[\"\" + curKey] = defCollection;\n    }\n\n    return this.properties[\"\" + curKey];\n  };\n}\n/**\n *\n * @param {string} dFunc ?\n * @param {string} curKey ?\n * @param {Object} type ?\n * @param {Object} prop ?\n * @returns {Object} ?\n */\n\n\nfunction complexArrayDefinedCallback(dFunc, curKey, type, prop) {\n  /* tslint:disable no-function-expression */\n  return function () {\n    var newValue = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      newValue[_i] = arguments[_i];\n    }\n\n    var keyString = this.propName ? this.getParentKey() + '.' + curKey + '-' : curKey + '-';\n\n    switch (dFunc) {\n      case 'push':\n        for (var i = 0; i < newValue.length; i++) {\n          Array.prototype[\"\" + dFunc].apply(prop, [newValue[parseInt(i.toString(), 10)]]);\n          var model_1 = getArrayModel(keyString + (prop.length - 1), newValue[parseInt(i.toString(), 10)], !this.controlParent, dFunc);\n          this.serverDataBind(model_1, newValue[parseInt(i.toString(), 10)], false, dFunc);\n        }\n\n        break;\n\n      case 'pop':\n        Array.prototype[\"\" + dFunc].apply(prop); // eslint-disable-next-line\n\n        var model = getArrayModel(keyString + prop.length, null, !this.controlParent, dFunc);\n        this.serverDataBind(model, {\n          ejsAction: 'pop'\n        }, false, dFunc);\n        break;\n    }\n\n    return prop;\n  };\n}\n/**\n *\n * @param {string} keyString ?\n * @param {Object} value ?\n * @param {boolean} isControlParent ?\n * @param {string} arrayFunction ?\n * @returns {Object} ?\n */\n\n\nfunction getArrayModel(keyString, value, isControlParent, arrayFunction) {\n  var modelObject = keyString;\n\n  if (isControlParent) {\n    modelObject = {};\n    modelObject[\"\" + keyString] = value;\n\n    if (value && typeof value === 'object') {\n      var action = 'ejsAction';\n      modelObject[\"\" + keyString][\"\" + action] = arrayFunction;\n    }\n  }\n\n  return modelObject;\n} // eslint-disable-next-line\n\n/**\n * Method used to create property. General syntax below.\n *\n * @param {Object} defaultValue - Specifies the default value of property.\n * @returns {PropertyDecorator} ?\n * ```\n * @Property('TypeScript')\n * propertyName: Type;\n * ```\n * @private\n */\n\n\nexport function Property(defaultValue) {\n  return function (target, key) {\n    var propertyDescriptor = {\n      set: propertySetter(defaultValue, key),\n      get: propertyGetter(defaultValue, key),\n      enumerable: true,\n      configurable: true\n    }; //new property creation\n\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'prop', defaultValue);\n  };\n}\n/**\n * Method used to create complex property. General syntax below.\n *\n * @param  {any} defaultValue - Specifies the default value of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @Complex<Type>({},Type)\n * propertyName: Type;\n * ```\n * @private\n */\n\nexport function Complex(defaultValue, type) {\n  return function (target, key) {\n    var propertyDescriptor = {\n      set: complexSetter(defaultValue, key, type),\n      get: complexGetter(defaultValue, key, type),\n      enumerable: true,\n      configurable: true\n    }; //new property creation\n\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'complexProp', defaultValue, type);\n  };\n}\n/**\n * Method used to create complex Factory property. General syntax below.\n *\n * @param  {Function} type - Specifies the class factory type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @ComplexFactory(defaultType, factoryFunction)\n * propertyName: Type1 | Type2;\n * ```\n * @private\n */\n\nexport function ComplexFactory(type) {\n  return function (target, key) {\n    var propertyDescriptor = {\n      set: complexFactorySetter({}, key, type),\n      get: complexFactoryGetter({}, key, type),\n      enumerable: true,\n      configurable: true\n    }; //new property creation\n\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'complexProp', {}, type);\n  };\n}\n/**\n * Method used to create complex array property. General syntax below.\n *\n * @param  {any} defaultValue - Specifies the default value of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @Collection([], Type);\n * propertyName: Type;\n * ```\n * @private\n */\n\nexport function Collection(defaultValue, type) {\n  return function (target, key) {\n    var propertyDescriptor = {\n      set: complexArraySetter(defaultValue, key, type),\n      get: complexArrayGetter(defaultValue, key, type),\n      enumerable: true,\n      configurable: true\n    }; //new property creation\n\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'colProp', defaultValue, type);\n  };\n}\n/**\n * Method used to create complex factory array property. General syntax below.\n *\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyCollectionInfo} ?\n * ```\n * @Collection([], Type);\n * propertyName: Type;\n * ```\n * @private\n */\n\nexport function CollectionFactory(type) {\n  return function (target, key) {\n    var propertyDescriptor = {\n      set: complexArrayFactorySetter([], key, type),\n      get: complexArrayFactoryGetter([], key, type),\n      enumerable: true,\n      configurable: true\n    }; //new property creation\n\n    Object.defineProperty(target, key, propertyDescriptor);\n    addPropertyCollection(target, key, 'colProp', {}, type);\n  };\n}\n/**\n * Method used to create event property. General syntax below.\n *\n * @returns {PropertyDecorator} ?\n * ```\n * @Event(()=>{return true;})\n * ```\n * @private\n */\n\nexport function Event() {\n  return function (target, key) {\n    var eventDescriptor = {\n      set: function (newValue) {\n        var oldValue = this.properties[\"\" + key];\n\n        if (oldValue !== newValue) {\n          var finalContext = getParentContext(this, key);\n\n          if (isUndefined(oldValue) === false) {\n            finalContext.context.removeEventListener(finalContext.prefix, oldValue);\n          }\n\n          finalContext.context.addEventListener(finalContext.prefix, newValue);\n          this.properties[\"\" + key] = newValue;\n        }\n      },\n      get: propertyGetter(undefined, key),\n      enumerable: true,\n      configurable: true\n    };\n    Object.defineProperty(target, key, eventDescriptor);\n    addPropertyCollection(target, key, 'event');\n  };\n}\n/**\n * NotifyPropertyChanges is triggers the call back when the property has been changed.\n *\n * @param {Function} classConstructor ?\n * @returns {void} ?\n * ```\n *  @NotifyPropertyChanges\n * class DemoClass implements INotifyPropertyChanged {\n *\n *     @Property()\n *     property1: string;\n *\n *     dataBind: () => void;\n *\n *     constructor() { }\n *\n *     onPropertyChanged(newProp: any, oldProp: any) {\n *         // Called when property changed\n *     }\n * }\n * ```\n * @private\n */\n// eslint-disable-next-line\n\nexport function NotifyPropertyChanges(classConstructor) {\n  /** Need to code */\n}\n/**\n * Method  used to create the builderObject for the target component.\n *\n * @param {BuildInfo} target ?\n * @param {string} key ?\n * @param {string} propertyType ?\n * @param {Object} defaultValue ?\n * @param {Function} type ?\n * @returns {void} ?\n * @private\n */\n\nfunction addPropertyCollection(target, key, propertyType, defaultValue, type) {\n  if (isUndefined(target.propList)) {\n    target.propList = {\n      props: [],\n      complexProps: [],\n      colProps: [],\n      events: [],\n      propNames: [],\n      complexPropNames: [],\n      colPropNames: [],\n      eventNames: []\n    };\n  } // eslint-disable-next-line\n\n\n  target.propList[propertyType + 's'].push({\n    propertyName: key,\n    defaultValue: defaultValue,\n    type: type\n  }); // eslint-disable-next-line\n\n  target.propList[propertyType + 'Names'].push(key);\n}\n/**\n * Returns an object containing the builder properties\n *\n * @param {Function} component ?\n * @returns {Object} ?\n * @private\n */\n\n\nfunction getBuilderProperties(component) {\n  if (isUndefined(component.prototype.builderObject)) {\n    component.prototype.builderObject = {\n      properties: {},\n      propCollections: [],\n      add: function () {\n        this.isPropertyArray = true;\n        this.propCollections.push(extend({}, this.properties, {}));\n      }\n    };\n    var rex = /complex/;\n\n    for (var _i = 0, _a = Object.keys(component.prototype.propList); _i < _a.length; _i++) {\n      var key = _a[_i];\n\n      var _loop_1 = function (prop) {\n        if (rex.test(key)) {\n          component.prototype.builderObject[prop.propertyName] = function (value) {\n            var childType = {};\n            merge(childType, getBuilderProperties(prop.type));\n            value(childType);\n            var tempValue;\n\n            if (!childType.isPropertyArray) {\n              tempValue = extend({}, childType.properties, {});\n            } else {\n              tempValue = childType.propCollections;\n            }\n\n            this.properties[prop.propertyName] = tempValue;\n            childType.properties = {};\n            childType.propCollections = [];\n            childType.isPropertyArray = false;\n            return this;\n          };\n        } else {\n          component.prototype.builderObject[prop.propertyName] = function (value) {\n            this.properties[prop.propertyName] = value;\n            return this;\n          };\n        }\n      };\n\n      for (var _b = 0, _c = component.prototype.propList[\"\" + key]; _b < _c.length; _b++) {\n        var prop = _c[_b];\n\n        _loop_1(prop);\n      }\n    }\n  }\n\n  return component.prototype.builderObject;\n}\n/**\n * Method used to create builder for the components\n *\n * @param {any} component -specifies the target component for which builder to be created.\n * @returns {Object} ?\n * @private\n */\n\n\nexport function CreateBuilder(component) {\n  var builderFunction = function (element) {\n    this.element = element;\n    return this;\n  };\n\n  var instanceFunction = function (element) {\n    // eslint-disable-next-line\n    if (!builderFunction.prototype.hasOwnProperty('create')) {\n      builderFunction.prototype = getBuilderProperties(component);\n\n      builderFunction.prototype.create = function () {\n        var temp = extend({}, {}, this.properties);\n        this.properties = {};\n        return new component(temp, this.element);\n      };\n    }\n\n    return new builderFunction(element);\n  };\n\n  return instanceFunction;\n}\n/**\n * Returns parent options for the object\n *\n * @param {Object} context ?\n * @param {string} prefix ?\n * @returns {ParentOption} ?\n * @private\n */\n\nfunction getParentContext(context, prefix) {\n  // eslint-disable-next-line\n  if (context.hasOwnProperty('parentObj') === false) {\n    return {\n      context: context,\n      prefix: prefix\n    };\n  } else {\n    var curText = getValue('propName', context);\n\n    if (curText) {\n      prefix = curText + '-' + prefix;\n    }\n\n    return getParentContext(getValue('parentObj', context), prefix);\n  }\n}","map":{"version":3,"sources":["C:/Users/amase/Desktop/open_dsa/openDSA_dashboard/project/node_modules/@syncfusion/ej2-base/src/notify-property-change.js"],"names":["createInstance","isUndefined","merge","extend","getValue","getObject","instance","curKey","defaultValue","type","properties","hasOwnProperty","getObjectArray","isSetter","isFactory","result","len","length","i","curType","parseInt","toString","inst","setProperties","push","propertyGetter","propertySetter","newValue","oldVal","saveChanges","complexGetter","complexSetter","complexFactoryGetter","complexFactorySetter","complexArrayGetter","_this","defCollection","ignore","controlParent","undefined","ignoreCollectionWatch","forEach","extendFunc","descriptor","value","complexArrayDefinedCallback","bind","configurable","Object","defineProperty","complexArraySetter","isComplexArraySetter","oldValueCollection","newValCollection","complexArrayFactorySetter","complexArrayFactoryGetter","dFunc","prop","_i","arguments","keyString","propName","getParentKey","Array","prototype","apply","model_1","getArrayModel","serverDataBind","model","ejsAction","isControlParent","arrayFunction","modelObject","action","Property","target","key","propertyDescriptor","set","get","enumerable","addPropertyCollection","Complex","ComplexFactory","Collection","CollectionFactory","Event","eventDescriptor","oldValue","finalContext","getParentContext","context","removeEventListener","prefix","addEventListener","NotifyPropertyChanges","classConstructor","propertyType","propList","props","complexProps","colProps","events","propNames","complexPropNames","colPropNames","eventNames","propertyName","getBuilderProperties","component","builderObject","propCollections","add","isPropertyArray","rex","_a","keys","_loop_1","test","childType","tempValue","_b","_c","CreateBuilder","builderFunction","element","instanceFunction","create","temp","curText"],"mappings":"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","sourcesContent":["import { createInstance, isUndefined, merge, extend, getValue } from './util';\n/**\n * Returns the Class Object\n *\n * @param {ClassObject} instance - instance of ClassObject\n * @param {string} curKey - key of the current instance\n * @param {Object} defaultValue - default Value\n * @param {Object[]} type ?\n * @returns {ClassObject} ?\n */\n// eslint-disable-next-line\nfunction getObject(instance, curKey, defaultValue, type) {\n    // eslint-disable-next-line\n    if (!instance.properties.hasOwnProperty(curKey) || !(instance.properties[curKey] instanceof type)) {\n        instance.properties[\"\" + curKey] = createInstance(type, [instance, curKey, defaultValue]);\n    }\n    return instance.properties[\"\" + curKey];\n}\n/**\n * Returns object array\n *\n * @param {ClassObject} instance ?\n * @param {string} curKey ?\n * @param {Object[]} defaultValue ?\n * @param {Object} type ?\n * @param {boolean} isSetter ?\n * @param {boolean} isFactory ?\n * @returns {Object[]} ?\n */\n// eslint-disable-next-line\nfunction getObjectArray(instance, curKey, defaultValue, type, isSetter, isFactory) {\n    var result = [];\n    var len = defaultValue ? defaultValue.length : 0;\n    for (var i = 0; i < len; i++) {\n        var curType = type;\n        if (isFactory) {\n            curType = type(defaultValue[parseInt(i.toString(), 10)], instance);\n        }\n        if (isSetter) {\n            var inst = createInstance(curType, [instance, curKey, {}, true]);\n            inst.setProperties(defaultValue[parseInt(i.toString(), 10)], true);\n            result.push(inst);\n        }\n        else {\n            result.push(createInstance(curType, [instance, curKey, defaultValue[parseInt(i.toString(), 10)], false]));\n        }\n    }\n    return result;\n}\n/**\n * Returns the properties of the object\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @returns {void} ?\n */\nfunction propertyGetter(defaultValue, curKey) {\n    return function () {\n        // eslint-disable-next-line\n        if (!this.properties.hasOwnProperty(curKey)) {\n            this.properties[\"\" + curKey] = defaultValue;\n        }\n        return this.properties[\"\" + curKey];\n    };\n}\n/**\n * Set the properties for the object\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @returns {void} ?\n */\nfunction propertySetter(defaultValue, curKey) {\n    return function (newValue) {\n        if (this.properties[\"\" + curKey] !== newValue) {\n            // eslint-disable-next-line\n            var oldVal = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n            this.saveChanges(curKey, newValue, oldVal);\n            this.properties[\"\" + curKey] = newValue;\n        }\n    };\n}\n/**\n * Returns complex objects\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\n// eslint-disable-next-line\nfunction complexGetter(defaultValue, curKey, type) {\n    return function () {\n        return getObject(this, curKey, defaultValue, type);\n    };\n}\n/**\n * Sets complex objects\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexSetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        getObject(this, curKey, defaultValue, type).setProperties(newValue);\n    };\n}\n/**\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {FunctionConstructor} type ?\n * @returns {void} ?\n */\n// eslint-disable-next-line\nfunction complexFactoryGetter(defaultValue, curKey, type) {\n    return function () {\n        var curType = type({});\n        // eslint-disable-next-line\n        if (this.properties.hasOwnProperty(curKey)) {\n            return this.properties[\"\" + curKey];\n        }\n        else {\n            return getObject(this, curKey, defaultValue, curType);\n        }\n    };\n}\n/**\n *\n * @param {Object} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexFactorySetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        var curType = type(newValue, this);\n        getObject(this, curKey, defaultValue, curType).setProperties(newValue);\n    };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexArrayGetter(defaultValue, curKey, type) {\n    return function () {\n        var _this = this;\n        // eslint-disable-next-line\n        if (!this.properties.hasOwnProperty(curKey)) {\n            var defCollection = getObjectArray(this, curKey, defaultValue, type, false);\n            this.properties[\"\" + curKey] = defCollection;\n        }\n        var ignore = ((this.controlParent !== undefined && this.controlParent.ignoreCollectionWatch)\n            || this.ignoreCollectionWatch);\n        // eslint-disable-next-line\n        if (!this.properties[curKey].hasOwnProperty('push') && !ignore) {\n            ['push', 'pop'].forEach(function (extendFunc) {\n                var descriptor = {\n                    value: complexArrayDefinedCallback(extendFunc, curKey, type, _this.properties[\"\" + curKey]).bind(_this),\n                    configurable: true\n                };\n                Object.defineProperty(_this.properties[\"\" + curKey], extendFunc, descriptor);\n            });\n        }\n        // eslint-disable-next-line\n        if (!this.properties[curKey].hasOwnProperty('isComplexArray')) {\n            Object.defineProperty(this.properties[\"\" + curKey], 'isComplexArray', { value: true });\n        }\n        return this.properties[\"\" + curKey];\n    };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexArraySetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        this.isComplexArraySetter = true;\n        var oldValueCollection = getObjectArray(this, curKey, defaultValue, type, false);\n        var newValCollection = getObjectArray(this, curKey, newValue, type, true);\n        this.isComplexArraySetter = false;\n        this.saveChanges(curKey, newValCollection, oldValueCollection);\n        this.properties[\"\" + curKey] = newValCollection;\n    };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {Object[]} type ?\n * @returns {void} ?\n */\nfunction complexArrayFactorySetter(defaultValue, curKey, type) {\n    return function (newValue) {\n        // eslint-disable-next-line\n        var oldValueCollection = this.properties.hasOwnProperty(curKey) ? this.properties[curKey] : defaultValue;\n        var newValCollection = getObjectArray(this, curKey, newValue, type, true, true);\n        this.saveChanges(curKey, newValCollection, oldValueCollection);\n        this.properties[\"\" + curKey] = newValCollection;\n    };\n}\n/**\n *\n * @param {Object[]} defaultValue ?\n * @param {string} curKey ?\n * @param {FunctionConstructor} type ?\n * @returns {void} ?\n */\nfunction complexArrayFactoryGetter(defaultValue, curKey, type) {\n    return function () {\n        var curType = type({});\n        // eslint-disable-next-line\n        if (!this.properties.hasOwnProperty(curKey)) {\n            var defCollection = getObjectArray(this, curKey, defaultValue, curType, false);\n            this.properties[\"\" + curKey] = defCollection;\n        }\n        return this.properties[\"\" + curKey];\n    };\n}\n/**\n *\n * @param {string} dFunc ?\n * @param {string} curKey ?\n * @param {Object} type ?\n * @param {Object} prop ?\n * @returns {Object} ?\n */\nfunction complexArrayDefinedCallback(dFunc, curKey, type, prop) {\n    /* tslint:disable no-function-expression */\n    return function () {\n        var newValue = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newValue[_i] = arguments[_i];\n        }\n        var keyString = this.propName ? this.getParentKey() + '.' + curKey + '-' : curKey + '-';\n        switch (dFunc) {\n            case 'push':\n                for (var i = 0; i < newValue.length; i++) {\n                    Array.prototype[\"\" + dFunc].apply(prop, [newValue[parseInt(i.toString(), 10)]]);\n                    var model_1 = getArrayModel(keyString + (prop.length - 1), newValue[parseInt(i.toString(), 10)], !this.controlParent, dFunc);\n                    this.serverDataBind(model_1, newValue[parseInt(i.toString(), 10)], false, dFunc);\n                }\n                break;\n            case 'pop':\n                Array.prototype[\"\" + dFunc].apply(prop);\n                // eslint-disable-next-line\n                var model = getArrayModel(keyString + prop.length, null, !this.controlParent, dFunc);\n                this.serverDataBind(model, { ejsAction: 'pop' }, false, dFunc);\n                break;\n        }\n        return prop;\n    };\n}\n/**\n *\n * @param {string} keyString ?\n * @param {Object} value ?\n * @param {boolean} isControlParent ?\n * @param {string} arrayFunction ?\n * @returns {Object} ?\n */\nfunction getArrayModel(keyString, value, isControlParent, arrayFunction) {\n    var modelObject = keyString;\n    if (isControlParent) {\n        modelObject = {};\n        modelObject[\"\" + keyString] = value;\n        if (value && typeof value === 'object') {\n            var action = 'ejsAction';\n            modelObject[\"\" + keyString][\"\" + action] = arrayFunction;\n        }\n    }\n    return modelObject;\n}\n// eslint-disable-next-line\n/**\n * Method used to create property. General syntax below.\n *\n * @param {Object} defaultValue - Specifies the default value of property.\n * @returns {PropertyDecorator} ?\n * ```\n * @Property('TypeScript')\n * propertyName: Type;\n * ```\n * @private\n */\nexport function Property(defaultValue) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: propertySetter(defaultValue, key),\n            get: propertyGetter(defaultValue, key),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'prop', defaultValue);\n    };\n}\n/**\n * Method used to create complex property. General syntax below.\n *\n * @param  {any} defaultValue - Specifies the default value of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @Complex<Type>({},Type)\n * propertyName: Type;\n * ```\n * @private\n */\nexport function Complex(defaultValue, type) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: complexSetter(defaultValue, key, type),\n            get: complexGetter(defaultValue, key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'complexProp', defaultValue, type);\n    };\n}\n/**\n * Method used to create complex Factory property. General syntax below.\n *\n * @param  {Function} type - Specifies the class factory type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @ComplexFactory(defaultType, factoryFunction)\n * propertyName: Type1 | Type2;\n * ```\n * @private\n */\nexport function ComplexFactory(type) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: complexFactorySetter({}, key, type),\n            get: complexFactoryGetter({}, key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'complexProp', {}, type);\n    };\n}\n/**\n * Method used to create complex array property. General syntax below.\n *\n * @param  {any} defaultValue - Specifies the default value of property.\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyDecorator} ?\n * ```\n * @Collection([], Type);\n * propertyName: Type;\n * ```\n * @private\n */\nexport function Collection(defaultValue, type) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: complexArraySetter(defaultValue, key, type),\n            get: complexArrayGetter(defaultValue, key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'colProp', defaultValue, type);\n    };\n}\n/**\n * Method used to create complex factory array property. General syntax below.\n *\n * @param  {Function} type - Specifies the class type of complex object.\n * @returns {PropertyCollectionInfo} ?\n * ```\n * @Collection([], Type);\n * propertyName: Type;\n * ```\n * @private\n */\nexport function CollectionFactory(type) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: complexArrayFactorySetter([], key, type),\n            get: complexArrayFactoryGetter([], key, type),\n            enumerable: true,\n            configurable: true\n        };\n        //new property creation\n        Object.defineProperty(target, key, propertyDescriptor);\n        addPropertyCollection(target, key, 'colProp', {}, type);\n    };\n}\n/**\n * Method used to create event property. General syntax below.\n *\n * @returns {PropertyDecorator} ?\n * ```\n * @Event(()=>{return true;})\n * ```\n * @private\n */\nexport function Event() {\n    return function (target, key) {\n        var eventDescriptor = {\n            set: function (newValue) {\n                var oldValue = this.properties[\"\" + key];\n                if (oldValue !== newValue) {\n                    var finalContext = getParentContext(this, key);\n                    if (isUndefined(oldValue) === false) {\n                        finalContext.context.removeEventListener(finalContext.prefix, oldValue);\n                    }\n                    finalContext.context.addEventListener(finalContext.prefix, newValue);\n                    this.properties[\"\" + key] = newValue;\n                }\n            },\n            get: propertyGetter(undefined, key),\n            enumerable: true,\n            configurable: true\n        };\n        Object.defineProperty(target, key, eventDescriptor);\n        addPropertyCollection(target, key, 'event');\n    };\n}\n/**\n * NotifyPropertyChanges is triggers the call back when the property has been changed.\n *\n * @param {Function} classConstructor ?\n * @returns {void} ?\n * ```\n *  @NotifyPropertyChanges\n * class DemoClass implements INotifyPropertyChanged {\n *\n *     @Property()\n *     property1: string;\n *\n *     dataBind: () => void;\n *\n *     constructor() { }\n *\n *     onPropertyChanged(newProp: any, oldProp: any) {\n *         // Called when property changed\n *     }\n * }\n * ```\n * @private\n */\n// eslint-disable-next-line\nexport function NotifyPropertyChanges(classConstructor) {\n    /** Need to code */\n}\n/**\n * Method  used to create the builderObject for the target component.\n *\n * @param {BuildInfo} target ?\n * @param {string} key ?\n * @param {string} propertyType ?\n * @param {Object} defaultValue ?\n * @param {Function} type ?\n * @returns {void} ?\n * @private\n */\nfunction addPropertyCollection(target, key, propertyType, defaultValue, type) {\n    if (isUndefined(target.propList)) {\n        target.propList = {\n            props: [],\n            complexProps: [],\n            colProps: [],\n            events: [],\n            propNames: [],\n            complexPropNames: [],\n            colPropNames: [],\n            eventNames: []\n        };\n    }\n    // eslint-disable-next-line\n    target.propList[propertyType + 's'].push({\n        propertyName: key,\n        defaultValue: defaultValue,\n        type: type\n    });\n    // eslint-disable-next-line\n    target.propList[propertyType + 'Names'].push(key);\n}\n/**\n * Returns an object containing the builder properties\n *\n * @param {Function} component ?\n * @returns {Object} ?\n * @private\n */\nfunction getBuilderProperties(component) {\n    if (isUndefined(component.prototype.builderObject)) {\n        component.prototype.builderObject = {\n            properties: {}, propCollections: [], add: function () {\n                this.isPropertyArray = true;\n                this.propCollections.push(extend({}, this.properties, {}));\n            }\n        };\n        var rex = /complex/;\n        for (var _i = 0, _a = Object.keys(component.prototype.propList); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var _loop_1 = function (prop) {\n                if (rex.test(key)) {\n                    component.prototype.builderObject[prop.propertyName] = function (value) {\n                        var childType = {};\n                        merge(childType, getBuilderProperties(prop.type));\n                        value(childType);\n                        var tempValue;\n                        if (!childType.isPropertyArray) {\n                            tempValue = extend({}, childType.properties, {});\n                        }\n                        else {\n                            tempValue = childType.propCollections;\n                        }\n                        this.properties[prop.propertyName] = tempValue;\n                        childType.properties = {};\n                        childType.propCollections = [];\n                        childType.isPropertyArray = false;\n                        return this;\n                    };\n                }\n                else {\n                    component.prototype.builderObject[prop.propertyName] = function (value) {\n                        this.properties[prop.propertyName] = value;\n                        return this;\n                    };\n                }\n            };\n            for (var _b = 0, _c = component.prototype.propList[\"\" + key]; _b < _c.length; _b++) {\n                var prop = _c[_b];\n                _loop_1(prop);\n            }\n        }\n    }\n    return component.prototype.builderObject;\n}\n/**\n * Method used to create builder for the components\n *\n * @param {any} component -specifies the target component for which builder to be created.\n * @returns {Object} ?\n * @private\n */\nexport function CreateBuilder(component) {\n    var builderFunction = function (element) {\n        this.element = element;\n        return this;\n    };\n    var instanceFunction = function (element) {\n        // eslint-disable-next-line\n        if (!builderFunction.prototype.hasOwnProperty('create')) {\n            builderFunction.prototype = getBuilderProperties(component);\n            builderFunction.prototype.create = function () {\n                var temp = extend({}, {}, this.properties);\n                this.properties = {};\n                return new component(temp, this.element);\n            };\n        }\n        return new builderFunction(element);\n    };\n    return instanceFunction;\n}\n/**\n * Returns parent options for the object\n *\n * @param {Object} context ?\n * @param {string} prefix ?\n * @returns {ParentOption} ?\n * @private\n */\nfunction getParentContext(context, prefix) {\n    // eslint-disable-next-line\n    if (context.hasOwnProperty('parentObj') === false) {\n        return { context: context, prefix: prefix };\n    }\n    else {\n        var curText = getValue('propName', context);\n        if (curText) {\n            prefix = curText + '-' + prefix;\n        }\n        return getParentContext(getValue('parentObj', context), prefix);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}