{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/ban-types */\n\n/* eslint-disable valid-jsdoc */\n\n/* eslint-disable jsdoc/require-param */\n\n/* eslint-disable @typescript-eslint/no-inferrable-types */\n\n\nimport { Property, Complex, ChildProperty, Collection, extend } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../../common/model/base';\nimport { rotateTextSize, firstToLowerCase, valueToCoefficient, inside, isBreakLabel, isZoomSet, getTitle } from '../../common/utils/helper';\nimport { Size, Rect, measureText } from '@syncfusion/ej2-svg-base';\nimport { DoubleRange } from '../utils/double-range';\nimport { Double } from '../axis/double-axis';\nimport { Theme } from '../../common/model/theme';\nimport { axisRangeCalculated } from '../../common/model/constants';\nimport { StripLineSettings, MultiLevelLabels, LabelBorder, ScrollbarSettings } from '../model/chart-base';\nimport { textWrap } from '../../common/utils/helper';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\r\n * Configures the `rows` of the chart.\r\n */\n\nvar Row =\n/** @class */\nfunction (_super) {\n  __extends(Row, _super);\n\n  function Row() {\n    /**\r\n     * The height of the row as a string accept input both as '100px' and '100%'.\r\n     * If specified as '100%, row renders to the full height of its chart.\r\n     *\r\n     * @default '100%'\r\n     */\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** @private */\n\n\n    _this.axes = [];\n    /** @private */\n\n    _this.nearSizes = [];\n    /** @private */\n\n    _this.farSizes = [];\n    return _this;\n  }\n  /**\r\n   * Measure the row size\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n\n\n  Row.prototype.computeSize = function (axis, scrollBarHeight) {\n    var width = 0;\n    var innerPadding = 5;\n\n    if (axis.visible && axis.internalVisibility) {\n      width += axis.findTickSize(axis.crossInAxis) + scrollBarHeight + axis.findLabelSize(axis.crossInAxis, innerPadding) + axis.lineStyle.width * 0.5;\n    }\n\n    if (axis.isAxisOpposedPosition) {\n      this.farSizes.push(width);\n    } else {\n      this.nearSizes.push(width);\n    }\n  };\n\n  __decorate([Property('100%')], Row.prototype, \"height\", void 0);\n\n  __decorate([Complex({}, Border)], Row.prototype, \"border\", void 0);\n\n  return Row;\n}(ChildProperty);\n\nexport { Row };\n/**\r\n * Configures the `columns` of the chart.\r\n */\n\nvar Column =\n/** @class */\nfunction (_super) {\n  __extends(Column, _super);\n\n  function Column() {\n    /**\r\n     * The width of the column as a string accepts input both as like '100px' or '100%'.\r\n     * If specified as '100%, column renders to the full width of its chart.\r\n     *\r\n     * @default '100%'\r\n     */\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** @private */\n\n\n    _this.axes = [];\n    /** @private */\n\n    _this.nearSizes = [];\n    /** @private */\n\n    _this.farSizes = [];\n    /** @private */\n\n    _this.padding = 0;\n    return _this;\n  }\n  /**\r\n   * Measure the column size\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n\n\n  Column.prototype.computeSize = function (axis, scrollBarHeight) {\n    var height = 0;\n    var innerPadding = 5;\n\n    if (axis.visible && axis.internalVisibility) {\n      height += axis.findTickSize(axis.crossInAxis) + scrollBarHeight + axis.findLabelSize(axis.crossInAxis, innerPadding) + axis.lineStyle.width * 0.5;\n    }\n\n    if (axis.isAxisOpposedPosition) {\n      this.farSizes.push(height);\n    } else {\n      this.nearSizes.push(height);\n    }\n  };\n\n  __decorate([Property('100%')], Column.prototype, \"width\", void 0);\n\n  __decorate([Complex({}, Border)], Column.prototype, \"border\", void 0);\n\n  return Column;\n}(ChildProperty);\n\nexport { Column };\n/**\r\n * Configures the major grid lines in the `axis`.\r\n */\n\nvar MajorGridLines =\n/** @class */\nfunction (_super) {\n  __extends(MajorGridLines, _super);\n\n  function MajorGridLines() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(1)], MajorGridLines.prototype, \"width\", void 0);\n\n  __decorate([Property('')], MajorGridLines.prototype, \"dashArray\", void 0);\n\n  __decorate([Property(null)], MajorGridLines.prototype, \"color\", void 0);\n\n  return MajorGridLines;\n}(ChildProperty);\n\nexport { MajorGridLines };\n/**\r\n * Configures the minor grid lines in the `axis`.\r\n */\n\nvar MinorGridLines =\n/** @class */\nfunction (_super) {\n  __extends(MinorGridLines, _super);\n\n  function MinorGridLines() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(0.7)], MinorGridLines.prototype, \"width\", void 0);\n\n  __decorate([Property('')], MinorGridLines.prototype, \"dashArray\", void 0);\n\n  __decorate([Property(null)], MinorGridLines.prototype, \"color\", void 0);\n\n  return MinorGridLines;\n}(ChildProperty);\n\nexport { MinorGridLines };\n/**\r\n * Configures the axis line of a chart.\r\n */\n\nvar AxisLine =\n/** @class */\nfunction (_super) {\n  __extends(AxisLine, _super);\n\n  function AxisLine() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(1)], AxisLine.prototype, \"width\", void 0);\n\n  __decorate([Property('')], AxisLine.prototype, \"dashArray\", void 0);\n\n  __decorate([Property(null)], AxisLine.prototype, \"color\", void 0);\n\n  return AxisLine;\n}(ChildProperty);\n\nexport { AxisLine };\n/**\r\n * Configures the major tick lines.\r\n */\n\nvar MajorTickLines =\n/** @class */\nfunction (_super) {\n  __extends(MajorTickLines, _super);\n\n  function MajorTickLines() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(1)], MajorTickLines.prototype, \"width\", void 0);\n\n  __decorate([Property(5)], MajorTickLines.prototype, \"height\", void 0);\n\n  __decorate([Property(null)], MajorTickLines.prototype, \"color\", void 0);\n\n  return MajorTickLines;\n}(ChildProperty);\n\nexport { MajorTickLines };\n/**\r\n * Configures the minor tick lines.\r\n */\n\nvar MinorTickLines =\n/** @class */\nfunction (_super) {\n  __extends(MinorTickLines, _super);\n\n  function MinorTickLines() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(0.7)], MinorTickLines.prototype, \"width\", void 0);\n\n  __decorate([Property(5)], MinorTickLines.prototype, \"height\", void 0);\n\n  __decorate([Property(null)], MinorTickLines.prototype, \"color\", void 0);\n\n  return MinorTickLines;\n}(ChildProperty);\n\nexport { MinorTickLines };\n/**\r\n * Configures the crosshair ToolTip.\r\n */\n\nvar CrosshairTooltip =\n/** @class */\nfunction (_super) {\n  __extends(CrosshairTooltip, _super);\n\n  function CrosshairTooltip() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(false)], CrosshairTooltip.prototype, \"enable\", void 0);\n\n  __decorate([Property(null)], CrosshairTooltip.prototype, \"fill\", void 0);\n\n  __decorate([Complex(Theme.crosshairLabelFont, Font)], CrosshairTooltip.prototype, \"textStyle\", void 0);\n\n  return CrosshairTooltip;\n}(ChildProperty);\n\nexport { CrosshairTooltip };\n/**\r\n * Configures the axes in the chart.\r\n *\r\n * @public\r\n */\n\nvar Axis =\n/** @class */\nfunction (_super) {\n  __extends(Axis, _super); // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\n\n  function Axis(parent, propName, defaultValue, isArray) {\n    var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n    /** @private */\n\n\n    _this.visibleLabels = [];\n    /** @private */\n\n    _this.series = [];\n    /** @private */\n\n    _this.rect = new Rect(undefined, undefined, 0, 0);\n    /** @private */\n\n    _this.axisBottomLine = null;\n    /** @private */\n\n    _this.intervalDivs = [10, 5, 2, 1];\n    /** @private */\n\n    _this.isStack100 = false;\n    /** @private */\n\n    _this.crossAt = null;\n    /** @private */\n\n    _this.updatedRect = null;\n    /** @private */\n\n    _this.multiLevelLabelHeight = 0;\n    /** @private */\n\n    _this.isChart = true;\n    /** @private */\n\n    _this.isIntervalInDecimal = true;\n    /** @private */\n\n    _this.titleCollection = [];\n    /** @private */\n\n    _this.titleSize = new Size(0, 0);\n    /**\r\n     * Task: BLAZ-2044\r\n     * This property used to hide the axis when series hide from legend click\r\n     *\r\n     * @private\r\n     */\n\n    _this.internalVisibility = true;\n    /**\r\n     * This property is used to place the vertical axis in opposed position and horizontal axis in inversed\r\n     * when RTL is enabled in chart\r\n     * @private */\n\n    _this.isRTLEnabled = false;\n    _this.angle = _this.labelRotation;\n    return _this;\n  }\n  /**\r\n   * The function used to find tick size.\r\n   *\r\n   * @returns {number} tick line size\r\n   * @private\r\n   */\n\n\n  Axis.prototype.findTickSize = function (crossAxis) {\n    if (this.tickPosition === 'Inside') {\n      return 0;\n    }\n\n    if (crossAxis && (!crossAxis.visibleRange || this.isInside(crossAxis.visibleRange))) {\n      return 0;\n    }\n\n    return this.majorTickLines.height;\n  };\n  /**\r\n   * The function used to find axis position.\r\n   *\r\n   * @returns {number}\r\n   * @private\r\n   */\n\n\n  Axis.prototype.isInside = function (range) {\n    return inside(this.crossAt, range) || !this.isAxisOpposedPosition && this.crossAt >= range.max || this.isAxisOpposedPosition && this.crossAt <= range.min;\n  };\n  /**\r\n   * The function used to find label Size.\r\n   *\r\n   * @returns {number} labelSize\r\n   * @private\r\n   */\n\n\n  Axis.prototype.findLabelSize = function (crossAxis, innerPadding) {\n    var titleSize = 0;\n    var isHorizontal = this.orientation === 'Horizontal';\n\n    if (this.title) {\n      this.titleSize = measureText(this.title, this.titleStyle);\n      titleSize = this.titleSize.height + innerPadding;\n\n      if (this.rect.width || this.rect.height) {\n        var length_1 = isHorizontal ? this.rect.width : this.rect.height;\n        this.titleCollection = getTitle(this.title, this.titleStyle, length_1);\n        titleSize = titleSize * this.titleCollection.length;\n      }\n    }\n\n    if (this.labelPosition === 'Inside') {\n      return titleSize + innerPadding;\n    }\n\n    var diff;\n    var value;\n    var labelSize = titleSize + innerPadding + this.titlePadding + this.labelPadding + (this.orientation === 'Vertical' ? this.maxLabelSize.width : this.maxLabelSize.height) + this.multiLevelLabelHeight;\n\n    if (crossAxis && this.placeNextToAxisLine) {\n      var range = crossAxis.visibleRange;\n      var size = crossAxis.orientation === 'Horizontal' ? crossAxis.rect.width : crossAxis.rect.height;\n\n      if (!range || !size) {\n        return 0;\n      } else if (this.isInside(range)) {\n        value = this.findDifference(crossAxis);\n        diff = value * (size / range.delta);\n        diff = value * ((size - (diff < labelSize ? labelSize - diff : 0)) / range.delta);\n        labelSize = diff < labelSize ? labelSize - diff : 0;\n      }\n    }\n\n    return labelSize;\n  };\n  /**\r\n   * The function used to find axis position.\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n\n\n  Axis.prototype.updateCrossValue = function () {\n    var value = this.crossAt;\n\n    if (value === null || !this.isInside(this.crossInAxis.visibleRange)) {\n      this.updatedRect = this.rect;\n      return null;\n    }\n\n    var range = this.crossInAxis.visibleRange;\n\n    if (!this.isAxisOpposedPosition) {\n      if (this.crossAt > range.max) {\n        value = range.max;\n      }\n    } else {\n      if (this.crossAt < range.min) {\n        value = range.min;\n      }\n    }\n\n    this.updatedRect = extend({}, this.rect, null, true);\n\n    if (this.orientation === 'Horizontal') {\n      value = this.crossInAxis.rect.height - valueToCoefficient(value, this.crossInAxis) * this.crossInAxis.rect.height;\n      this.updatedRect.y = this.crossInAxis.rect.y + value;\n    } else {\n      value = valueToCoefficient(value, this.crossInAxis) * this.crossInAxis.rect.width;\n      this.updatedRect.x = this.crossInAxis.rect.x + value;\n    }\n  };\n\n  Axis.prototype.findDifference = function (crossAxis) {\n    var value = 0;\n\n    if (this.isAxisOpposedPosition) {\n      value = crossAxis.isAxisInverse ? crossAxis.visibleRange.min : crossAxis.visibleRange.max;\n    } else {\n      value = crossAxis.isAxisInverse ? crossAxis.visibleRange.max : crossAxis.visibleRange.min;\n    }\n\n    return Math.abs(this.crossAt - value);\n  };\n  /**\r\n   * Calculate visible range for axis.\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n\n\n  Axis.prototype.calculateVisibleRangeOnZooming = function (size) {\n    if (isZoomSet(this)) {\n      var baseRange = this.actualRange;\n      var start = void 0;\n      var end = void 0;\n\n      if (!this.isAxisInverse) {\n        start = this.actualRange.min + this.zoomPosition * this.actualRange.delta;\n        end = start + this.zoomFactor * this.actualRange.delta;\n      } else {\n        start = this.actualRange.max - this.zoomPosition * this.actualRange.delta;\n        end = start - this.zoomFactor * this.actualRange.delta;\n      }\n\n      if (start < baseRange.min) {\n        end = end + (baseRange.min - start);\n        start = baseRange.min;\n      }\n\n      if (end > baseRange.max) {\n        start = start - (end - baseRange.max);\n        end = baseRange.max;\n      }\n\n      this.doubleRange = new DoubleRange(start, end);\n      this.visibleRange = {\n        min: this.doubleRange.start,\n        max: this.doubleRange.end,\n        delta: this.doubleRange.delta,\n        interval: this.visibleRange.interval\n      };\n    }\n  };\n  /**\r\n   * Calculate range for x and y axis after zoom.\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n\n\n  Axis.prototype.calculateAxisRange = function (size, chart) {\n    if (chart.enableAutoIntervalOnBothAxis) {\n      if (this.orientation === 'Horizontal' && chart.zoomSettings.mode === 'X') {\n        for (var i = 0; i < this.series.length; i++) {\n          var yValue = [];\n\n          for (var _i = 0, _a = this.series[i].visiblePoints; _i < _a.length; _i++) {\n            var points = _a[_i];\n\n            if (points.xValue > this.visibleRange.min && points.xValue < this.visibleRange.max) {\n              yValue.push(points.yValue);\n            }\n          }\n\n          for (var _b = 0, _c = chart.axisCollections; _b < _c.length; _b++) {\n            var axis = _c[_b];\n\n            if (axis.orientation === 'Vertical' && !isNullOrUndefined(axis.series[i])) {\n              axis.series[i].yMin = Math.min.apply(Math, yValue);\n              axis.series[i].yMax = Math.max.apply(Math, yValue);\n              axis.baseModule.calculateRangeAndInterval(size, axis);\n            }\n          }\n        }\n      }\n\n      if (this.orientation === 'Vertical' && chart.zoomSettings.mode === 'Y') {\n        for (var i = 0; i < this.series.length; i++) {\n          var xValue = [];\n\n          for (var _d = 0, _e = this.series[i].visiblePoints; _d < _e.length; _d++) {\n            var points = _e[_d];\n\n            if (points.yValue > this.visibleRange.min && points.yValue < this.visibleRange.max) {\n              xValue.push(points.xValue);\n            }\n          }\n\n          for (var _f = 0, _g = chart.axisCollections; _f < _g.length; _f++) {\n            var axis = _g[_f];\n\n            if (axis.orientation === 'Horizontal' && !isNullOrUndefined(axis.series[i])) {\n              axis.series[i].xMin = Math.min.apply(Math, xValue);\n              axis.series[i].xMax = Math.max.apply(Math, xValue);\n              axis.baseModule.calculateRangeAndInterval(size, axis);\n            }\n          }\n        }\n      }\n    }\n  };\n  /**\r\n   * Triggers the event.\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n\n\n  Axis.prototype.triggerRangeRender = function (chart, minimum, maximum, interval) {\n    var argsData = {\n      cancel: false,\n      name: axisRangeCalculated,\n      axis: this,\n      minimum: minimum,\n      maximum: maximum,\n      interval: interval\n    };\n    chart.trigger(axisRangeCalculated, argsData);\n\n    if (!argsData.cancel) {\n      this.visibleRange = {\n        min: argsData.minimum,\n        max: argsData.maximum,\n        interval: argsData.interval,\n        delta: argsData.maximum - argsData.minimum\n      };\n    }\n  };\n  /**\r\n   * Calculate padding for the axis.\r\n   *\r\n   * @returns {string}\r\n   * @private\r\n   */\n\n\n  Axis.prototype.getRangePadding = function (chart) {\n    var padding = this.rangePadding;\n\n    if (padding !== 'Auto') {\n      return padding;\n    }\n\n    switch (this.orientation) {\n      case 'Horizontal':\n        if (chart.requireInvertedAxis) {\n          padding = this.isStack100 || this.baseModule.chart.stockChart ? 'Round' : 'Normal';\n        } else {\n          padding = 'None';\n        }\n\n        break;\n\n      case 'Vertical':\n        if (!chart.requireInvertedAxis) {\n          padding = this.isStack100 || this.baseModule.chart.stockChart ? 'Round' : 'Normal';\n        } else {\n          padding = 'None';\n        }\n\n        break;\n    }\n\n    return padding;\n  };\n  /**\r\n   * Calculate maximum label width for the axis.\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n\n\n  Axis.prototype.getMaxLabelWidth = function (chart) {\n    var pointX;\n    var previousEnd = 0;\n    var isIntersect = false;\n    var isAxisLabelBreak;\n    this.angle = this.labelRotation;\n    this.maxLabelSize = new Size(0, 0);\n    var action = this.labelIntersectAction;\n    var label;\n\n    for (var i = 0, len = this.visibleLabels.length; i < len; i++) {\n      label = this.visibleLabels[i];\n      isAxisLabelBreak = isBreakLabel(label.originalText);\n\n      if (isAxisLabelBreak) {\n        label.size = measureText(label.originalText.replace(/<br>/g, ' '), this.labelStyle);\n        label.breakLabelSize = measureText(this.enableTrim ? label.text.join('<br>') : label.originalText, this.labelStyle);\n      } else {\n        label.size = measureText(label.text, this.labelStyle);\n      }\n\n      var width = isAxisLabelBreak ? label.breakLabelSize.width : label.size.width;\n\n      if (width > this.maxLabelSize.width) {\n        this.maxLabelSize.width = width;\n        this.rotatedLabel = label.text;\n      }\n\n      var height = isAxisLabelBreak ? label.breakLabelSize.height : label.size.height;\n\n      if (height > this.maxLabelSize.height) {\n        this.maxLabelSize.height = height;\n      }\n\n      if (isAxisLabelBreak) {\n        label.text = this.enableTrim ? label.text : label.originalText.split('<br>');\n      }\n\n      if (action === 'None' || action === 'Hide' || action === 'Trim') {\n        continue;\n      }\n\n      if ((action !== 'None' || this.angle % 360 === 0) && this.orientation === 'Horizontal' && this.rect.width > 0 && !isIntersect) {\n        var width1 = isAxisLabelBreak ? label.breakLabelSize.width : label.size.width;\n        pointX = valueToCoefficient(label.value, this) * this.rect.width + this.rect.x;\n        pointX -= width1 / 2;\n\n        if (this.edgeLabelPlacement === 'Shift') {\n          if (i === 0 && pointX < this.rect.x) {\n            pointX = this.rect.x;\n          }\n\n          if (i === this.visibleLabels.length - 1 && pointX + width1 > this.rect.x + this.rect.width) {\n            pointX = this.rect.x + this.rect.width - width1;\n          }\n        }\n\n        switch (action) {\n          case 'MultipleRows':\n            if (i > 0) {\n              this.findMultiRows(i, pointX, label, isAxisLabelBreak);\n            }\n\n            break;\n\n          case 'Rotate45':\n          case 'Rotate90':\n            if (i > 0 && (!this.isAxisInverse ? pointX <= previousEnd : pointX + width1 >= previousEnd)) {\n              this.angle = action === 'Rotate45' ? 45 : 90;\n              isIntersect = true;\n            }\n\n            break;\n\n          default:\n            if (isAxisLabelBreak) {\n              var result = void 0;\n              var result1 = [];\n              var str = void 0;\n\n              for (var index = 0; index < label.text.length; index++) {\n                result = textWrap(label.text[index], this.rect.width / this.visibleLabels.length, this.labelStyle);\n\n                if (result.length > 1) {\n                  for (var j = 0; j < result.length; j++) {\n                    str = result[j];\n                    result1.push(str);\n                  }\n                } else {\n                  result1.push(result[0]);\n                }\n              }\n\n              label.text = result1;\n            } else {\n              label.text = textWrap(label.text, this.rect.width / this.visibleLabels.length, this.labelStyle);\n            } // eslint-disable-next-line no-case-declarations\n\n\n            var height_1 = label.size.height * label.text.length;\n\n            if (height_1 > this.maxLabelSize.height) {\n              this.maxLabelSize.height = height_1;\n            }\n\n            break;\n        }\n\n        previousEnd = this.isAxisInverse ? pointX : pointX + width1;\n      }\n    }\n\n    if (this.angle !== 0 && this.orientation === 'Horizontal') {\n      //I264474: Fix for datasource bind im mounted console error ocurred\n      this.rotatedLabel = isNullOrUndefined(this.rotatedLabel) ? '' : this.rotatedLabel;\n      var isHorizontalAngle = this.angle === -360 || this.angle === 0 || this.angle === -180 || this.angle === 180 || this.angle === 360; // To avoid overlap axis label with chart title or chart legend when it is outside.\n\n      if (this.labelPosition === 'Outside' && !isHorizontalAngle && isBreakLabel(this.rotatedLabel)) {\n        this.maxLabelSize = new Size(this.maxLabelSize.height, this.maxLabelSize.width);\n      } else {\n        this.maxLabelSize = rotateTextSize(this.labelStyle, this.rotatedLabel, this.angle, chart);\n      }\n    }\n\n    if (chart.multiLevelLabelModule && this.multiLevelLabels.length > 0) {\n      chart.multiLevelLabelModule.getMultilevelLabelsHeight(this);\n    }\n  };\n  /**\r\n   * Finds the multiple rows for axis.\r\n   *\r\n   * @returns {void}\r\n   */\n\n\n  Axis.prototype.findMultiRows = function (length, currentX, currentLabel, isBreakLabels) {\n    var label;\n    var pointX;\n    var width2;\n    var store = [];\n    var isMultiRows;\n\n    for (var i = length - 1; i >= 0; i--) {\n      label = this.visibleLabels[i];\n      width2 = isBreakLabels ? label.breakLabelSize.width : label.size.width;\n      pointX = valueToCoefficient(label.value, this) * this.rect.width + this.rect.x;\n      isMultiRows = !this.isAxisInverse ? currentX < pointX + width2 * 0.5 : currentX + currentLabel.size.width > pointX - width2 * 0.5;\n\n      if (isMultiRows) {\n        store.push(label.index);\n        currentLabel.index = currentLabel.index > label.index ? currentLabel.index : label.index + 1;\n      } else {\n        currentLabel.index = store.indexOf(label.index) > -1 ? currentLabel.index : label.index;\n      }\n    }\n\n    var height = (isBreakLabels ? currentLabel.breakLabelSize.height : currentLabel.size.height) * currentLabel.index + 5 * (currentLabel.index - 1);\n\n    if (height > this.maxLabelSize.height) {\n      this.maxLabelSize.height = height;\n    }\n  };\n  /**\r\n   * Finds the default module for axis.\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n\n\n  Axis.prototype.getModule = function (chart) {\n    if (this.valueType === 'Double') {\n      this.baseModule = new Double(chart);\n    } else {\n      this.baseModule = chart[firstToLowerCase(this.valueType) + 'Module'];\n    }\n  };\n  /**\r\n    * Set the axis `opposedPosition` and `isInversed` properties.\r\n    *\r\n    * @returns {void}\r\n    * @private\r\n    */\n\n\n  Axis.prototype.setIsInversedAndOpposedPosition = function (isPolar) {\n    if (isPolar === void 0) {\n      isPolar = false;\n    }\n\n    this.isAxisOpposedPosition = this.opposedPosition || !isPolar && this.isRTLEnabled && this.orientation == 'Vertical';\n    this.isAxisInverse = this.isInversed || this.isRTLEnabled && this.orientation == 'Horizontal';\n  };\n\n  __decorate([Complex(Theme.axisLabelFont, Font)], Axis.prototype, \"labelStyle\", void 0);\n\n  __decorate([Complex({}, CrosshairTooltip)], Axis.prototype, \"crosshairTooltip\", void 0);\n\n  __decorate([Property('')], Axis.prototype, \"title\", void 0);\n\n  __decorate([Complex(Theme.axisTitleFont, Font)], Axis.prototype, \"titleStyle\", void 0);\n\n  __decorate([Property('')], Axis.prototype, \"labelFormat\", void 0);\n\n  __decorate([Property('')], Axis.prototype, \"skeleton\", void 0);\n\n  __decorate([Property('DateTime')], Axis.prototype, \"skeletonType\", void 0);\n\n  __decorate([Property('Center')], Axis.prototype, \"lineBreakAlignment\", void 0);\n\n  __decorate([Property(0)], Axis.prototype, \"plotOffset\", void 0);\n\n  __decorate([Property(null)], Axis.prototype, \"plotOffsetLeft\", void 0);\n\n  __decorate([Property(null)], Axis.prototype, \"plotOffsetTop\", void 0);\n\n  __decorate([Property(null)], Axis.prototype, \"plotOffsetRight\", void 0);\n\n  __decorate([Property(null)], Axis.prototype, \"plotOffsetBottom\", void 0);\n\n  __decorate([Property(false)], Axis.prototype, \"isIndexed\", void 0);\n\n  __decorate([Property(10)], Axis.prototype, \"logBase\", void 0);\n\n  __decorate([Property(0)], Axis.prototype, \"columnIndex\", void 0);\n\n  __decorate([Property(0)], Axis.prototype, \"rowIndex\", void 0);\n\n  __decorate([Property(1)], Axis.prototype, \"span\", void 0);\n\n  __decorate([Property(null)], Axis.prototype, \"desiredIntervals\", void 0);\n\n  __decorate([Property(3)], Axis.prototype, \"maximumLabels\", void 0);\n\n  __decorate([Property(1)], Axis.prototype, \"zoomFactor\", void 0);\n\n  __decorate([Property(0)], Axis.prototype, \"zoomPosition\", void 0);\n\n  __decorate([Property(true)], Axis.prototype, \"enableScrollbarOnZooming\", void 0);\n\n  __decorate([Property(false)], Axis.prototype, \"opposedPosition\", void 0);\n\n  __decorate([Property(true)], Axis.prototype, \"enableAutoIntervalOnZooming\", void 0);\n\n  __decorate([Property('Auto')], Axis.prototype, \"rangePadding\", void 0);\n\n  __decorate([Property('Double')], Axis.prototype, \"valueType\", void 0);\n\n  __decorate([Property('None')], Axis.prototype, \"edgeLabelPlacement\", void 0);\n\n  __decorate([Property('Auto')], Axis.prototype, \"intervalType\", void 0);\n\n  __decorate([Property('BetweenTicks')], Axis.prototype, \"labelPlacement\", void 0);\n\n  __decorate([Property('Outside')], Axis.prototype, \"tickPosition\", void 0);\n\n  __decorate([Property('Outside')], Axis.prototype, \"labelPosition\", void 0);\n\n  __decorate([Property('')], Axis.prototype, \"name\", void 0);\n\n  __decorate([Property(true)], Axis.prototype, \"visible\", void 0);\n\n  __decorate([Property(0)], Axis.prototype, \"minorTicksPerInterval\", void 0);\n\n  __decorate([Property(0)], Axis.prototype, \"labelRotation\", void 0);\n\n  __decorate([Property(null)], Axis.prototype, \"crossesAt\", void 0);\n\n  __decorate([Property(true)], Axis.prototype, \"placeNextToAxisLine\", void 0);\n\n  __decorate([Property(null)], Axis.prototype, \"crossesInAxis\", void 0);\n\n  __decorate([Property(null)], Axis.prototype, \"minimum\", void 0);\n\n  __decorate([Property(null)], Axis.prototype, \"maximum\", void 0);\n\n  __decorate([Property(null)], Axis.prototype, \"interval\", void 0);\n\n  __decorate([Property(34)], Axis.prototype, \"maximumLabelWidth\", void 0);\n\n  __decorate([Property(false)], Axis.prototype, \"enableTrim\", void 0);\n\n  __decorate([Property(5)], Axis.prototype, \"labelPadding\", void 0);\n\n  __decorate([Property(5)], Axis.prototype, \"titlePadding\", void 0);\n\n  __decorate([Complex({}, MajorTickLines)], Axis.prototype, \"majorTickLines\", void 0);\n\n  __decorate([Complex({}, MinorTickLines)], Axis.prototype, \"minorTickLines\", void 0);\n\n  __decorate([Complex({}, MajorGridLines)], Axis.prototype, \"majorGridLines\", void 0);\n\n  __decorate([Complex({}, MinorGridLines)], Axis.prototype, \"minorGridLines\", void 0);\n\n  __decorate([Complex({}, AxisLine)], Axis.prototype, \"lineStyle\", void 0);\n\n  __decorate([Property('Trim')], Axis.prototype, \"labelIntersectAction\", void 0);\n\n  __decorate([Property(false)], Axis.prototype, \"isInversed\", void 0);\n\n  __decorate([Property(100)], Axis.prototype, \"coefficient\", void 0);\n\n  __decorate([Property(0)], Axis.prototype, \"startAngle\", void 0);\n\n  __decorate([Property(true)], Axis.prototype, \"startFromZero\", void 0);\n\n  __decorate([Property(null)], Axis.prototype, \"description\", void 0);\n\n  __decorate([Property(2)], Axis.prototype, \"tabIndex\", void 0);\n\n  __decorate([Collection([], StripLineSettings)], Axis.prototype, \"stripLines\", void 0);\n\n  __decorate([Collection([], MultiLevelLabels)], Axis.prototype, \"multiLevelLabels\", void 0);\n\n  __decorate([Complex({\n    color: null,\n    width: 0,\n    type: 'Rectangle'\n  }, LabelBorder)], Axis.prototype, \"border\", void 0);\n\n  __decorate([Complex({}, ScrollbarSettings)], Axis.prototype, \"scrollbarSettings\", void 0);\n\n  return Axis;\n}(ChildProperty);\n\nexport { Axis };\n/** @private */\n\nvar VisibleLabels =\n/** @class */\nfunction () {\n  function VisibleLabels(text, value, labelStyle, originalText, size, breakLabelSize, index) {\n    if (size === void 0) {\n      size = new Size(0, 0);\n    }\n\n    if (breakLabelSize === void 0) {\n      breakLabelSize = new Size(0, 0);\n    }\n\n    if (index === void 0) {\n      index = 1;\n    }\n\n    this.text = text;\n    this.originalText = originalText;\n    this.value = value;\n    this.labelStyle = labelStyle;\n    this.size = size;\n    this.breakLabelSize = breakLabelSize;\n    this.index = index;\n  }\n\n  return VisibleLabels;\n}();\n\nexport { VisibleLabels };","map":{"version":3,"sources":["C:/Users/x/Desktop/openDSA/openDSA_dashboard/project/node_modules/@syncfusion/ej2-react-charts/node_modules/@syncfusion/ej2-charts/src/chart/axis/axis.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Property","Complex","ChildProperty","Collection","extend","Font","Border","rotateTextSize","firstToLowerCase","valueToCoefficient","inside","isBreakLabel","isZoomSet","getTitle","Size","Rect","measureText","DoubleRange","Double","Theme","axisRangeCalculated","StripLineSettings","MultiLevelLabels","LabelBorder","ScrollbarSettings","textWrap","isNullOrUndefined","Row","_super","_this","apply","axes","nearSizes","farSizes","computeSize","axis","scrollBarHeight","width","innerPadding","visible","internalVisibility","findTickSize","crossInAxis","findLabelSize","lineStyle","isAxisOpposedPosition","push","Column","padding","height","MajorGridLines","MinorGridLines","AxisLine","MajorTickLines","MinorTickLines","CrosshairTooltip","crosshairLabelFont","Axis","parent","propName","defaultValue","isArray","call","visibleLabels","series","rect","undefined","axisBottomLine","intervalDivs","isStack100","crossAt","updatedRect","multiLevelLabelHeight","isChart","isIntervalInDecimal","titleCollection","titleSize","isRTLEnabled","angle","labelRotation","crossAxis","tickPosition","visibleRange","isInside","majorTickLines","range","max","min","isHorizontal","orientation","title","titleStyle","length_1","labelPosition","diff","value","labelSize","titlePadding","labelPadding","maxLabelSize","placeNextToAxisLine","size","findDifference","delta","updateCrossValue","y","x","isAxisInverse","Math","abs","calculateVisibleRangeOnZooming","baseRange","actualRange","start","end","zoomPosition","zoomFactor","doubleRange","interval","calculateAxisRange","chart","enableAutoIntervalOnBothAxis","zoomSettings","mode","yValue","_i","_a","visiblePoints","points","xValue","_b","_c","axisCollections","yMin","yMax","baseModule","calculateRangeAndInterval","_d","_e","_f","_g","xMin","xMax","triggerRangeRender","minimum","maximum","argsData","cancel","name","trigger","getRangePadding","rangePadding","requireInvertedAxis","stockChart","getMaxLabelWidth","pointX","previousEnd","isIntersect","isAxisLabelBreak","action","labelIntersectAction","label","len","originalText","replace","labelStyle","breakLabelSize","enableTrim","text","join","rotatedLabel","split","width1","edgeLabelPlacement","findMultiRows","result","result1","str","index","j","height_1","isHorizontalAngle","multiLevelLabelModule","multiLevelLabels","getMultilevelLabelsHeight","currentX","currentLabel","isBreakLabels","width2","store","isMultiRows","indexOf","getModule","valueType","setIsInversedAndOpposedPosition","isPolar","opposedPosition","isInversed","axisLabelFont","axisTitleFont","color","type","VisibleLabels"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/* eslint-disable @typescript-eslint/ban-types */\r\n/* eslint-disable valid-jsdoc */\r\n/* eslint-disable jsdoc/require-param */\r\n/* eslint-disable @typescript-eslint/no-inferrable-types */\r\nimport { Property, Complex, ChildProperty, Collection, extend } from '@syncfusion/ej2-base';\r\nimport { Font, Border } from '../../common/model/base';\r\nimport { rotateTextSize, firstToLowerCase, valueToCoefficient, inside, isBreakLabel, isZoomSet, getTitle } from '../../common/utils/helper';\r\nimport { Size, Rect, measureText } from '@syncfusion/ej2-svg-base';\r\nimport { DoubleRange } from '../utils/double-range';\r\nimport { Double } from '../axis/double-axis';\r\nimport { Theme } from '../../common/model/theme';\r\nimport { axisRangeCalculated } from '../../common/model/constants';\r\nimport { StripLineSettings, MultiLevelLabels, LabelBorder, ScrollbarSettings } from '../model/chart-base';\r\nimport { textWrap } from '../../common/utils/helper';\r\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\r\n/**\r\n * Configures the `rows` of the chart.\r\n */\r\nvar Row = /** @class */ (function (_super) {\r\n    __extends(Row, _super);\r\n    function Row() {\r\n        /**\r\n         * The height of the row as a string accept input both as '100px' and '100%'.\r\n         * If specified as '100%, row renders to the full height of its chart.\r\n         *\r\n         * @default '100%'\r\n         */\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /** @private */\r\n        _this.axes = [];\r\n        /** @private */\r\n        _this.nearSizes = [];\r\n        /** @private */\r\n        _this.farSizes = [];\r\n        return _this;\r\n    }\r\n    /**\r\n     * Measure the row size\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    Row.prototype.computeSize = function (axis, scrollBarHeight) {\r\n        var width = 0;\r\n        var innerPadding = 5;\r\n        if (axis.visible && axis.internalVisibility) {\r\n            width += (axis.findTickSize(axis.crossInAxis) + scrollBarHeight +\r\n                axis.findLabelSize(axis.crossInAxis, innerPadding) + axis.lineStyle.width * 0.5);\r\n        }\r\n        if (axis.isAxisOpposedPosition) {\r\n            this.farSizes.push(width);\r\n        }\r\n        else {\r\n            this.nearSizes.push(width);\r\n        }\r\n    };\r\n    __decorate([\r\n        Property('100%')\r\n    ], Row.prototype, \"height\", void 0);\r\n    __decorate([\r\n        Complex({}, Border)\r\n    ], Row.prototype, \"border\", void 0);\r\n    return Row;\r\n}(ChildProperty));\r\nexport { Row };\r\n/**\r\n * Configures the `columns` of the chart.\r\n */\r\nvar Column = /** @class */ (function (_super) {\r\n    __extends(Column, _super);\r\n    function Column() {\r\n        /**\r\n         * The width of the column as a string accepts input both as like '100px' or '100%'.\r\n         * If specified as '100%, column renders to the full width of its chart.\r\n         *\r\n         * @default '100%'\r\n         */\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /** @private */\r\n        _this.axes = [];\r\n        /** @private */\r\n        _this.nearSizes = [];\r\n        /** @private */\r\n        _this.farSizes = [];\r\n        /** @private */\r\n        _this.padding = 0;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Measure the column size\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    Column.prototype.computeSize = function (axis, scrollBarHeight) {\r\n        var height = 0;\r\n        var innerPadding = 5;\r\n        if (axis.visible && axis.internalVisibility) {\r\n            height += (axis.findTickSize(axis.crossInAxis) + scrollBarHeight +\r\n                axis.findLabelSize(axis.crossInAxis, innerPadding) + axis.lineStyle.width * 0.5);\r\n        }\r\n        if (axis.isAxisOpposedPosition) {\r\n            this.farSizes.push(height);\r\n        }\r\n        else {\r\n            this.nearSizes.push(height);\r\n        }\r\n    };\r\n    __decorate([\r\n        Property('100%')\r\n    ], Column.prototype, \"width\", void 0);\r\n    __decorate([\r\n        Complex({}, Border)\r\n    ], Column.prototype, \"border\", void 0);\r\n    return Column;\r\n}(ChildProperty));\r\nexport { Column };\r\n/**\r\n * Configures the major grid lines in the `axis`.\r\n */\r\nvar MajorGridLines = /** @class */ (function (_super) {\r\n    __extends(MajorGridLines, _super);\r\n    function MajorGridLines() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    __decorate([\r\n        Property(1)\r\n    ], MajorGridLines.prototype, \"width\", void 0);\r\n    __decorate([\r\n        Property('')\r\n    ], MajorGridLines.prototype, \"dashArray\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], MajorGridLines.prototype, \"color\", void 0);\r\n    return MajorGridLines;\r\n}(ChildProperty));\r\nexport { MajorGridLines };\r\n/**\r\n * Configures the minor grid lines in the `axis`.\r\n */\r\nvar MinorGridLines = /** @class */ (function (_super) {\r\n    __extends(MinorGridLines, _super);\r\n    function MinorGridLines() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    __decorate([\r\n        Property(0.7)\r\n    ], MinorGridLines.prototype, \"width\", void 0);\r\n    __decorate([\r\n        Property('')\r\n    ], MinorGridLines.prototype, \"dashArray\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], MinorGridLines.prototype, \"color\", void 0);\r\n    return MinorGridLines;\r\n}(ChildProperty));\r\nexport { MinorGridLines };\r\n/**\r\n * Configures the axis line of a chart.\r\n */\r\nvar AxisLine = /** @class */ (function (_super) {\r\n    __extends(AxisLine, _super);\r\n    function AxisLine() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    __decorate([\r\n        Property(1)\r\n    ], AxisLine.prototype, \"width\", void 0);\r\n    __decorate([\r\n        Property('')\r\n    ], AxisLine.prototype, \"dashArray\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], AxisLine.prototype, \"color\", void 0);\r\n    return AxisLine;\r\n}(ChildProperty));\r\nexport { AxisLine };\r\n/**\r\n * Configures the major tick lines.\r\n */\r\nvar MajorTickLines = /** @class */ (function (_super) {\r\n    __extends(MajorTickLines, _super);\r\n    function MajorTickLines() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    __decorate([\r\n        Property(1)\r\n    ], MajorTickLines.prototype, \"width\", void 0);\r\n    __decorate([\r\n        Property(5)\r\n    ], MajorTickLines.prototype, \"height\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], MajorTickLines.prototype, \"color\", void 0);\r\n    return MajorTickLines;\r\n}(ChildProperty));\r\nexport { MajorTickLines };\r\n/**\r\n * Configures the minor tick lines.\r\n */\r\nvar MinorTickLines = /** @class */ (function (_super) {\r\n    __extends(MinorTickLines, _super);\r\n    function MinorTickLines() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    __decorate([\r\n        Property(0.7)\r\n    ], MinorTickLines.prototype, \"width\", void 0);\r\n    __decorate([\r\n        Property(5)\r\n    ], MinorTickLines.prototype, \"height\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], MinorTickLines.prototype, \"color\", void 0);\r\n    return MinorTickLines;\r\n}(ChildProperty));\r\nexport { MinorTickLines };\r\n/**\r\n * Configures the crosshair ToolTip.\r\n */\r\nvar CrosshairTooltip = /** @class */ (function (_super) {\r\n    __extends(CrosshairTooltip, _super);\r\n    function CrosshairTooltip() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    __decorate([\r\n        Property(false)\r\n    ], CrosshairTooltip.prototype, \"enable\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], CrosshairTooltip.prototype, \"fill\", void 0);\r\n    __decorate([\r\n        Complex(Theme.crosshairLabelFont, Font)\r\n    ], CrosshairTooltip.prototype, \"textStyle\", void 0);\r\n    return CrosshairTooltip;\r\n}(ChildProperty));\r\nexport { CrosshairTooltip };\r\n/**\r\n * Configures the axes in the chart.\r\n *\r\n * @public\r\n */\r\nvar Axis = /** @class */ (function (_super) {\r\n    __extends(Axis, _super);\r\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\n    function Axis(parent, propName, defaultValue, isArray) {\r\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\r\n        /** @private */\r\n        _this.visibleLabels = [];\r\n        /** @private */\r\n        _this.series = [];\r\n        /** @private */\r\n        _this.rect = new Rect(undefined, undefined, 0, 0);\r\n        /** @private */\r\n        _this.axisBottomLine = null;\r\n        /** @private */\r\n        _this.intervalDivs = [10, 5, 2, 1];\r\n        /** @private */\r\n        _this.isStack100 = false;\r\n        /** @private */\r\n        _this.crossAt = null;\r\n        /** @private */\r\n        _this.updatedRect = null;\r\n        /** @private */\r\n        _this.multiLevelLabelHeight = 0;\r\n        /** @private */\r\n        _this.isChart = true;\r\n        /** @private */\r\n        _this.isIntervalInDecimal = true;\r\n        /** @private */\r\n        _this.titleCollection = [];\r\n        /** @private */\r\n        _this.titleSize = new Size(0, 0);\r\n        /**\r\n         * Task: BLAZ-2044\r\n         * This property used to hide the axis when series hide from legend click\r\n         *\r\n         * @private\r\n         */\r\n        _this.internalVisibility = true;\r\n        /**\r\n         * This property is used to place the vertical axis in opposed position and horizontal axis in inversed\r\n         * when RTL is enabled in chart\r\n         * @private */\r\n        _this.isRTLEnabled = false;\r\n        _this.angle = _this.labelRotation;\r\n        return _this;\r\n    }\r\n    /**\r\n     * The function used to find tick size.\r\n     *\r\n     * @returns {number} tick line size\r\n     * @private\r\n     */\r\n    Axis.prototype.findTickSize = function (crossAxis) {\r\n        if (this.tickPosition === 'Inside') {\r\n            return 0;\r\n        }\r\n        if (crossAxis && (!crossAxis.visibleRange || this.isInside(crossAxis.visibleRange))) {\r\n            return 0;\r\n        }\r\n        return this.majorTickLines.height;\r\n    };\r\n    /**\r\n     * The function used to find axis position.\r\n     *\r\n     * @returns {number}\r\n     * @private\r\n     */\r\n    Axis.prototype.isInside = function (range) {\r\n        return (inside(this.crossAt, range) ||\r\n            (!this.isAxisOpposedPosition && this.crossAt >= range.max) || (this.isAxisOpposedPosition && this.crossAt <= range.min));\r\n    };\r\n    /**\r\n     * The function used to find label Size.\r\n     *\r\n     * @returns {number} labelSize\r\n     * @private\r\n     */\r\n    Axis.prototype.findLabelSize = function (crossAxis, innerPadding) {\r\n        var titleSize = 0;\r\n        var isHorizontal = this.orientation === 'Horizontal';\r\n        if (this.title) {\r\n            this.titleSize = measureText(this.title, this.titleStyle);\r\n            titleSize = this.titleSize.height + innerPadding;\r\n            if (this.rect.width || this.rect.height) {\r\n                var length_1 = isHorizontal ? this.rect.width : this.rect.height;\r\n                this.titleCollection = getTitle(this.title, this.titleStyle, length_1);\r\n                titleSize = (titleSize * this.titleCollection.length);\r\n            }\r\n        }\r\n        if (this.labelPosition === 'Inside') {\r\n            return titleSize + innerPadding;\r\n        }\r\n        var diff;\r\n        var value;\r\n        var labelSize = titleSize + innerPadding + this.titlePadding + this.labelPadding +\r\n            ((this.orientation === 'Vertical') ? this.maxLabelSize.width : this.maxLabelSize.height) + this.multiLevelLabelHeight;\r\n        if (crossAxis && this.placeNextToAxisLine) {\r\n            var range = crossAxis.visibleRange;\r\n            var size = (crossAxis.orientation === 'Horizontal') ? crossAxis.rect.width : crossAxis.rect.height;\r\n            if (!range || !size) {\r\n                return 0;\r\n            }\r\n            else if (this.isInside(range)) {\r\n                value = this.findDifference(crossAxis);\r\n                diff = (value) * (size / range.delta);\r\n                diff = (value) * ((size - (diff < labelSize ? (labelSize - diff) : 0)) / range.delta);\r\n                labelSize = (diff < labelSize) ? (labelSize - diff) : 0;\r\n            }\r\n        }\r\n        return labelSize;\r\n    };\r\n    /**\r\n     * The function used to find axis position.\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    Axis.prototype.updateCrossValue = function () {\r\n        var value = this.crossAt;\r\n        if (value === null || !this.isInside(this.crossInAxis.visibleRange)) {\r\n            this.updatedRect = this.rect;\r\n            return null;\r\n        }\r\n        var range = this.crossInAxis.visibleRange;\r\n        if (!this.isAxisOpposedPosition) {\r\n            if (this.crossAt > range.max) {\r\n                value = range.max;\r\n            }\r\n        }\r\n        else {\r\n            if (this.crossAt < range.min) {\r\n                value = range.min;\r\n            }\r\n        }\r\n        this.updatedRect = extend({}, this.rect, null, true);\r\n        if (this.orientation === 'Horizontal') {\r\n            value = this.crossInAxis.rect.height - (valueToCoefficient(value, this.crossInAxis) * this.crossInAxis.rect.height);\r\n            this.updatedRect.y = this.crossInAxis.rect.y + value;\r\n        }\r\n        else {\r\n            value = valueToCoefficient(value, this.crossInAxis) * this.crossInAxis.rect.width;\r\n            this.updatedRect.x = this.crossInAxis.rect.x + value;\r\n        }\r\n    };\r\n    Axis.prototype.findDifference = function (crossAxis) {\r\n        var value = 0;\r\n        if (this.isAxisOpposedPosition) {\r\n            value = crossAxis.isAxisInverse ? crossAxis.visibleRange.min : crossAxis.visibleRange.max;\r\n        }\r\n        else {\r\n            value = crossAxis.isAxisInverse ? crossAxis.visibleRange.max : crossAxis.visibleRange.min;\r\n        }\r\n        return Math.abs(this.crossAt - value);\r\n    };\r\n    /**\r\n     * Calculate visible range for axis.\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    Axis.prototype.calculateVisibleRangeOnZooming = function (size) {\r\n        if (isZoomSet(this)) {\r\n            var baseRange = this.actualRange;\r\n            var start = void 0;\r\n            var end = void 0;\r\n            if (!this.isAxisInverse) {\r\n                start = this.actualRange.min + this.zoomPosition * this.actualRange.delta;\r\n                end = start + this.zoomFactor * this.actualRange.delta;\r\n            }\r\n            else {\r\n                start = this.actualRange.max - (this.zoomPosition * this.actualRange.delta);\r\n                end = start - (this.zoomFactor * this.actualRange.delta);\r\n            }\r\n            if (start < baseRange.min) {\r\n                end = end + (baseRange.min - start);\r\n                start = baseRange.min;\r\n            }\r\n            if (end > baseRange.max) {\r\n                start = start - (end - baseRange.max);\r\n                end = baseRange.max;\r\n            }\r\n            this.doubleRange = new DoubleRange(start, end);\r\n            this.visibleRange = { min: this.doubleRange.start, max: this.doubleRange.end,\r\n                delta: this.doubleRange.delta, interval: this.visibleRange.interval };\r\n        }\r\n    };\r\n    /**\r\n     * Calculate range for x and y axis after zoom.\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    Axis.prototype.calculateAxisRange = function (size, chart) {\r\n        if (chart.enableAutoIntervalOnBothAxis) {\r\n            if (this.orientation === 'Horizontal' && chart.zoomSettings.mode === 'X') {\r\n                for (var i = 0; i < this.series.length; i++) {\r\n                    var yValue = [];\r\n                    for (var _i = 0, _a = this.series[i].visiblePoints; _i < _a.length; _i++) {\r\n                        var points = _a[_i];\r\n                        if ((points.xValue > this.visibleRange.min) && (points.xValue < this.visibleRange.max)) {\r\n                            yValue.push(points.yValue);\r\n                        }\r\n                    }\r\n                    for (var _b = 0, _c = chart.axisCollections; _b < _c.length; _b++) {\r\n                        var axis = _c[_b];\r\n                        if (axis.orientation === 'Vertical' && !isNullOrUndefined(axis.series[i])) {\r\n                            axis.series[i].yMin = Math.min.apply(Math, yValue);\r\n                            axis.series[i].yMax = Math.max.apply(Math, yValue);\r\n                            axis.baseModule.calculateRangeAndInterval(size, axis);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.orientation === 'Vertical' && chart.zoomSettings.mode === 'Y') {\r\n                for (var i = 0; i < this.series.length; i++) {\r\n                    var xValue = [];\r\n                    for (var _d = 0, _e = this.series[i].visiblePoints; _d < _e.length; _d++) {\r\n                        var points = _e[_d];\r\n                        if ((points.yValue > this.visibleRange.min) && (points.yValue < this.visibleRange.max)) {\r\n                            xValue.push(points.xValue);\r\n                        }\r\n                    }\r\n                    for (var _f = 0, _g = chart.axisCollections; _f < _g.length; _f++) {\r\n                        var axis = _g[_f];\r\n                        if (axis.orientation === 'Horizontal' && !isNullOrUndefined(axis.series[i])) {\r\n                            axis.series[i].xMin = Math.min.apply(Math, xValue);\r\n                            axis.series[i].xMax = Math.max.apply(Math, xValue);\r\n                            axis.baseModule.calculateRangeAndInterval(size, axis);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Triggers the event.\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    Axis.prototype.triggerRangeRender = function (chart, minimum, maximum, interval) {\r\n        var argsData = {\r\n            cancel: false, name: axisRangeCalculated, axis: this,\r\n            minimum: minimum, maximum: maximum, interval: interval\r\n        };\r\n        chart.trigger(axisRangeCalculated, argsData);\r\n        if (!argsData.cancel) {\r\n            this.visibleRange = { min: argsData.minimum, max: argsData.maximum, interval: argsData.interval,\r\n                delta: argsData.maximum - argsData.minimum };\r\n        }\r\n    };\r\n    /**\r\n     * Calculate padding for the axis.\r\n     *\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    Axis.prototype.getRangePadding = function (chart) {\r\n        var padding = this.rangePadding;\r\n        if (padding !== 'Auto') {\r\n            return padding;\r\n        }\r\n        switch (this.orientation) {\r\n            case 'Horizontal':\r\n                if (chart.requireInvertedAxis) {\r\n                    padding = (this.isStack100 || this.baseModule.chart.stockChart ? 'Round' : 'Normal');\r\n                }\r\n                else {\r\n                    padding = 'None';\r\n                }\r\n                break;\r\n            case 'Vertical':\r\n                if (!chart.requireInvertedAxis) {\r\n                    padding = (this.isStack100 || this.baseModule.chart.stockChart ? 'Round' : 'Normal');\r\n                }\r\n                else {\r\n                    padding = 'None';\r\n                }\r\n                break;\r\n        }\r\n        return padding;\r\n    };\r\n    /**\r\n     * Calculate maximum label width for the axis.\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    Axis.prototype.getMaxLabelWidth = function (chart) {\r\n        var pointX;\r\n        var previousEnd = 0;\r\n        var isIntersect = false;\r\n        var isAxisLabelBreak;\r\n        this.angle = this.labelRotation;\r\n        this.maxLabelSize = new Size(0, 0);\r\n        var action = this.labelIntersectAction;\r\n        var label;\r\n        for (var i = 0, len = this.visibleLabels.length; i < len; i++) {\r\n            label = this.visibleLabels[i];\r\n            isAxisLabelBreak = isBreakLabel(label.originalText);\r\n            if (isAxisLabelBreak) {\r\n                label.size = measureText(label.originalText.replace(/<br>/g, ' '), this.labelStyle);\r\n                label.breakLabelSize = measureText(this.enableTrim ? label.text.join('<br>') : label.originalText, this.labelStyle);\r\n            }\r\n            else {\r\n                label.size = measureText(label.text, this.labelStyle);\r\n            }\r\n            var width = isAxisLabelBreak ? label.breakLabelSize.width : label.size.width;\r\n            if (width > this.maxLabelSize.width) {\r\n                this.maxLabelSize.width = width;\r\n                this.rotatedLabel = label.text;\r\n            }\r\n            var height = isAxisLabelBreak ? label.breakLabelSize.height : label.size.height;\r\n            if (height > this.maxLabelSize.height) {\r\n                this.maxLabelSize.height = height;\r\n            }\r\n            if (isAxisLabelBreak) {\r\n                label.text = this.enableTrim ? label.text : label.originalText.split('<br>');\r\n            }\r\n            if (action === 'None' || action === 'Hide' || action === 'Trim') {\r\n                continue;\r\n            }\r\n            if ((action !== 'None' || this.angle % 360 === 0) && this.orientation === 'Horizontal' &&\r\n                this.rect.width > 0 && !isIntersect) {\r\n                var width1 = isAxisLabelBreak ? label.breakLabelSize.width : label.size.width;\r\n                pointX = (valueToCoefficient(label.value, this) * this.rect.width) + this.rect.x;\r\n                pointX -= width1 / 2;\r\n                if (this.edgeLabelPlacement === 'Shift') {\r\n                    if (i === 0 && pointX < this.rect.x) {\r\n                        pointX = this.rect.x;\r\n                    }\r\n                    if (i === this.visibleLabels.length - 1 && ((pointX + width1) > (this.rect.x + this.rect.width))) {\r\n                        pointX = this.rect.x + this.rect.width - width1;\r\n                    }\r\n                }\r\n                switch (action) {\r\n                    case 'MultipleRows':\r\n                        if (i > 0) {\r\n                            this.findMultiRows(i, pointX, label, isAxisLabelBreak);\r\n                        }\r\n                        break;\r\n                    case 'Rotate45':\r\n                    case 'Rotate90':\r\n                        if (i > 0 && (!this.isAxisInverse ? pointX <= previousEnd : pointX + width1 >= previousEnd)) {\r\n                            this.angle = (action === 'Rotate45') ? 45 : 90;\r\n                            isIntersect = true;\r\n                        }\r\n                        break;\r\n                    default:\r\n                        if (isAxisLabelBreak) {\r\n                            var result = void 0;\r\n                            var result1 = [];\r\n                            var str = void 0;\r\n                            for (var index = 0; index < label.text.length; index++) {\r\n                                result = textWrap(label.text[index], this.rect.width / this.visibleLabels.length, this.labelStyle);\r\n                                if (result.length > 1) {\r\n                                    for (var j = 0; j < result.length; j++) {\r\n                                        str = result[j];\r\n                                        result1.push(str);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    result1.push(result[0]);\r\n                                }\r\n                            }\r\n                            label.text = result1;\r\n                        }\r\n                        else {\r\n                            label.text = textWrap(label.text, this.rect.width / this.visibleLabels.length, this.labelStyle);\r\n                        }\r\n                        // eslint-disable-next-line no-case-declarations\r\n                        var height_1 = (label.size.height * label.text.length);\r\n                        if (height_1 > this.maxLabelSize.height) {\r\n                            this.maxLabelSize.height = height_1;\r\n                        }\r\n                        break;\r\n                }\r\n                previousEnd = this.isAxisInverse ? pointX : pointX + width1;\r\n            }\r\n        }\r\n        if (this.angle !== 0 && this.orientation === 'Horizontal') {\r\n            //I264474: Fix for datasource bind im mounted console error ocurred\r\n            this.rotatedLabel = isNullOrUndefined(this.rotatedLabel) ? '' : this.rotatedLabel;\r\n            var isHorizontalAngle = this.angle === -360 || this.angle === 0 || this.angle === -180 ||\r\n                this.angle === 180 || this.angle === 360;\r\n            // To avoid overlap axis label with chart title or chart legend when it is outside.\r\n            if (this.labelPosition === 'Outside' && !isHorizontalAngle && isBreakLabel(this.rotatedLabel)) {\r\n                this.maxLabelSize = new Size(this.maxLabelSize.height, this.maxLabelSize.width);\r\n            }\r\n            else {\r\n                this.maxLabelSize = rotateTextSize(this.labelStyle, this.rotatedLabel, this.angle, chart);\r\n            }\r\n        }\r\n        if (chart.multiLevelLabelModule && this.multiLevelLabels.length > 0) {\r\n            chart.multiLevelLabelModule.getMultilevelLabelsHeight(this);\r\n        }\r\n    };\r\n    /**\r\n     * Finds the multiple rows for axis.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    Axis.prototype.findMultiRows = function (length, currentX, currentLabel, isBreakLabels) {\r\n        var label;\r\n        var pointX;\r\n        var width2;\r\n        var store = [];\r\n        var isMultiRows;\r\n        for (var i = length - 1; i >= 0; i--) {\r\n            label = this.visibleLabels[i];\r\n            width2 = isBreakLabels ? label.breakLabelSize.width : label.size.width;\r\n            pointX = (valueToCoefficient(label.value, this) * this.rect.width) + this.rect.x;\r\n            isMultiRows = !this.isAxisInverse ? currentX < (pointX + width2 * 0.5) :\r\n                currentX + currentLabel.size.width > (pointX - width2 * 0.5);\r\n            if (isMultiRows) {\r\n                store.push(label.index);\r\n                currentLabel.index = (currentLabel.index > label.index) ? currentLabel.index : label.index + 1;\r\n            }\r\n            else {\r\n                currentLabel.index = store.indexOf(label.index) > -1 ? currentLabel.index : label.index;\r\n            }\r\n        }\r\n        var height = ((isBreakLabels ? currentLabel.breakLabelSize.height : currentLabel.size.height) * currentLabel.index) +\r\n            (5 * (currentLabel.index - 1));\r\n        if (height > this.maxLabelSize.height) {\r\n            this.maxLabelSize.height = height;\r\n        }\r\n    };\r\n    /**\r\n     * Finds the default module for axis.\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    Axis.prototype.getModule = function (chart) {\r\n        if (this.valueType === 'Double') {\r\n            this.baseModule = new Double(chart);\r\n        }\r\n        else {\r\n            this.baseModule = chart[firstToLowerCase(this.valueType) + 'Module'];\r\n        }\r\n    };\r\n    /**\r\n      * Set the axis `opposedPosition` and `isInversed` properties.\r\n      *\r\n      * @returns {void}\r\n      * @private\r\n      */\r\n    Axis.prototype.setIsInversedAndOpposedPosition = function (isPolar) {\r\n        if (isPolar === void 0) { isPolar = false; }\r\n        this.isAxisOpposedPosition = this.opposedPosition || (!isPolar && this.isRTLEnabled && this.orientation == 'Vertical');\r\n        this.isAxisInverse = this.isInversed || (this.isRTLEnabled && this.orientation == 'Horizontal');\r\n    };\r\n    __decorate([\r\n        Complex(Theme.axisLabelFont, Font)\r\n    ], Axis.prototype, \"labelStyle\", void 0);\r\n    __decorate([\r\n        Complex({}, CrosshairTooltip)\r\n    ], Axis.prototype, \"crosshairTooltip\", void 0);\r\n    __decorate([\r\n        Property('')\r\n    ], Axis.prototype, \"title\", void 0);\r\n    __decorate([\r\n        Complex(Theme.axisTitleFont, Font)\r\n    ], Axis.prototype, \"titleStyle\", void 0);\r\n    __decorate([\r\n        Property('')\r\n    ], Axis.prototype, \"labelFormat\", void 0);\r\n    __decorate([\r\n        Property('')\r\n    ], Axis.prototype, \"skeleton\", void 0);\r\n    __decorate([\r\n        Property('DateTime')\r\n    ], Axis.prototype, \"skeletonType\", void 0);\r\n    __decorate([\r\n        Property('Center')\r\n    ], Axis.prototype, \"lineBreakAlignment\", void 0);\r\n    __decorate([\r\n        Property(0)\r\n    ], Axis.prototype, \"plotOffset\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], Axis.prototype, \"plotOffsetLeft\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], Axis.prototype, \"plotOffsetTop\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], Axis.prototype, \"plotOffsetRight\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], Axis.prototype, \"plotOffsetBottom\", void 0);\r\n    __decorate([\r\n        Property(false)\r\n    ], Axis.prototype, \"isIndexed\", void 0);\r\n    __decorate([\r\n        Property(10)\r\n    ], Axis.prototype, \"logBase\", void 0);\r\n    __decorate([\r\n        Property(0)\r\n    ], Axis.prototype, \"columnIndex\", void 0);\r\n    __decorate([\r\n        Property(0)\r\n    ], Axis.prototype, \"rowIndex\", void 0);\r\n    __decorate([\r\n        Property(1)\r\n    ], Axis.prototype, \"span\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], Axis.prototype, \"desiredIntervals\", void 0);\r\n    __decorate([\r\n        Property(3)\r\n    ], Axis.prototype, \"maximumLabels\", void 0);\r\n    __decorate([\r\n        Property(1)\r\n    ], Axis.prototype, \"zoomFactor\", void 0);\r\n    __decorate([\r\n        Property(0)\r\n    ], Axis.prototype, \"zoomPosition\", void 0);\r\n    __decorate([\r\n        Property(true)\r\n    ], Axis.prototype, \"enableScrollbarOnZooming\", void 0);\r\n    __decorate([\r\n        Property(false)\r\n    ], Axis.prototype, \"opposedPosition\", void 0);\r\n    __decorate([\r\n        Property(true)\r\n    ], Axis.prototype, \"enableAutoIntervalOnZooming\", void 0);\r\n    __decorate([\r\n        Property('Auto')\r\n    ], Axis.prototype, \"rangePadding\", void 0);\r\n    __decorate([\r\n        Property('Double')\r\n    ], Axis.prototype, \"valueType\", void 0);\r\n    __decorate([\r\n        Property('None')\r\n    ], Axis.prototype, \"edgeLabelPlacement\", void 0);\r\n    __decorate([\r\n        Property('Auto')\r\n    ], Axis.prototype, \"intervalType\", void 0);\r\n    __decorate([\r\n        Property('BetweenTicks')\r\n    ], Axis.prototype, \"labelPlacement\", void 0);\r\n    __decorate([\r\n        Property('Outside')\r\n    ], Axis.prototype, \"tickPosition\", void 0);\r\n    __decorate([\r\n        Property('Outside')\r\n    ], Axis.prototype, \"labelPosition\", void 0);\r\n    __decorate([\r\n        Property('')\r\n    ], Axis.prototype, \"name\", void 0);\r\n    __decorate([\r\n        Property(true)\r\n    ], Axis.prototype, \"visible\", void 0);\r\n    __decorate([\r\n        Property(0)\r\n    ], Axis.prototype, \"minorTicksPerInterval\", void 0);\r\n    __decorate([\r\n        Property(0)\r\n    ], Axis.prototype, \"labelRotation\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], Axis.prototype, \"crossesAt\", void 0);\r\n    __decorate([\r\n        Property(true)\r\n    ], Axis.prototype, \"placeNextToAxisLine\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], Axis.prototype, \"crossesInAxis\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], Axis.prototype, \"minimum\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], Axis.prototype, \"maximum\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], Axis.prototype, \"interval\", void 0);\r\n    __decorate([\r\n        Property(34)\r\n    ], Axis.prototype, \"maximumLabelWidth\", void 0);\r\n    __decorate([\r\n        Property(false)\r\n    ], Axis.prototype, \"enableTrim\", void 0);\r\n    __decorate([\r\n        Property(5)\r\n    ], Axis.prototype, \"labelPadding\", void 0);\r\n    __decorate([\r\n        Property(5)\r\n    ], Axis.prototype, \"titlePadding\", void 0);\r\n    __decorate([\r\n        Complex({}, MajorTickLines)\r\n    ], Axis.prototype, \"majorTickLines\", void 0);\r\n    __decorate([\r\n        Complex({}, MinorTickLines)\r\n    ], Axis.prototype, \"minorTickLines\", void 0);\r\n    __decorate([\r\n        Complex({}, MajorGridLines)\r\n    ], Axis.prototype, \"majorGridLines\", void 0);\r\n    __decorate([\r\n        Complex({}, MinorGridLines)\r\n    ], Axis.prototype, \"minorGridLines\", void 0);\r\n    __decorate([\r\n        Complex({}, AxisLine)\r\n    ], Axis.prototype, \"lineStyle\", void 0);\r\n    __decorate([\r\n        Property('Trim')\r\n    ], Axis.prototype, \"labelIntersectAction\", void 0);\r\n    __decorate([\r\n        Property(false)\r\n    ], Axis.prototype, \"isInversed\", void 0);\r\n    __decorate([\r\n        Property(100)\r\n    ], Axis.prototype, \"coefficient\", void 0);\r\n    __decorate([\r\n        Property(0)\r\n    ], Axis.prototype, \"startAngle\", void 0);\r\n    __decorate([\r\n        Property(true)\r\n    ], Axis.prototype, \"startFromZero\", void 0);\r\n    __decorate([\r\n        Property(null)\r\n    ], Axis.prototype, \"description\", void 0);\r\n    __decorate([\r\n        Property(2)\r\n    ], Axis.prototype, \"tabIndex\", void 0);\r\n    __decorate([\r\n        Collection([], StripLineSettings)\r\n    ], Axis.prototype, \"stripLines\", void 0);\r\n    __decorate([\r\n        Collection([], MultiLevelLabels)\r\n    ], Axis.prototype, \"multiLevelLabels\", void 0);\r\n    __decorate([\r\n        Complex({ color: null, width: 0, type: 'Rectangle' }, LabelBorder)\r\n    ], Axis.prototype, \"border\", void 0);\r\n    __decorate([\r\n        Complex({}, ScrollbarSettings)\r\n    ], Axis.prototype, \"scrollbarSettings\", void 0);\r\n    return Axis;\r\n}(ChildProperty));\r\nexport { Axis };\r\n/** @private */\r\nvar VisibleLabels = /** @class */ (function () {\r\n    function VisibleLabels(text, value, labelStyle, originalText, size, breakLabelSize, index) {\r\n        if (size === void 0) { size = new Size(0, 0); }\r\n        if (breakLabelSize === void 0) { breakLabelSize = new Size(0, 0); }\r\n        if (index === void 0) { index = 1; }\r\n        this.text = text;\r\n        this.originalText = originalText;\r\n        this.value = value;\r\n        this.labelStyle = labelStyle;\r\n        this.size = size;\r\n        this.breakLabelSize = breakLabelSize;\r\n        this.index = index;\r\n    }\r\n    return VisibleLabels;\r\n}());\r\nexport { VisibleLabels };\r\n"]},"metadata":{},"sourceType":"module"}