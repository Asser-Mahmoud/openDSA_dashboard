{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nexport var createTrigUnit = /* #__PURE__ */factory('trigUnit', ['typed'], _ref => {\n  var {\n    typed\n  } = _ref;\n  return {\n    Unit: typed.referToSelf(self => x => {\n      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {\n        throw new TypeError('Unit in function cot is no angle');\n      }\n\n      return typed.find(self, x.valueType())(x.value);\n    })\n  };\n});","map":{"version":3,"sources":["C:/Users/amase/Desktop/open_dsa/openDSA_dashboard/project/node_modules/mathjs/lib/esm/function/trigonometry/trigUnit.js"],"names":["factory","createTrigUnit","_ref","typed","Unit","referToSelf","self","x","hasBase","constructor","BASE_UNITS","ANGLE","TypeError","find","valueType","value"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,OAAO,IAAIC,cAAc,GAAG,eAAeD,OAAO,CAAC,UAAD,EAAa,CAAC,OAAD,CAAb,EAAwBE,IAAI,IAAI;AAChF,MAAI;AACFC,IAAAA;AADE,MAEAD,IAFJ;AAGA,SAAO;AACLE,IAAAA,IAAI,EAAED,KAAK,CAACE,WAAN,CAAkBC,IAAI,IAAIC,CAAC,IAAI;AACnC,UAAI,CAACA,CAAC,CAACC,OAAF,CAAUD,CAAC,CAACE,WAAF,CAAcC,UAAd,CAAyBC,KAAnC,CAAL,EAAgD;AAC9C,cAAM,IAAIC,SAAJ,CAAc,kCAAd,CAAN;AACD;;AACD,aAAOT,KAAK,CAACU,IAAN,CAAWP,IAAX,EAAiBC,CAAC,CAACO,SAAF,EAAjB,EAAgCP,CAAC,CAACQ,KAAlC,CAAP;AACD,KALK;AADD,GAAP;AAQD,CAZiD,CAA3C","sourcesContent":["import { factory } from '../../utils/factory.js';\r\nexport var createTrigUnit = /* #__PURE__ */factory('trigUnit', ['typed'], _ref => {\r\n  var {\r\n    typed\r\n  } = _ref;\r\n  return {\r\n    Unit: typed.referToSelf(self => x => {\r\n      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {\r\n        throw new TypeError('Unit in function cot is no angle');\r\n      }\r\n      return typed.find(self, x.valueType())(x.value);\r\n    })\r\n  };\r\n});"]},"metadata":{},"sourceType":"module"}