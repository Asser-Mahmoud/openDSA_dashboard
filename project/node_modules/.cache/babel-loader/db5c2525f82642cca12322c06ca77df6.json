{"ast":null,"code":"/**\r\n * Represent class to store information about `template and value pairs`.\r\n * @private\r\n */\nvar PdfTemplateValuePair =\n/** @class */\nfunction () {\n  function PdfTemplateValuePair(template, value) {\n    // Fields\n\n    /**\r\n     * Internal variable to store template.\r\n     * @default null\r\n     * @private\r\n     */\n    this.pdfTemplate = null;\n    /**\r\n     * Intenal variable to store value.\r\n     * @private\r\n     */\n\n    this.content = '';\n\n    if (typeof template === 'undefined') {//\n    } else {\n      this.template = template;\n      this.value = value;\n    }\n  }\n\n  Object.defineProperty(PdfTemplateValuePair.prototype, \"template\", {\n    // Properties\n\n    /**\r\n     * Gets or sets the template.\r\n     * @private\r\n     */\n    get: function () {\n      return this.pdfTemplate;\n    },\n    set: function (value) {\n      this.pdfTemplate = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTemplateValuePair.prototype, \"value\", {\n    /**\r\n     * Gets or sets the value.\r\n     * @private\r\n     */\n    get: function () {\n      return this.content;\n    },\n    set: function (value) {\n      this.content = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfTemplateValuePair;\n}();\n\nexport { PdfTemplateValuePair };","map":{"version":3,"sources":["C:/Users/x/Desktop/openDSA/openDSA_dashboard/project/node_modules/@syncfusion/ej2-react-charts/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/pdf-template-value-pair.js"],"names":["PdfTemplateValuePair","template","value","pdfTemplate","content","Object","defineProperty","prototype","get","set","enumerable","configurable"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,oBAAoB;AAAG;AAAe,YAAY;AAClD,WAASA,oBAAT,CAA8BC,QAA9B,EAAwCC,KAAxC,EAA+C;AAC3C;;AACA;AACR;AACA;AACA;AACA;AACQ,SAAKC,WAAL,GAAmB,IAAnB;AACA;AACR;AACA;AACA;;AACQ,SAAKC,OAAL,GAAe,EAAf;;AACA,QAAI,OAAOH,QAAP,KAAoB,WAAxB,EAAqC,CACjC;AACH,KAFD,MAGK;AACD,WAAKA,QAAL,GAAgBA,QAAhB;AACA,WAAKC,KAAL,GAAaA,KAAb;AACH;AACJ;;AACDG,EAAAA,MAAM,CAACC,cAAP,CAAsBN,oBAAoB,CAACO,SAA3C,EAAsD,UAAtD,EAAkE;AAC9D;;AACA;AACR;AACA;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKL,WAAZ;AACH,KAR6D;AAS9DM,IAAAA,GAAG,EAAE,UAAUP,KAAV,EAAiB;AAClB,WAAKC,WAAL,GAAmBD,KAAnB;AACH,KAX6D;AAY9DQ,IAAAA,UAAU,EAAE,IAZkD;AAa9DC,IAAAA,YAAY,EAAE;AAbgD,GAAlE;AAeAN,EAAAA,MAAM,CAACC,cAAP,CAAsBN,oBAAoB,CAACO,SAA3C,EAAsD,OAAtD,EAA+D;AAC3D;AACR;AACA;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKJ,OAAZ;AACH,KAP0D;AAQ3DK,IAAAA,GAAG,EAAE,UAAUP,KAAV,EAAiB;AAClB,WAAKE,OAAL,GAAeF,KAAf;AACH,KAV0D;AAW3DQ,IAAAA,UAAU,EAAE,IAX+C;AAY3DC,IAAAA,YAAY,EAAE;AAZ6C,GAA/D;AAcA,SAAOX,oBAAP;AACH,CApDyC,EAA1C;;AAqDA,SAASA,oBAAT","sourcesContent":["/**\r\n * Represent class to store information about `template and value pairs`.\r\n * @private\r\n */\r\nvar PdfTemplateValuePair = /** @class */ (function () {\r\n    function PdfTemplateValuePair(template, value) {\r\n        // Fields\r\n        /**\r\n         * Internal variable to store template.\r\n         * @default null\r\n         * @private\r\n         */\r\n        this.pdfTemplate = null;\r\n        /**\r\n         * Intenal variable to store value.\r\n         * @private\r\n         */\r\n        this.content = '';\r\n        if (typeof template === 'undefined') {\r\n            //\r\n        }\r\n        else {\r\n            this.template = template;\r\n            this.value = value;\r\n        }\r\n    }\r\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"template\", {\r\n        // Properties\r\n        /**\r\n         * Gets or sets the template.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.pdfTemplate;\r\n        },\r\n        set: function (value) {\r\n            this.pdfTemplate = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"value\", {\r\n        /**\r\n         * Gets or sets the value.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.content;\r\n        },\r\n        set: function (value) {\r\n            this.content = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PdfTemplateValuePair;\r\n}());\r\nexport { PdfTemplateValuePair };\r\n"]},"metadata":{},"sourceType":"module"}