{"ast":null,"code":"import { Tooltip as SVGTooltip } from '@syncfusion/ej2-svg-base';\nimport { getElement, createTemplate, firstToLowerCase } from '../../common/utils/helper';\nimport { stopTimer } from '../../common/utils/helper';\nimport { measureText } from '@syncfusion/ej2-svg-base';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\r\n * `Tooltip` module is used to render the tooltip for chart series.\r\n */\n\nvar RangeTooltip =\n/** @class */\nfunction () {\n  /**\r\n   * Constructor for tooltip module.\r\n   *\r\n   * @private\r\n   */\n  function RangeTooltip(range) {\n    this.control = range;\n    this.elementId = range.element.id;\n  }\n  /**\r\n   * Left tooltip method called here\r\n   *\r\n   * @param {RangeSlider} rangeSlider RangeSlider\r\n   */\n\n\n  RangeTooltip.prototype.renderLeftTooltip = function (rangeSlider) {\n    this.fadeOutTooltip();\n    var content = this.getTooltipContent(rangeSlider.currentStart);\n    var contentWidth = this.getContentSize(content);\n    var rect = this.control.enableRtl ? rangeSlider.rightRect : rangeSlider.leftRect;\n\n    if (contentWidth > rect.width) {\n      rect = rangeSlider.midRect;\n    }\n\n    this.leftTooltip = this.renderTooltip(rect, this.createElement('_leftTooltip'), rangeSlider.startX, content);\n  };\n  /**\r\n   * get the content size\r\n   *\r\n   * @param {string[]} value value\r\n   */\n\n\n  RangeTooltip.prototype.getContentSize = function (value) {\n    var width;\n    var font = this.control.tooltip.textStyle;\n\n    if (this.control.tooltip.template) {\n      width = createTemplate(createElement('div', {\n        id: 'measureElement',\n        styles: 'position: absolute;'\n      }), 0, this.control.tooltip.template, this.control).getBoundingClientRect().width;\n    } else {\n      // 20 for tooltip padding\n      width = measureText(value[0], font).width + 20;\n    }\n\n    return width;\n  };\n  /**\r\n   * Right tooltip method called here\r\n   *\r\n   * @param {RangeSlider} rangeSlider RangeSlider\r\n   */\n\n\n  RangeTooltip.prototype.renderRightTooltip = function (rangeSlider) {\n    this.fadeOutTooltip();\n    var content = this.getTooltipContent(rangeSlider.currentEnd);\n    var contentWidth = this.getContentSize(content);\n    var rect = this.control.enableRtl ? rangeSlider.leftRect : rangeSlider.rightRect;\n\n    if (contentWidth > rect.width) {\n      rect = rangeSlider.midRect;\n      rect.x = !this.control.series.length ? rect.x : 0;\n    }\n\n    this.rightTooltip = this.renderTooltip(rect, this.createElement('_rightTooltip'), rangeSlider.endX, content);\n  };\n  /**\r\n   * Tooltip element creation\r\n   *\r\n   * @param {string} id element id\r\n   */\n\n\n  RangeTooltip.prototype.createElement = function (id) {\n    if (getElement(this.elementId + id)) {\n      return getElement(this.elementId + id);\n    } else {\n      var element = document.createElement('div');\n      element.id = this.elementId + id;\n      element.className = 'ejSVGTooltip';\n      element.style.cssText = 'pointer-events:none; position:absolute;z-index: 1';\n\n      if (!this.control.stockChart) {\n        getElement(this.elementId + '_Secondary_Element').appendChild(element);\n      } else {\n        var stockChart = this.control.stockChart;\n        getElement(stockChart.element.id + '_Secondary_Element').appendChild(element);\n        element.style.transform = 'translateY(' + (stockChart.availableSize.height - stockChart.toolbarHeight - 80 + stockChart.toolbarHeight + stockChart.titleSize.height) + 'px)';\n      }\n\n      return element;\n    }\n  };\n  /**\r\n   * Tooltip render called here\r\n   *\r\n   * @param {Rect} bounds bounds\r\n   * @param {Element} parent parent\r\n   * @param {number} pointX pointX\r\n   * @param {string[]} content content\r\n   */\n\n\n  RangeTooltip.prototype.renderTooltip = function (bounds, parent, pointX, content) {\n    var control = this.control;\n    var tooltip = control.tooltip;\n    var argsData = {\n      cancel: false,\n      name: 'tooltipRender',\n      text: content,\n      textStyle: tooltip.textStyle\n    };\n    this.control.trigger('tooltipRender', argsData);\n    var left = control.svgObject.getBoundingClientRect().left - control.element.getBoundingClientRect().left;\n\n    if (!argsData.cancel) {\n      return new SVGTooltip({\n        location: {\n          x: pointX,\n          y: control.rangeSlider.sliderY\n        },\n        content: argsData.text,\n        marginX: 2,\n        enableShadow: false,\n        marginY: 2,\n        arrowPadding: 8,\n        rx: 0,\n        ry: 0,\n        inverted: control.series.length > 0,\n        areaBounds: bounds,\n        fill: tooltip.fill ? tooltip.fill : this.control.themeStyle.tooltipBackground,\n        theme: this.control.theme,\n        //enableShadow: false,\n        clipBounds: {\n          x: left\n        },\n        border: tooltip.border,\n        opacity: tooltip.opacity,\n        template: tooltip.template,\n        textStyle: argsData.textStyle,\n        availableSize: control.availableSize,\n        data: {\n          'start': this.getTooltipContent(this.control.startValue)[0],\n          'end': this.getTooltipContent(this.control.endValue)[0],\n          'value': content[0]\n        }\n      }, parent);\n    } else {\n      return null;\n    }\n  };\n  /**\r\n   * Tooltip content processed here\r\n   *\r\n   * @param {number} value tooltip value\r\n   */\n\n\n  RangeTooltip.prototype.getTooltipContent = function (value) {\n    var control = this.control;\n    var tooltip = control.tooltip;\n    var xAxis = control.chartSeries.xAxis;\n    var text;\n    var format = tooltip.format || xAxis.labelFormat;\n    var isCustom = format.match('{value}') !== null;\n    var valueType = xAxis.valueType;\n\n    if (valueType === 'DateTime') {\n      text = control.intl.getDateFormat({\n        format: format || 'MM/dd/yyyy',\n        type: firstToLowerCase(control.skeletonType),\n        skeleton: control.dateTimeModule.getSkeleton(xAxis, null, null)\n      })(new Date(value));\n    } else {\n      xAxis.format = control.intl.getNumberFormat({\n        format: isCustom ? '' : format,\n        useGrouping: control.useGroupingSeparator\n      });\n      text = control.doubleModule.formatValue(xAxis, isCustom, format, valueType === 'Logarithmic' ? Math.pow(xAxis.logBase, value) : value);\n    }\n\n    return [text];\n  };\n  /**\r\n   * Fadeout animation performed here\r\n   */\n\n\n  RangeTooltip.prototype.fadeOutTooltip = function () {\n    var _this = this;\n\n    var tooltip = this.control.tooltip;\n\n    if (tooltip.displayMode === 'OnDemand') {\n      stopTimer(this.toolTipInterval);\n\n      if (this.rightTooltip) {\n        this.toolTipInterval = +setTimeout(function () {\n          _this.leftTooltip.fadeOut();\n\n          _this.rightTooltip.fadeOut();\n        }, 1000);\n      }\n    }\n  };\n  /**\r\n   * Get module name.\r\n   */\n\n\n  RangeTooltip.prototype.getModuleName = function () {\n    return 'RangeTooltip';\n  };\n  /**\r\n   * To destroy the tooltip.\r\n   *\r\n   * @returns {void}\r\n   * @private\r\n   */\n\n\n  RangeTooltip.prototype.destroy = function () {// Destroy method called here\n  };\n\n  return RangeTooltip;\n}();\n\nexport { RangeTooltip };","map":{"version":3,"sources":["C:/Users/x/Desktop/openDSA/openDSA_dashboard/project/node_modules/@syncfusion/ej2-react-charts/node_modules/@syncfusion/ej2-charts/src/range-navigator/user-interaction/tooltip.js"],"names":["Tooltip","SVGTooltip","getElement","createTemplate","firstToLowerCase","stopTimer","measureText","createElement","RangeTooltip","range","control","elementId","element","id","prototype","renderLeftTooltip","rangeSlider","fadeOutTooltip","content","getTooltipContent","currentStart","contentWidth","getContentSize","rect","enableRtl","rightRect","leftRect","width","midRect","leftTooltip","renderTooltip","startX","value","font","tooltip","textStyle","template","styles","getBoundingClientRect","renderRightTooltip","currentEnd","x","series","length","rightTooltip","endX","document","className","style","cssText","stockChart","appendChild","transform","availableSize","height","toolbarHeight","titleSize","bounds","parent","pointX","argsData","cancel","name","text","trigger","left","svgObject","location","y","sliderY","marginX","enableShadow","marginY","arrowPadding","rx","ry","inverted","areaBounds","fill","themeStyle","tooltipBackground","theme","clipBounds","border","opacity","data","startValue","endValue","xAxis","chartSeries","format","labelFormat","isCustom","match","valueType","intl","getDateFormat","type","skeletonType","skeleton","dateTimeModule","getSkeleton","Date","getNumberFormat","useGrouping","useGroupingSeparator","doubleModule","formatValue","Math","pow","logBase","_this","displayMode","toolTipInterval","setTimeout","fadeOut","getModuleName","destroy"],"mappings":"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","sourcesContent":["import { Tooltip as SVGTooltip } from '@syncfusion/ej2-svg-base';\r\nimport { getElement, createTemplate, firstToLowerCase } from '../../common/utils/helper';\r\nimport { stopTimer } from '../../common/utils/helper';\r\nimport { measureText } from '@syncfusion/ej2-svg-base';\r\nimport { createElement } from '@syncfusion/ej2-base';\r\n/**\r\n * `Tooltip` module is used to render the tooltip for chart series.\r\n */\r\nvar RangeTooltip = /** @class */ (function () {\r\n    /**\r\n     * Constructor for tooltip module.\r\n     *\r\n     * @private\r\n     */\r\n    function RangeTooltip(range) {\r\n        this.control = range;\r\n        this.elementId = range.element.id;\r\n    }\r\n    /**\r\n     * Left tooltip method called here\r\n     *\r\n     * @param {RangeSlider} rangeSlider RangeSlider\r\n     */\r\n    RangeTooltip.prototype.renderLeftTooltip = function (rangeSlider) {\r\n        this.fadeOutTooltip();\r\n        var content = this.getTooltipContent(rangeSlider.currentStart);\r\n        var contentWidth = this.getContentSize(content);\r\n        var rect = this.control.enableRtl ? rangeSlider.rightRect : rangeSlider.leftRect;\r\n        if (contentWidth > rect.width) {\r\n            rect = rangeSlider.midRect;\r\n        }\r\n        this.leftTooltip = this.renderTooltip(rect, this.createElement('_leftTooltip'), rangeSlider.startX, content);\r\n    };\r\n    /**\r\n     * get the content size\r\n     *\r\n     * @param {string[]} value value\r\n     */\r\n    RangeTooltip.prototype.getContentSize = function (value) {\r\n        var width;\r\n        var font = this.control.tooltip.textStyle;\r\n        if (this.control.tooltip.template) {\r\n            width = createTemplate(createElement('div', {\r\n                id: 'measureElement',\r\n                styles: 'position: absolute;'\r\n            }), 0, this.control.tooltip.template, this.control).getBoundingClientRect().width;\r\n        }\r\n        else {\r\n            // 20 for tooltip padding\r\n            width = measureText(value[0], font).width + 20;\r\n        }\r\n        return width;\r\n    };\r\n    /**\r\n     * Right tooltip method called here\r\n     *\r\n     * @param {RangeSlider} rangeSlider RangeSlider\r\n     */\r\n    RangeTooltip.prototype.renderRightTooltip = function (rangeSlider) {\r\n        this.fadeOutTooltip();\r\n        var content = this.getTooltipContent(rangeSlider.currentEnd);\r\n        var contentWidth = this.getContentSize(content);\r\n        var rect = this.control.enableRtl ? rangeSlider.leftRect : rangeSlider.rightRect;\r\n        if (contentWidth > rect.width) {\r\n            rect = rangeSlider.midRect;\r\n            rect.x = !this.control.series.length ? rect.x : 0;\r\n        }\r\n        this.rightTooltip = this.renderTooltip(rect, this.createElement('_rightTooltip'), rangeSlider.endX, content);\r\n    };\r\n    /**\r\n     * Tooltip element creation\r\n     *\r\n     * @param {string} id element id\r\n     */\r\n    RangeTooltip.prototype.createElement = function (id) {\r\n        if (getElement(this.elementId + id)) {\r\n            return getElement(this.elementId + id);\r\n        }\r\n        else {\r\n            var element = document.createElement('div');\r\n            element.id = this.elementId + id;\r\n            element.className = 'ejSVGTooltip';\r\n            element.style.cssText = 'pointer-events:none; position:absolute;z-index: 1';\r\n            if (!this.control.stockChart) {\r\n                getElement(this.elementId + '_Secondary_Element').appendChild(element);\r\n            }\r\n            else {\r\n                var stockChart = this.control.stockChart;\r\n                getElement(stockChart.element.id + '_Secondary_Element').appendChild(element);\r\n                element.style.transform = 'translateY(' + (((stockChart.availableSize.height - stockChart.toolbarHeight - 80) +\r\n                    stockChart.toolbarHeight) + stockChart.titleSize.height) + 'px)';\r\n            }\r\n            return element;\r\n        }\r\n    };\r\n    /**\r\n     * Tooltip render called here\r\n     *\r\n     * @param {Rect} bounds bounds\r\n     * @param {Element} parent parent\r\n     * @param {number} pointX pointX\r\n     * @param {string[]} content content\r\n     */\r\n    RangeTooltip.prototype.renderTooltip = function (bounds, parent, pointX, content) {\r\n        var control = this.control;\r\n        var tooltip = control.tooltip;\r\n        var argsData = {\r\n            cancel: false, name: 'tooltipRender', text: content,\r\n            textStyle: tooltip.textStyle\r\n        };\r\n        this.control.trigger('tooltipRender', argsData);\r\n        var left = control.svgObject.getBoundingClientRect().left -\r\n            control.element.getBoundingClientRect().left;\r\n        if (!argsData.cancel) {\r\n            return new SVGTooltip({\r\n                location: { x: pointX, y: control.rangeSlider.sliderY },\r\n                content: argsData.text, marginX: 2,\r\n                enableShadow: false,\r\n                marginY: 2, arrowPadding: 8, rx: 0, ry: 0,\r\n                inverted: control.series.length > 0,\r\n                areaBounds: bounds, fill: tooltip.fill ? tooltip.fill : this.control.themeStyle.tooltipBackground,\r\n                theme: this.control.theme,\r\n                //enableShadow: false,\r\n                clipBounds: { x: left },\r\n                border: tooltip.border, opacity: tooltip.opacity,\r\n                template: tooltip.template,\r\n                textStyle: argsData.textStyle,\r\n                availableSize: control.availableSize,\r\n                data: {\r\n                    'start': this.getTooltipContent(this.control.startValue)[0],\r\n                    'end': this.getTooltipContent(this.control.endValue)[0],\r\n                    'value': content[0]\r\n                }\r\n            }, parent);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Tooltip content processed here\r\n     *\r\n     * @param {number} value tooltip value\r\n     */\r\n    RangeTooltip.prototype.getTooltipContent = function (value) {\r\n        var control = this.control;\r\n        var tooltip = control.tooltip;\r\n        var xAxis = control.chartSeries.xAxis;\r\n        var text;\r\n        var format = tooltip.format || xAxis.labelFormat;\r\n        var isCustom = format.match('{value}') !== null;\r\n        var valueType = xAxis.valueType;\r\n        if (valueType === 'DateTime') {\r\n            text = (control.intl.getDateFormat({\r\n                format: format || 'MM/dd/yyyy',\r\n                type: firstToLowerCase(control.skeletonType),\r\n                skeleton: control.dateTimeModule.getSkeleton(xAxis, null, null)\r\n            }))(new Date(value));\r\n        }\r\n        else {\r\n            xAxis.format = control.intl.getNumberFormat({\r\n                format: isCustom ? '' : format,\r\n                useGrouping: control.useGroupingSeparator\r\n            });\r\n            text = control.doubleModule.formatValue(xAxis, isCustom, format, valueType === 'Logarithmic' ? Math.pow(xAxis.logBase, value) : value);\r\n        }\r\n        return [text];\r\n    };\r\n    /**\r\n     * Fadeout animation performed here\r\n     */\r\n    RangeTooltip.prototype.fadeOutTooltip = function () {\r\n        var _this = this;\r\n        var tooltip = this.control.tooltip;\r\n        if (tooltip.displayMode === 'OnDemand') {\r\n            stopTimer(this.toolTipInterval);\r\n            if (this.rightTooltip) {\r\n                this.toolTipInterval = +setTimeout(function () {\r\n                    _this.leftTooltip.fadeOut();\r\n                    _this.rightTooltip.fadeOut();\r\n                }, 1000);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Get module name.\r\n     */\r\n    RangeTooltip.prototype.getModuleName = function () {\r\n        return 'RangeTooltip';\r\n    };\r\n    /**\r\n     * To destroy the tooltip.\r\n     *\r\n     * @returns {void}\r\n     * @private\r\n     */\r\n    RangeTooltip.prototype.destroy = function () {\r\n        // Destroy method called here\r\n    };\r\n    return RangeTooltip;\r\n}());\r\nexport { RangeTooltip };\r\n"]},"metadata":{},"sourceType":"module"}