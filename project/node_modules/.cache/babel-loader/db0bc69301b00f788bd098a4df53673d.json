{"ast":null,"code":"/**\r\n * PdfCacheCollection.ts class for EJ2-PDF\r\n */\nimport { Dictionary } from './../collections/dictionary';\n/**\r\n * `Collection of the cached objects`.\r\n * @private\r\n */\n\nvar PdfCacheCollection =\n/** @class */\nfunction () {\n  // Constructors\n\n  /**\r\n   * Initializes a new instance of the `PdfCacheCollection` class.\r\n   * @private\r\n   */\n  function PdfCacheCollection() {\n    this.referenceObjects = [];\n    this.pdfFontCollection = new Dictionary();\n  } // Public methods\n\n  /**\r\n   * `Searches` for the similar cached object. If is not found - adds the object to the cache.\r\n   * @private\r\n   */\n\n\n  PdfCacheCollection.prototype.search = function (obj) {\n    var result = null;\n    var group = this.getGroup(obj);\n\n    if (group == null) {\n      group = this.createNewGroup();\n    } else if (group.length > 0) {\n      result = group[0];\n    }\n\n    group.push(obj);\n    return result;\n  }; // Implementation\n\n  /**\r\n   * `Creates` a new group.\r\n   * @private\r\n   */\n\n\n  PdfCacheCollection.prototype.createNewGroup = function () {\n    var group = [];\n    this.referenceObjects.push(group);\n    return group;\n  };\n  /**\r\n   * `Find and Return` a group.\r\n   * @private\r\n   */\n\n\n  PdfCacheCollection.prototype.getGroup = function (result) {\n    var group = null;\n\n    if (result !== null) {\n      var len = this.referenceObjects.length;\n\n      for (var i = 0; i < len; i++) {\n        if (this.referenceObjects.length > 0) {\n          var tGroup = this.referenceObjects[i];\n\n          if (tGroup.length > 0) {\n            var representative = tGroup[0];\n\n            if (result.equalsTo(representative)) {\n              group = tGroup;\n              break;\n            }\n          } else {\n            this.removeGroup(tGroup);\n          }\n        }\n\n        len = this.referenceObjects.length;\n      }\n    }\n\n    return group;\n  };\n  /**\r\n   * Remove a group from the storage.\r\n   */\n\n\n  PdfCacheCollection.prototype.removeGroup = function (group) {\n    if (group !== null) {\n      var index = this.referenceObjects.indexOf(group);\n      this.referenceObjects.slice(index, index + 1);\n    }\n  };\n\n  PdfCacheCollection.prototype.destroy = function () {\n    this.pdfFontCollection = undefined;\n    this.referenceObjects = undefined;\n  };\n\n  return PdfCacheCollection;\n}();\n\nexport { PdfCacheCollection };","map":{"version":3,"sources":["C:/Users/amase/Desktop/open_dsa/openDSA_dashboard/project/node_modules/@syncfusion/ej2-react-grids/node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/pdf-cache-collection.js"],"names":["Dictionary","PdfCacheCollection","referenceObjects","pdfFontCollection","prototype","search","obj","result","group","getGroup","createNewGroup","length","push","len","i","tGroup","representative","equalsTo","removeGroup","index","indexOf","slice","destroy","undefined"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,UAAT,QAA2B,6BAA3B;AACA;AACA;AACA;AACA;;AACA,IAAIC,kBAAkB;AAAG;AAAe,YAAY;AAChD;;AACA;AACJ;AACA;AACA;AACI,WAASA,kBAAT,GAA8B;AAC1B,SAAKC,gBAAL,GAAwB,EAAxB;AACA,SAAKC,iBAAL,GAAyB,IAAIH,UAAJ,EAAzB;AACH,GAT+C,CAUhD;;AACA;AACJ;AACA;AACA;;;AACIC,EAAAA,kBAAkB,CAACG,SAAnB,CAA6BC,MAA7B,GAAsC,UAAUC,GAAV,EAAe;AACjD,QAAIC,MAAM,GAAG,IAAb;AACA,QAAIC,KAAK,GAAG,KAAKC,QAAL,CAAcH,GAAd,CAAZ;;AACA,QAAIE,KAAK,IAAI,IAAb,EAAmB;AACfA,MAAAA,KAAK,GAAG,KAAKE,cAAL,EAAR;AACH,KAFD,MAGK,IAAIF,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAsB;AACvBJ,MAAAA,MAAM,GAAGC,KAAK,CAAC,CAAD,CAAd;AACH;;AACDA,IAAAA,KAAK,CAACI,IAAN,CAAWN,GAAX;AACA,WAAOC,MAAP;AACH,GAXD,CAfgD,CA2BhD;;AACA;AACJ;AACA;AACA;;;AACIN,EAAAA,kBAAkB,CAACG,SAAnB,CAA6BM,cAA7B,GAA8C,YAAY;AACtD,QAAIF,KAAK,GAAG,EAAZ;AACA,SAAKN,gBAAL,CAAsBU,IAAtB,CAA2BJ,KAA3B;AACA,WAAOA,KAAP;AACH,GAJD;AAKA;AACJ;AACA;AACA;;;AACIP,EAAAA,kBAAkB,CAACG,SAAnB,CAA6BK,QAA7B,GAAwC,UAAUF,MAAV,EAAkB;AACtD,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAID,MAAM,KAAK,IAAf,EAAqB;AACjB,UAAIM,GAAG,GAAG,KAAKX,gBAAL,CAAsBS,MAAhC;;AACA,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAApB,EAAyBC,CAAC,EAA1B,EAA8B;AAC1B,YAAI,KAAKZ,gBAAL,CAAsBS,MAAtB,GAA+B,CAAnC,EAAsC;AAClC,cAAII,MAAM,GAAG,KAAKb,gBAAL,CAAsBY,CAAtB,CAAb;;AACA,cAAIC,MAAM,CAACJ,MAAP,GAAgB,CAApB,EAAuB;AACnB,gBAAIK,cAAc,GAAGD,MAAM,CAAC,CAAD,CAA3B;;AACA,gBAAIR,MAAM,CAACU,QAAP,CAAgBD,cAAhB,CAAJ,EAAqC;AACjCR,cAAAA,KAAK,GAAGO,MAAR;AACA;AACH;AACJ,WAND,MAOK;AACD,iBAAKG,WAAL,CAAiBH,MAAjB;AACH;AACJ;;AACDF,QAAAA,GAAG,GAAG,KAAKX,gBAAL,CAAsBS,MAA5B;AACH;AACJ;;AACD,WAAOH,KAAP;AACH,GAtBD;AAuBA;AACJ;AACA;;;AACIP,EAAAA,kBAAkB,CAACG,SAAnB,CAA6Bc,WAA7B,GAA2C,UAAUV,KAAV,EAAiB;AACxD,QAAIA,KAAK,KAAK,IAAd,EAAoB;AAChB,UAAIW,KAAK,GAAG,KAAKjB,gBAAL,CAAsBkB,OAAtB,CAA8BZ,KAA9B,CAAZ;AACA,WAAKN,gBAAL,CAAsBmB,KAAtB,CAA4BF,KAA5B,EAAmCA,KAAK,GAAG,CAA3C;AACH;AACJ,GALD;;AAMAlB,EAAAA,kBAAkB,CAACG,SAAnB,CAA6BkB,OAA7B,GAAuC,YAAY;AAC/C,SAAKnB,iBAAL,GAAyBoB,SAAzB;AACA,SAAKrB,gBAAL,GAAwBqB,SAAxB;AACH,GAHD;;AAIA,SAAOtB,kBAAP;AACH,CA9EuC,EAAxC;;AA+EA,SAASA,kBAAT","sourcesContent":["/**\r\n * PdfCacheCollection.ts class for EJ2-PDF\r\n */\r\nimport { Dictionary } from './../collections/dictionary';\r\n/**\r\n * `Collection of the cached objects`.\r\n * @private\r\n */\r\nvar PdfCacheCollection = /** @class */ (function () {\r\n    // Constructors\r\n    /**\r\n     * Initializes a new instance of the `PdfCacheCollection` class.\r\n     * @private\r\n     */\r\n    function PdfCacheCollection() {\r\n        this.referenceObjects = [];\r\n        this.pdfFontCollection = new Dictionary();\r\n    }\r\n    // Public methods\r\n    /**\r\n     * `Searches` for the similar cached object. If is not found - adds the object to the cache.\r\n     * @private\r\n     */\r\n    PdfCacheCollection.prototype.search = function (obj) {\r\n        var result = null;\r\n        var group = this.getGroup(obj);\r\n        if (group == null) {\r\n            group = this.createNewGroup();\r\n        }\r\n        else if (group.length > 0) {\r\n            result = group[0];\r\n        }\r\n        group.push(obj);\r\n        return result;\r\n    };\r\n    // Implementation\r\n    /**\r\n     * `Creates` a new group.\r\n     * @private\r\n     */\r\n    PdfCacheCollection.prototype.createNewGroup = function () {\r\n        var group = [];\r\n        this.referenceObjects.push(group);\r\n        return group;\r\n    };\r\n    /**\r\n     * `Find and Return` a group.\r\n     * @private\r\n     */\r\n    PdfCacheCollection.prototype.getGroup = function (result) {\r\n        var group = null;\r\n        if (result !== null) {\r\n            var len = this.referenceObjects.length;\r\n            for (var i = 0; i < len; i++) {\r\n                if (this.referenceObjects.length > 0) {\r\n                    var tGroup = this.referenceObjects[i];\r\n                    if (tGroup.length > 0) {\r\n                        var representative = tGroup[0];\r\n                        if (result.equalsTo(representative)) {\r\n                            group = tGroup;\r\n                            break;\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.removeGroup(tGroup);\r\n                    }\r\n                }\r\n                len = this.referenceObjects.length;\r\n            }\r\n        }\r\n        return group;\r\n    };\r\n    /**\r\n     * Remove a group from the storage.\r\n     */\r\n    PdfCacheCollection.prototype.removeGroup = function (group) {\r\n        if (group !== null) {\r\n            var index = this.referenceObjects.indexOf(group);\r\n            this.referenceObjects.slice(index, index + 1);\r\n        }\r\n    };\r\n    PdfCacheCollection.prototype.destroy = function () {\r\n        this.pdfFontCollection = undefined;\r\n        this.referenceObjects = undefined;\r\n    };\r\n    return PdfCacheCollection;\r\n}());\r\nexport { PdfCacheCollection };\r\n"]},"metadata":{},"sourceType":"module"}