{"ast":null,"code":"import * as events from '../base/constant';\nimport { isActionPrevent } from '../base/util';\nimport { CheckBoxFilterBase } from '../common/checkbox-filter-base';\n/**\r\n * @hidden\r\n * `CheckBoxFilter` module is used to handle filtering action.\r\n */\n\nvar CheckBoxFilter =\n/** @class */\nfunction () {\n  /**\r\n   * Constructor for checkbox filtering module\r\n   *\r\n   * @param {IGrid} parent - specifies the IGrid\r\n   * @param {FilterSettings} filterSettings - specifies the filtersettings\r\n   * @param {ServiceLocator} serviceLocator - specifies the ServiceLocator\r\n   * @hidden\r\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  function CheckBoxFilter(parent, filterSettings, serviceLocator) {\n    this.parent = parent;\n    this.isresetFocus = true;\n    this.checkBoxBase = new CheckBoxFilterBase(parent);\n    this.addEventListener();\n  }\n  /**\r\n   * To destroy the check box filter.\r\n   *\r\n   * @returns {void}\r\n   * @hidden\r\n   */\n\n\n  CheckBoxFilter.prototype.destroy = function () {\n    this.removeEventListener();\n    this.checkBoxBase.closeDialog();\n  };\n\n  CheckBoxFilter.prototype.openDialog = function (options) {\n    this.checkBoxBase.openDialog(options);\n    this.parent.log('column_type_missing', {\n      column: options.column\n    });\n  };\n\n  CheckBoxFilter.prototype.closeDialog = function () {\n    this.destroy();\n\n    if (this.isresetFocus) {\n      this.parent.notify(events.restoreFocus, {});\n    }\n  };\n\n  CheckBoxFilter.prototype.closeResponsiveDialog = function () {\n    this.checkBoxBase.closeDialog();\n  };\n  /**\r\n   * For internal use only - Get the module name.\r\n   *\r\n   * @returns {string} - returns the module name\r\n   * @private\r\n   */\n\n\n  CheckBoxFilter.prototype.getModuleName = function () {\n    return 'checkboxFilter';\n  };\n\n  CheckBoxFilter.prototype.actionBegin = function (args) {\n    this.parent.trigger(events.actionBegin, args);\n  };\n\n  CheckBoxFilter.prototype.actionComplete = function (args) {\n    this.parent.trigger(events.actionComplete, args);\n  };\n\n  CheckBoxFilter.prototype.actionPrevent = function (args) {\n    if (isActionPrevent(this.parent)) {\n      this.parent.notify(events.preventBatch, args);\n      args.cancel = true;\n    }\n  };\n\n  CheckBoxFilter.prototype.clearCustomFilter = function (col) {\n    this.checkBoxBase.clearFilter(col);\n  };\n\n  CheckBoxFilter.prototype.applyCustomFilter = function () {\n    this.checkBoxBase.fltrBtnHandler();\n    this.checkBoxBase.closeDialog();\n  };\n\n  CheckBoxFilter.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on(events.cBoxFltrBegin, this.actionBegin, this);\n    this.parent.on(events.cBoxFltrComplete, this.actionComplete, this);\n    this.parent.on(events.fltrPrevent, this.actionPrevent, this);\n  };\n\n  CheckBoxFilter.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(events.cBoxFltrBegin, this.actionBegin);\n    this.parent.off(events.cBoxFltrComplete, this.actionComplete);\n    this.parent.off(events.fltrPrevent, this.actionPrevent);\n  };\n\n  return CheckBoxFilter;\n}();\n\nexport { CheckBoxFilter };","map":{"version":3,"sources":["C:/Users/amase/Desktop/open_dsa/openDSA_dashboard/project/node_modules/@syncfusion/ej2-react-grids/node_modules/@syncfusion/ej2-grids/src/grid/actions/checkbox-filter.js"],"names":["events","isActionPrevent","CheckBoxFilterBase","CheckBoxFilter","parent","filterSettings","serviceLocator","isresetFocus","checkBoxBase","addEventListener","prototype","destroy","removeEventListener","closeDialog","openDialog","options","log","column","notify","restoreFocus","closeResponsiveDialog","getModuleName","actionBegin","args","trigger","actionComplete","actionPrevent","preventBatch","cancel","clearCustomFilter","col","clearFilter","applyCustomFilter","fltrBtnHandler","isDestroyed","on","cBoxFltrBegin","cBoxFltrComplete","fltrPrevent","off"],"mappings":"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","sourcesContent":["import * as events from '../base/constant';\r\nimport { isActionPrevent } from '../base/util';\r\nimport { CheckBoxFilterBase } from '../common/checkbox-filter-base';\r\n/**\r\n * @hidden\r\n * `CheckBoxFilter` module is used to handle filtering action.\r\n */\r\nvar CheckBoxFilter = /** @class */ (function () {\r\n    /**\r\n     * Constructor for checkbox filtering module\r\n     *\r\n     * @param {IGrid} parent - specifies the IGrid\r\n     * @param {FilterSettings} filterSettings - specifies the filtersettings\r\n     * @param {ServiceLocator} serviceLocator - specifies the ServiceLocator\r\n     * @hidden\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    function CheckBoxFilter(parent, filterSettings, serviceLocator) {\r\n        this.parent = parent;\r\n        this.isresetFocus = true;\r\n        this.checkBoxBase = new CheckBoxFilterBase(parent);\r\n        this.addEventListener();\r\n    }\r\n    /**\r\n     * To destroy the check box filter.\r\n     *\r\n     * @returns {void}\r\n     * @hidden\r\n     */\r\n    CheckBoxFilter.prototype.destroy = function () {\r\n        this.removeEventListener();\r\n        this.checkBoxBase.closeDialog();\r\n    };\r\n    CheckBoxFilter.prototype.openDialog = function (options) {\r\n        this.checkBoxBase.openDialog(options);\r\n        this.parent.log('column_type_missing', { column: options.column });\r\n    };\r\n    CheckBoxFilter.prototype.closeDialog = function () {\r\n        this.destroy();\r\n        if (this.isresetFocus) {\r\n            this.parent.notify(events.restoreFocus, {});\r\n        }\r\n    };\r\n    CheckBoxFilter.prototype.closeResponsiveDialog = function () {\r\n        this.checkBoxBase.closeDialog();\r\n    };\r\n    /**\r\n     * For internal use only - Get the module name.\r\n     *\r\n     * @returns {string} - returns the module name\r\n     * @private\r\n     */\r\n    CheckBoxFilter.prototype.getModuleName = function () {\r\n        return 'checkboxFilter';\r\n    };\r\n    CheckBoxFilter.prototype.actionBegin = function (args) {\r\n        this.parent.trigger(events.actionBegin, args);\r\n    };\r\n    CheckBoxFilter.prototype.actionComplete = function (args) {\r\n        this.parent.trigger(events.actionComplete, args);\r\n    };\r\n    CheckBoxFilter.prototype.actionPrevent = function (args) {\r\n        if (isActionPrevent(this.parent)) {\r\n            this.parent.notify(events.preventBatch, args);\r\n            args.cancel = true;\r\n        }\r\n    };\r\n    CheckBoxFilter.prototype.clearCustomFilter = function (col) {\r\n        this.checkBoxBase.clearFilter(col);\r\n    };\r\n    CheckBoxFilter.prototype.applyCustomFilter = function () {\r\n        this.checkBoxBase.fltrBtnHandler();\r\n        this.checkBoxBase.closeDialog();\r\n    };\r\n    CheckBoxFilter.prototype.addEventListener = function () {\r\n        if (this.parent.isDestroyed) {\r\n            return;\r\n        }\r\n        this.parent.on(events.cBoxFltrBegin, this.actionBegin, this);\r\n        this.parent.on(events.cBoxFltrComplete, this.actionComplete, this);\r\n        this.parent.on(events.fltrPrevent, this.actionPrevent, this);\r\n    };\r\n    CheckBoxFilter.prototype.removeEventListener = function () {\r\n        if (this.parent.isDestroyed) {\r\n            return;\r\n        }\r\n        this.parent.off(events.cBoxFltrBegin, this.actionBegin);\r\n        this.parent.off(events.cBoxFltrComplete, this.actionComplete);\r\n        this.parent.off(events.fltrPrevent, this.actionPrevent);\r\n    };\r\n    return CheckBoxFilter;\r\n}());\r\nexport { CheckBoxFilter };\r\n"]},"metadata":{},"sourceType":"module"}