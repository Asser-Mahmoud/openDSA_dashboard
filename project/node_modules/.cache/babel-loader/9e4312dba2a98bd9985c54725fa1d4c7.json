{"ast":null,"code":"import { Dictionary } from './../collections/dictionary';\nimport { PdfName } from './pdf-name';\nimport { Operators } from './../input-output/pdf-operators';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\r\n * `PdfDictionary` class is used to perform primitive operations.\r\n * @private\r\n */\n\nvar PdfDictionary =\n/** @class */\nfunction () {\n  function PdfDictionary(dictionary) {\n    /**\r\n     * Internal variable to store the `position`.\r\n     * @default -1\r\n     * @private\r\n     */\n    this.position7 = -1;\n    /**\r\n     * The `IPdfSavable` with the specified key.\r\n     * @private\r\n     */\n\n    this.primitiveItems = new Dictionary();\n    /**\r\n     * `Start marker` for dictionary.\r\n     * @private\r\n     */\n\n    this.prefix = '<<';\n    /**\r\n     * `End marker` for dictionary.\r\n     * @private\r\n     */\n\n    this.suffix = '>>';\n    /**\r\n     * @hidden\r\n     * @private\r\n     */\n\n    this.resources = [];\n    /**\r\n     * Internal variable to hold `cloned object`.\r\n     * @default null\r\n     * @private\r\n     */\n\n    this.object = null;\n    /**\r\n     * Flag for PDF file formar 1.5 is dictionary `archiving` needed.\r\n     * @default true\r\n     * @private\r\n     */\n\n    this.archive = true;\n    /**\r\n     * Represents the Font dictionary.\r\n     * @hidden\r\n     * @private\r\n     */\n\n    this.isFont = false;\n\n    if (typeof dictionary === 'undefined') {\n      this.primitiveItems = new Dictionary();\n      this.encrypt = true;\n      this.dictionaryProperties = new DictionaryProperties();\n    } else {\n      this.primitiveItems = new Dictionary();\n      var keys = dictionary.items.keys();\n      var values = dictionary.items.values();\n\n      for (var index = 0; index < dictionary.items.size(); index++) {\n        this.primitiveItems.setValue(keys[index], values[index]);\n      }\n\n      this.status = dictionary.status;\n      this.freezeChanges(this);\n      this.encrypt = true;\n      this.dictionaryProperties = new DictionaryProperties();\n    }\n  }\n\n  Object.defineProperty(PdfDictionary.prototype, \"items\", {\n    //Properties\n\n    /**\r\n     * Gets or sets the `IPdfSavable` with the specified key.\r\n     * @private\r\n     */\n    get: function () {\n      return this.primitiveItems;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDictionary.prototype, \"status\", {\n    /**\r\n     * Gets or sets the `Status` of the specified object.\r\n     * @private\r\n     */\n    get: function () {\n      return this.status7;\n    },\n    set: function (value) {\n      this.status7 = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDictionary.prototype, \"isSaving\", {\n    /**\r\n     * Gets or sets a value indicating whether this document `is saving` or not.\r\n     * @private\r\n     */\n    get: function () {\n      return this.isSaving7;\n    },\n    set: function (value) {\n      this.isSaving7 = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDictionary.prototype, \"objectCollectionIndex\", {\n    /**\r\n     * Gets or sets the `index` value of the specified object.\r\n     * @private\r\n     */\n    get: function () {\n      return this.index7;\n    },\n    set: function (value) {\n      this.index7 = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDictionary.prototype, \"clonedObject\", {\n    /**\r\n     * Returns `cloned object`.\r\n     * @private\r\n     */\n    get: function () {\n      return this.object;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDictionary.prototype, \"position\", {\n    /**\r\n     * Gets or sets the `position` of the object.\r\n     * @private\r\n     */\n    get: function () {\n      return this.position7;\n    },\n    set: function (value) {\n      this.position7 = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDictionary.prototype, \"Count\", {\n    /**\r\n     * Gets the `count`.\r\n     * @private\r\n     */\n    get: function () {\n      return this.primitiveItems.size();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDictionary.prototype, \"Dictionary\", {\n    /**\r\n     * Collection of `items` in the object.\r\n     * @private\r\n     */\n    get: function () {\n      return this;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Get flag if need to `archive` dictionary.\r\n   * @private\r\n   */\n\n  PdfDictionary.prototype.getArchive = function () {\n    return this.archive;\n  };\n  /**\r\n   * Set flag if need to `archive` dictionary.\r\n   * @private\r\n   */\n\n\n  PdfDictionary.prototype.setArchive = function (value) {\n    this.archive = value;\n  };\n  /**\r\n   * Sets flag if `encryption` is needed.\r\n   * @private\r\n   */\n\n\n  PdfDictionary.prototype.setEncrypt = function (value) {\n    this.encrypt = value;\n    this.modify();\n  };\n  /**\r\n   * Gets flag if `encryption` is needed.\r\n   * @private\r\n   */\n\n\n  PdfDictionary.prototype.getEncrypt = function () {\n    return this.encrypt;\n  };\n  /**\r\n   * `Freezes` the changes.\r\n   * @private\r\n   */\n\n\n  PdfDictionary.prototype.freezeChanges = function (freezer) {\n    this.bChanged = false;\n  };\n  /**\r\n   * Creates a `copy of PdfDictionary`.\r\n   * @private\r\n   */\n\n\n  PdfDictionary.prototype.clone = function (crossTable) {\n    //Need to add more codings\n    var newDict = new PdfDictionary();\n    return newDict;\n  };\n  /**\r\n   * `Mark` this instance modified.\r\n   * @private\r\n   */\n\n\n  PdfDictionary.prototype.modify = function () {\n    this.bChanged = true;\n  };\n  /**\r\n   * `Removes` the specified key.\r\n   * @private\r\n   */\n\n\n  PdfDictionary.prototype.remove = function (key) {\n    if (typeof key !== 'string') {\n      this.primitiveItems.remove(key.value);\n      this.modify();\n    } else {\n      this.remove(new PdfName(key));\n    }\n  };\n  /**\r\n   * `Determines` whether the dictionary contains the key.\r\n   * @private\r\n   */\n\n\n  PdfDictionary.prototype.containsKey = function (key) {\n    var returnValue = false;\n    returnValue = this.primitiveItems.containsKey(key.toString());\n    return returnValue;\n  };\n  /**\r\n   * Raises event `BeginSave`.\r\n   * @private\r\n   */\n\n\n  PdfDictionary.prototype.onBeginSave = function () {\n    this.beginSave.sender.beginSave();\n  };\n  /**\r\n   * Raises event `Font Dictionary BeginSave`.\r\n   * @private\r\n   */\n\n\n  PdfDictionary.prototype.onFontDictionaryBeginSave = function () {\n    this.fontDictionaryBeginSave.sender.fontDictionaryBeginSave();\n  };\n  /**\r\n   * Raises event `Descendant Font BeginSave`.\r\n   * @private\r\n   */\n\n\n  PdfDictionary.prototype.onDescendantFontBeginSave = function () {\n    this.descendantFontBeginSave.sender.descendantFontBeginSave();\n  };\n  /**\r\n   * Raises event 'BeginSave'.\r\n   * @private\r\n   */\n\n\n  PdfDictionary.prototype.onTemplateBeginSave = function () {\n    this.pageBeginDrawTemplate.sender.pageBeginSave();\n  };\n  /**\r\n   * Raises event `BeginSave`.\r\n   * @private\r\n   */\n\n\n  PdfDictionary.prototype.onBeginAnnotationSave = function () {\n    this.annotationBeginSave.sender.beginSave();\n  };\n  /**\r\n   * Raises event `BeginSave`.\r\n   * @private\r\n   */\n\n\n  PdfDictionary.prototype.onSectionBeginSave = function (writer) {\n    var saveEvent = this.sectionBeginSave;\n    saveEvent.sender.beginSave(saveEvent.state, writer);\n  };\n\n  PdfDictionary.prototype.save = function (writer, bRaiseEvent) {\n    if (typeof bRaiseEvent === 'undefined') {\n      this.save(writer, true);\n    } else {\n      writer.write(this.prefix);\n\n      if (typeof this.beginSave !== 'undefined') {\n        this.onBeginSave();\n      }\n\n      if (typeof this.descendantFontBeginSave !== 'undefined') {\n        this.onDescendantFontBeginSave();\n      }\n\n      if (typeof this.fontDictionaryBeginSave !== 'undefined') {\n        this.onFontDictionaryBeginSave();\n      }\n\n      if (typeof this.annotationBeginSave !== 'undefined') {\n        this.onBeginAnnotationSave();\n      }\n\n      if (typeof this.sectionBeginSave !== 'undefined') {\n        this.onSectionBeginSave(writer);\n      }\n\n      if (typeof this.pageBeginDrawTemplate !== 'undefined') {\n        this.onTemplateBeginSave();\n      } // }\n\n\n      if (this.Count > 0) {\n        this.saveItems(writer);\n      }\n\n      writer.write(this.suffix);\n      writer.write(Operators.newLine);\n    }\n  };\n  /**\r\n   * `Save dictionary items`.\r\n   * @private\r\n   */\n\n\n  PdfDictionary.prototype.saveItems = function (writer) {\n    writer.write(Operators.newLine);\n    var keys = this.primitiveItems.keys();\n    var values = this.primitiveItems.values();\n\n    for (var index = 0; index < keys.length; index++) {\n      var key = keys[index];\n      var name_1 = new PdfName(key);\n      name_1.save(writer);\n      writer.write(Operators.whiteSpace);\n      var resources = values[index];\n      resources.save(writer);\n      writer.write(Operators.newLine);\n    }\n  };\n\n  return PdfDictionary;\n}();\n\nexport { PdfDictionary };\n\nvar SaveSectionCollectionEventHandler =\n/** @class */\nfunction () {\n  /**\r\n   * New instance for `save section collection event handler` class.\r\n   * @private\r\n   */\n  function SaveSectionCollectionEventHandler(sender) {\n    this.sender = sender;\n  }\n\n  return SaveSectionCollectionEventHandler;\n}();\n\nexport { SaveSectionCollectionEventHandler };\n\nvar SaveDescendantFontEventHandler =\n/** @class */\nfunction () {\n  /**\r\n   * New instance for `save section collection event handler` class.\r\n   * @private\r\n   */\n  function SaveDescendantFontEventHandler(sender) {\n    this.sender = sender;\n  }\n\n  return SaveDescendantFontEventHandler;\n}();\n\nexport { SaveDescendantFontEventHandler };\n\nvar SaveFontDictionaryEventHandler =\n/** @class */\nfunction () {\n  /**\r\n   * New instance for `save section collection event handler` class.\r\n   * @private\r\n   */\n  function SaveFontDictionaryEventHandler(sender) {\n    this.sender = sender;\n  }\n\n  return SaveFontDictionaryEventHandler;\n}();\n\nexport { SaveFontDictionaryEventHandler };\n\nvar SaveAnnotationEventHandler =\n/** @class */\nfunction () {\n  /**\r\n   * New instance for `save annotation event handler` class.\r\n   * @private\r\n   */\n  function SaveAnnotationEventHandler(sender) {\n    this.sender = sender;\n  }\n\n  return SaveAnnotationEventHandler;\n}();\n\nexport { SaveAnnotationEventHandler };\n\nvar SaveSectionEventHandler =\n/** @class */\nfunction () {\n  // constructors\n\n  /**\r\n   * New instance for `save section event handler` class.\r\n   * @private\r\n   */\n  function SaveSectionEventHandler(sender, state) {\n    this.sender = sender;\n    this.state = state;\n  }\n\n  return SaveSectionEventHandler;\n}();\n\nexport { SaveSectionEventHandler };\n/**\r\n * SaveTemplateEventHandler class used to store information about template elements.\r\n * @private\r\n * @hidden\r\n */\n\nvar SaveTemplateEventHandler =\n/** @class */\nfunction () {\n  /**\r\n   * New instance for save section collection event handler class.\r\n   * @public\r\n   */\n  function SaveTemplateEventHandler(sender) {\n    this.sender = sender;\n  }\n\n  return SaveTemplateEventHandler;\n}();\n\nexport { SaveTemplateEventHandler };","map":{"version":3,"sources":["C:/Users/amase/Desktop/open_dsa/openDSA_dashboard/project/node_modules/@syncfusion/ej2-react-charts/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js"],"names":["Dictionary","PdfName","Operators","DictionaryProperties","PdfDictionary","dictionary","position7","primitiveItems","prefix","suffix","resources","object","archive","isFont","encrypt","dictionaryProperties","keys","items","values","index","size","setValue","status","freezeChanges","Object","defineProperty","prototype","get","enumerable","configurable","status7","set","value","isSaving7","index7","getArchive","setArchive","setEncrypt","modify","getEncrypt","freezer","bChanged","clone","crossTable","newDict","remove","key","containsKey","returnValue","toString","onBeginSave","beginSave","sender","onFontDictionaryBeginSave","fontDictionaryBeginSave","onDescendantFontBeginSave","descendantFontBeginSave","onTemplateBeginSave","pageBeginDrawTemplate","pageBeginSave","onBeginAnnotationSave","annotationBeginSave","onSectionBeginSave","writer","saveEvent","sectionBeginSave","state","save","bRaiseEvent","write","Count","saveItems","newLine","length","name_1","whiteSpace","SaveSectionCollectionEventHandler","SaveDescendantFontEventHandler","SaveFontDictionaryEventHandler","SaveAnnotationEventHandler","SaveSectionEventHandler","SaveTemplateEventHandler"],"mappings":"AAAA,SAASA,UAAT,QAA2B,6BAA3B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,SAAT,QAA0B,iCAA1B;AACA,SAASC,oBAAT,QAAqC,6CAArC;AACA;AACA;AACA;AACA;;AACA,IAAIC,aAAa;AAAG;AAAe,YAAY;AAC3C,WAASA,aAAT,CAAuBC,UAAvB,EAAmC;AAC/B;AACR;AACA;AACA;AACA;AACQ,SAAKC,SAAL,GAAiB,CAAC,CAAlB;AACA;AACR;AACA;AACA;;AACQ,SAAKC,cAAL,GAAsB,IAAIP,UAAJ,EAAtB;AACA;AACR;AACA;AACA;;AACQ,SAAKQ,MAAL,GAAc,IAAd;AACA;AACR;AACA;AACA;;AACQ,SAAKC,MAAL,GAAc,IAAd;AACA;AACR;AACA;AACA;;AACQ,SAAKC,SAAL,GAAiB,EAAjB;AACA;AACR;AACA;AACA;AACA;;AACQ,SAAKC,MAAL,GAAc,IAAd;AACA;AACR;AACA;AACA;AACA;;AACQ,SAAKC,OAAL,GAAe,IAAf;AACA;AACR;AACA;AACA;AACA;;AACQ,SAAKC,MAAL,GAAc,KAAd;;AACA,QAAI,OAAOR,UAAP,KAAsB,WAA1B,EAAuC;AACnC,WAAKE,cAAL,GAAsB,IAAIP,UAAJ,EAAtB;AACA,WAAKc,OAAL,GAAe,IAAf;AACA,WAAKC,oBAAL,GAA4B,IAAIZ,oBAAJ,EAA5B;AACH,KAJD,MAKK;AACD,WAAKI,cAAL,GAAsB,IAAIP,UAAJ,EAAtB;AACA,UAAIgB,IAAI,GAAGX,UAAU,CAACY,KAAX,CAAiBD,IAAjB,EAAX;AACA,UAAIE,MAAM,GAAGb,UAAU,CAACY,KAAX,CAAiBC,MAAjB,EAAb;;AACA,WAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGd,UAAU,CAACY,KAAX,CAAiBG,IAAjB,EAA5B,EAAqDD,KAAK,EAA1D,EAA8D;AAC1D,aAAKZ,cAAL,CAAoBc,QAApB,CAA6BL,IAAI,CAACG,KAAD,CAAjC,EAA0CD,MAAM,CAACC,KAAD,CAAhD;AACH;;AACD,WAAKG,MAAL,GAAcjB,UAAU,CAACiB,MAAzB;AACA,WAAKC,aAAL,CAAmB,IAAnB;AACA,WAAKT,OAAL,GAAe,IAAf;AACA,WAAKC,oBAAL,GAA4B,IAAIZ,oBAAJ,EAA5B;AACH;AACJ;;AACDqB,EAAAA,MAAM,CAACC,cAAP,CAAsBrB,aAAa,CAACsB,SAApC,EAA+C,OAA/C,EAAwD;AACpD;;AACA;AACR;AACA;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKpB,cAAZ;AACH,KARmD;AASpDqB,IAAAA,UAAU,EAAE,IATwC;AAUpDC,IAAAA,YAAY,EAAE;AAVsC,GAAxD;AAYAL,EAAAA,MAAM,CAACC,cAAP,CAAsBrB,aAAa,CAACsB,SAApC,EAA+C,QAA/C,EAAyD;AACrD;AACR;AACA;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKG,OAAZ;AACH,KAPoD;AAQrDC,IAAAA,GAAG,EAAE,UAAUC,KAAV,EAAiB;AAClB,WAAKF,OAAL,GAAeE,KAAf;AACH,KAVoD;AAWrDJ,IAAAA,UAAU,EAAE,IAXyC;AAYrDC,IAAAA,YAAY,EAAE;AAZuC,GAAzD;AAcAL,EAAAA,MAAM,CAACC,cAAP,CAAsBrB,aAAa,CAACsB,SAApC,EAA+C,UAA/C,EAA2D;AACvD;AACR;AACA;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKM,SAAZ;AACH,KAPsD;AAQvDF,IAAAA,GAAG,EAAE,UAAUC,KAAV,EAAiB;AAClB,WAAKC,SAAL,GAAiBD,KAAjB;AACH,KAVsD;AAWvDJ,IAAAA,UAAU,EAAE,IAX2C;AAYvDC,IAAAA,YAAY,EAAE;AAZyC,GAA3D;AAcAL,EAAAA,MAAM,CAACC,cAAP,CAAsBrB,aAAa,CAACsB,SAApC,EAA+C,uBAA/C,EAAwE;AACpE;AACR;AACA;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKO,MAAZ;AACH,KAPmE;AAQpEH,IAAAA,GAAG,EAAE,UAAUC,KAAV,EAAiB;AAClB,WAAKE,MAAL,GAAcF,KAAd;AACH,KAVmE;AAWpEJ,IAAAA,UAAU,EAAE,IAXwD;AAYpEC,IAAAA,YAAY,EAAE;AAZsD,GAAxE;AAcAL,EAAAA,MAAM,CAACC,cAAP,CAAsBrB,aAAa,CAACsB,SAApC,EAA+C,cAA/C,EAA+D;AAC3D;AACR;AACA;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKhB,MAAZ;AACH,KAP0D;AAQ3DiB,IAAAA,UAAU,EAAE,IAR+C;AAS3DC,IAAAA,YAAY,EAAE;AAT6C,GAA/D;AAWAL,EAAAA,MAAM,CAACC,cAAP,CAAsBrB,aAAa,CAACsB,SAApC,EAA+C,UAA/C,EAA2D;AACvD;AACR;AACA;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKrB,SAAZ;AACH,KAPsD;AAQvDyB,IAAAA,GAAG,EAAE,UAAUC,KAAV,EAAiB;AAClB,WAAK1B,SAAL,GAAiB0B,KAAjB;AACH,KAVsD;AAWvDJ,IAAAA,UAAU,EAAE,IAX2C;AAYvDC,IAAAA,YAAY,EAAE;AAZyC,GAA3D;AAcAL,EAAAA,MAAM,CAACC,cAAP,CAAsBrB,aAAa,CAACsB,SAApC,EAA+C,OAA/C,EAAwD;AACpD;AACR;AACA;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKpB,cAAL,CAAoBa,IAApB,EAAP;AACH,KAPmD;AAQpDQ,IAAAA,UAAU,EAAE,IARwC;AASpDC,IAAAA,YAAY,EAAE;AATsC,GAAxD;AAWAL,EAAAA,MAAM,CAACC,cAAP,CAAsBrB,aAAa,CAACsB,SAApC,EAA+C,YAA/C,EAA6D;AACzD;AACR;AACA;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,IAAP;AACH,KAPwD;AAQzDC,IAAAA,UAAU,EAAE,IAR6C;AASzDC,IAAAA,YAAY,EAAE;AAT2C,GAA7D;AAWA;AACJ;AACA;AACA;;AACIzB,EAAAA,aAAa,CAACsB,SAAd,CAAwBS,UAAxB,GAAqC,YAAY;AAC7C,WAAO,KAAKvB,OAAZ;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIR,EAAAA,aAAa,CAACsB,SAAd,CAAwBU,UAAxB,GAAqC,UAAUJ,KAAV,EAAiB;AAClD,SAAKpB,OAAL,GAAeoB,KAAf;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACI5B,EAAAA,aAAa,CAACsB,SAAd,CAAwBW,UAAxB,GAAqC,UAAUL,KAAV,EAAiB;AAClD,SAAKlB,OAAL,GAAekB,KAAf;AACA,SAAKM,MAAL;AACH,GAHD;AAIA;AACJ;AACA;AACA;;;AACIlC,EAAAA,aAAa,CAACsB,SAAd,CAAwBa,UAAxB,GAAqC,YAAY;AAC7C,WAAO,KAAKzB,OAAZ;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIV,EAAAA,aAAa,CAACsB,SAAd,CAAwBH,aAAxB,GAAwC,UAAUiB,OAAV,EAAmB;AACvD,SAAKC,QAAL,GAAgB,KAAhB;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIrC,EAAAA,aAAa,CAACsB,SAAd,CAAwBgB,KAAxB,GAAgC,UAAUC,UAAV,EAAsB;AAClD;AACA,QAAIC,OAAO,GAAG,IAAIxC,aAAJ,EAAd;AACA,WAAOwC,OAAP;AACH,GAJD;AAKA;AACJ;AACA;AACA;;;AACIxC,EAAAA,aAAa,CAACsB,SAAd,CAAwBY,MAAxB,GAAiC,YAAY;AACzC,SAAKG,QAAL,GAAgB,IAAhB;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIrC,EAAAA,aAAa,CAACsB,SAAd,CAAwBmB,MAAxB,GAAiC,UAAUC,GAAV,EAAe;AAC5C,QAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzB,WAAKvC,cAAL,CAAoBsC,MAApB,CAA2BC,GAAG,CAACd,KAA/B;AACA,WAAKM,MAAL;AACH,KAHD,MAIK;AACD,WAAKO,MAAL,CAAY,IAAI5C,OAAJ,CAAY6C,GAAZ,CAAZ;AACH;AACJ,GARD;AASA;AACJ;AACA;AACA;;;AACI1C,EAAAA,aAAa,CAACsB,SAAd,CAAwBqB,WAAxB,GAAsC,UAAUD,GAAV,EAAe;AACjD,QAAIE,WAAW,GAAG,KAAlB;AACAA,IAAAA,WAAW,GAAG,KAAKzC,cAAL,CAAoBwC,WAApB,CAAgCD,GAAG,CAACG,QAAJ,EAAhC,CAAd;AACA,WAAOD,WAAP;AACH,GAJD;AAKA;AACJ;AACA;AACA;;;AACI5C,EAAAA,aAAa,CAACsB,SAAd,CAAwBwB,WAAxB,GAAsC,YAAY;AAC9C,SAAKC,SAAL,CAAeC,MAAf,CAAsBD,SAAtB;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACI/C,EAAAA,aAAa,CAACsB,SAAd,CAAwB2B,yBAAxB,GAAoD,YAAY;AAC5D,SAAKC,uBAAL,CAA6BF,MAA7B,CAAoCE,uBAApC;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIlD,EAAAA,aAAa,CAACsB,SAAd,CAAwB6B,yBAAxB,GAAoD,YAAY;AAC5D,SAAKC,uBAAL,CAA6BJ,MAA7B,CAAoCI,uBAApC;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIpD,EAAAA,aAAa,CAACsB,SAAd,CAAwB+B,mBAAxB,GAA8C,YAAY;AACtD,SAAKC,qBAAL,CAA2BN,MAA3B,CAAkCO,aAAlC;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIvD,EAAAA,aAAa,CAACsB,SAAd,CAAwBkC,qBAAxB,GAAgD,YAAY;AACxD,SAAKC,mBAAL,CAAyBT,MAAzB,CAAgCD,SAAhC;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACI/C,EAAAA,aAAa,CAACsB,SAAd,CAAwBoC,kBAAxB,GAA6C,UAAUC,MAAV,EAAkB;AAC3D,QAAIC,SAAS,GAAG,KAAKC,gBAArB;AACAD,IAAAA,SAAS,CAACZ,MAAV,CAAiBD,SAAjB,CAA2Ba,SAAS,CAACE,KAArC,EAA4CH,MAA5C;AACH,GAHD;;AAIA3D,EAAAA,aAAa,CAACsB,SAAd,CAAwByC,IAAxB,GAA+B,UAAUJ,MAAV,EAAkBK,WAAlB,EAA+B;AAC1D,QAAI,OAAOA,WAAP,KAAuB,WAA3B,EAAwC;AACpC,WAAKD,IAAL,CAAUJ,MAAV,EAAkB,IAAlB;AACH,KAFD,MAGK;AACDA,MAAAA,MAAM,CAACM,KAAP,CAAa,KAAK7D,MAAlB;;AACA,UAAI,OAAO,KAAK2C,SAAZ,KAA0B,WAA9B,EAA2C;AACvC,aAAKD,WAAL;AACH;;AACD,UAAI,OAAO,KAAKM,uBAAZ,KAAwC,WAA5C,EAAyD;AACrD,aAAKD,yBAAL;AACH;;AACD,UAAI,OAAO,KAAKD,uBAAZ,KAAwC,WAA5C,EAAyD;AACrD,aAAKD,yBAAL;AACH;;AACD,UAAI,OAAO,KAAKQ,mBAAZ,KAAoC,WAAxC,EAAqD;AACjD,aAAKD,qBAAL;AACH;;AACD,UAAI,OAAO,KAAKK,gBAAZ,KAAiC,WAArC,EAAkD;AAC9C,aAAKH,kBAAL,CAAwBC,MAAxB;AACH;;AACD,UAAI,OAAO,KAAKL,qBAAZ,KAAsC,WAA1C,EAAuD;AACnD,aAAKD,mBAAL;AACH,OAnBA,CAoBD;;;AACA,UAAI,KAAKa,KAAL,GAAa,CAAjB,EAAoB;AAChB,aAAKC,SAAL,CAAeR,MAAf;AACH;;AACDA,MAAAA,MAAM,CAACM,KAAP,CAAa,KAAK5D,MAAlB;AACAsD,MAAAA,MAAM,CAACM,KAAP,CAAanE,SAAS,CAACsE,OAAvB;AACH;AACJ,GA/BD;AAgCA;AACJ;AACA;AACA;;;AACIpE,EAAAA,aAAa,CAACsB,SAAd,CAAwB6C,SAAxB,GAAoC,UAAUR,MAAV,EAAkB;AAClDA,IAAAA,MAAM,CAACM,KAAP,CAAanE,SAAS,CAACsE,OAAvB;AACA,QAAIxD,IAAI,GAAG,KAAKT,cAAL,CAAoBS,IAApB,EAAX;AACA,QAAIE,MAAM,GAAG,KAAKX,cAAL,CAAoBW,MAApB,EAAb;;AACA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,IAAI,CAACyD,MAAjC,EAAyCtD,KAAK,EAA9C,EAAkD;AAC9C,UAAI2B,GAAG,GAAG9B,IAAI,CAACG,KAAD,CAAd;AACA,UAAIuD,MAAM,GAAG,IAAIzE,OAAJ,CAAY6C,GAAZ,CAAb;AACA4B,MAAAA,MAAM,CAACP,IAAP,CAAYJ,MAAZ;AACAA,MAAAA,MAAM,CAACM,KAAP,CAAanE,SAAS,CAACyE,UAAvB;AACA,UAAIjE,SAAS,GAAGQ,MAAM,CAACC,KAAD,CAAtB;AACAT,MAAAA,SAAS,CAACyD,IAAV,CAAeJ,MAAf;AACAA,MAAAA,MAAM,CAACM,KAAP,CAAanE,SAAS,CAACsE,OAAvB;AACH;AACJ,GAbD;;AAcA,SAAOpE,aAAP;AACH,CA7UkC,EAAnC;;AA8UA,SAASA,aAAT;;AACA,IAAIwE,iCAAiC;AAAG;AAAe,YAAY;AAC/D;AACJ;AACA;AACA;AACI,WAASA,iCAAT,CAA2CxB,MAA3C,EAAmD;AAC/C,SAAKA,MAAL,GAAcA,MAAd;AACH;;AACD,SAAOwB,iCAAP;AACH,CATsD,EAAvD;;AAUA,SAASA,iCAAT;;AACA,IAAIC,8BAA8B;AAAG;AAAe,YAAY;AAC5D;AACJ;AACA;AACA;AACI,WAASA,8BAAT,CAAwCzB,MAAxC,EAAgD;AAC5C,SAAKA,MAAL,GAAcA,MAAd;AACH;;AACD,SAAOyB,8BAAP;AACH,CATmD,EAApD;;AAUA,SAASA,8BAAT;;AACA,IAAIC,8BAA8B;AAAG;AAAe,YAAY;AAC5D;AACJ;AACA;AACA;AACI,WAASA,8BAAT,CAAwC1B,MAAxC,EAAgD;AAC5C,SAAKA,MAAL,GAAcA,MAAd;AACH;;AACD,SAAO0B,8BAAP;AACH,CATmD,EAApD;;AAUA,SAASA,8BAAT;;AACA,IAAIC,0BAA0B;AAAG;AAAe,YAAY;AACxD;AACJ;AACA;AACA;AACI,WAASA,0BAAT,CAAoC3B,MAApC,EAA4C;AACxC,SAAKA,MAAL,GAAcA,MAAd;AACH;;AACD,SAAO2B,0BAAP;AACH,CAT+C,EAAhD;;AAUA,SAASA,0BAAT;;AACA,IAAIC,uBAAuB;AAAG;AAAe,YAAY;AACrD;;AACA;AACJ;AACA;AACA;AACI,WAASA,uBAAT,CAAiC5B,MAAjC,EAAyCc,KAAzC,EAAgD;AAC5C,SAAKd,MAAL,GAAcA,MAAd;AACA,SAAKc,KAAL,GAAaA,KAAb;AACH;;AACD,SAAOc,uBAAP;AACH,CAX4C,EAA7C;;AAYA,SAASA,uBAAT;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,wBAAwB;AAAG;AAAe,YAAY;AACtD;AACJ;AACA;AACA;AACI,WAASA,wBAAT,CAAkC7B,MAAlC,EAA0C;AACtC,SAAKA,MAAL,GAAcA,MAAd;AACH;;AACD,SAAO6B,wBAAP;AACH,CAT6C,EAA9C;;AAUA,SAASA,wBAAT","sourcesContent":["import { Dictionary } from './../collections/dictionary';\r\nimport { PdfName } from './pdf-name';\r\nimport { Operators } from './../input-output/pdf-operators';\r\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\r\n/**\r\n * `PdfDictionary` class is used to perform primitive operations.\r\n * @private\r\n */\r\nvar PdfDictionary = /** @class */ (function () {\r\n    function PdfDictionary(dictionary) {\r\n        /**\r\n         * Internal variable to store the `position`.\r\n         * @default -1\r\n         * @private\r\n         */\r\n        this.position7 = -1;\r\n        /**\r\n         * The `IPdfSavable` with the specified key.\r\n         * @private\r\n         */\r\n        this.primitiveItems = new Dictionary();\r\n        /**\r\n         * `Start marker` for dictionary.\r\n         * @private\r\n         */\r\n        this.prefix = '<<';\r\n        /**\r\n         * `End marker` for dictionary.\r\n         * @private\r\n         */\r\n        this.suffix = '>>';\r\n        /**\r\n         * @hidden\r\n         * @private\r\n         */\r\n        this.resources = [];\r\n        /**\r\n         * Internal variable to hold `cloned object`.\r\n         * @default null\r\n         * @private\r\n         */\r\n        this.object = null;\r\n        /**\r\n         * Flag for PDF file formar 1.5 is dictionary `archiving` needed.\r\n         * @default true\r\n         * @private\r\n         */\r\n        this.archive = true;\r\n        /**\r\n         * Represents the Font dictionary.\r\n         * @hidden\r\n         * @private\r\n         */\r\n        this.isFont = false;\r\n        if (typeof dictionary === 'undefined') {\r\n            this.primitiveItems = new Dictionary();\r\n            this.encrypt = true;\r\n            this.dictionaryProperties = new DictionaryProperties();\r\n        }\r\n        else {\r\n            this.primitiveItems = new Dictionary();\r\n            var keys = dictionary.items.keys();\r\n            var values = dictionary.items.values();\r\n            for (var index = 0; index < dictionary.items.size(); index++) {\r\n                this.primitiveItems.setValue(keys[index], values[index]);\r\n            }\r\n            this.status = dictionary.status;\r\n            this.freezeChanges(this);\r\n            this.encrypt = true;\r\n            this.dictionaryProperties = new DictionaryProperties();\r\n        }\r\n    }\r\n    Object.defineProperty(PdfDictionary.prototype, \"items\", {\r\n        //Properties\r\n        /**\r\n         * Gets or sets the `IPdfSavable` with the specified key.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.primitiveItems;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfDictionary.prototype, \"status\", {\r\n        /**\r\n         * Gets or sets the `Status` of the specified object.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.status7;\r\n        },\r\n        set: function (value) {\r\n            this.status7 = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfDictionary.prototype, \"isSaving\", {\r\n        /**\r\n         * Gets or sets a value indicating whether this document `is saving` or not.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.isSaving7;\r\n        },\r\n        set: function (value) {\r\n            this.isSaving7 = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfDictionary.prototype, \"objectCollectionIndex\", {\r\n        /**\r\n         * Gets or sets the `index` value of the specified object.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.index7;\r\n        },\r\n        set: function (value) {\r\n            this.index7 = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfDictionary.prototype, \"clonedObject\", {\r\n        /**\r\n         * Returns `cloned object`.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.object;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfDictionary.prototype, \"position\", {\r\n        /**\r\n         * Gets or sets the `position` of the object.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.position7;\r\n        },\r\n        set: function (value) {\r\n            this.position7 = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfDictionary.prototype, \"Count\", {\r\n        /**\r\n         * Gets the `count`.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.primitiveItems.size();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfDictionary.prototype, \"Dictionary\", {\r\n        /**\r\n         * Collection of `items` in the object.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Get flag if need to `archive` dictionary.\r\n     * @private\r\n     */\r\n    PdfDictionary.prototype.getArchive = function () {\r\n        return this.archive;\r\n    };\r\n    /**\r\n     * Set flag if need to `archive` dictionary.\r\n     * @private\r\n     */\r\n    PdfDictionary.prototype.setArchive = function (value) {\r\n        this.archive = value;\r\n    };\r\n    /**\r\n     * Sets flag if `encryption` is needed.\r\n     * @private\r\n     */\r\n    PdfDictionary.prototype.setEncrypt = function (value) {\r\n        this.encrypt = value;\r\n        this.modify();\r\n    };\r\n    /**\r\n     * Gets flag if `encryption` is needed.\r\n     * @private\r\n     */\r\n    PdfDictionary.prototype.getEncrypt = function () {\r\n        return this.encrypt;\r\n    };\r\n    /**\r\n     * `Freezes` the changes.\r\n     * @private\r\n     */\r\n    PdfDictionary.prototype.freezeChanges = function (freezer) {\r\n        this.bChanged = false;\r\n    };\r\n    /**\r\n     * Creates a `copy of PdfDictionary`.\r\n     * @private\r\n     */\r\n    PdfDictionary.prototype.clone = function (crossTable) {\r\n        //Need to add more codings\r\n        var newDict = new PdfDictionary();\r\n        return newDict;\r\n    };\r\n    /**\r\n     * `Mark` this instance modified.\r\n     * @private\r\n     */\r\n    PdfDictionary.prototype.modify = function () {\r\n        this.bChanged = true;\r\n    };\r\n    /**\r\n     * `Removes` the specified key.\r\n     * @private\r\n     */\r\n    PdfDictionary.prototype.remove = function (key) {\r\n        if (typeof key !== 'string') {\r\n            this.primitiveItems.remove(key.value);\r\n            this.modify();\r\n        }\r\n        else {\r\n            this.remove(new PdfName(key));\r\n        }\r\n    };\r\n    /**\r\n     * `Determines` whether the dictionary contains the key.\r\n     * @private\r\n     */\r\n    PdfDictionary.prototype.containsKey = function (key) {\r\n        var returnValue = false;\r\n        returnValue = this.primitiveItems.containsKey(key.toString());\r\n        return returnValue;\r\n    };\r\n    /**\r\n     * Raises event `BeginSave`.\r\n     * @private\r\n     */\r\n    PdfDictionary.prototype.onBeginSave = function () {\r\n        this.beginSave.sender.beginSave();\r\n    };\r\n    /**\r\n     * Raises event `Font Dictionary BeginSave`.\r\n     * @private\r\n     */\r\n    PdfDictionary.prototype.onFontDictionaryBeginSave = function () {\r\n        this.fontDictionaryBeginSave.sender.fontDictionaryBeginSave();\r\n    };\r\n    /**\r\n     * Raises event `Descendant Font BeginSave`.\r\n     * @private\r\n     */\r\n    PdfDictionary.prototype.onDescendantFontBeginSave = function () {\r\n        this.descendantFontBeginSave.sender.descendantFontBeginSave();\r\n    };\r\n    /**\r\n     * Raises event 'BeginSave'.\r\n     * @private\r\n     */\r\n    PdfDictionary.prototype.onTemplateBeginSave = function () {\r\n        this.pageBeginDrawTemplate.sender.pageBeginSave();\r\n    };\r\n    /**\r\n     * Raises event `BeginSave`.\r\n     * @private\r\n     */\r\n    PdfDictionary.prototype.onBeginAnnotationSave = function () {\r\n        this.annotationBeginSave.sender.beginSave();\r\n    };\r\n    /**\r\n     * Raises event `BeginSave`.\r\n     * @private\r\n     */\r\n    PdfDictionary.prototype.onSectionBeginSave = function (writer) {\r\n        var saveEvent = this.sectionBeginSave;\r\n        saveEvent.sender.beginSave(saveEvent.state, writer);\r\n    };\r\n    PdfDictionary.prototype.save = function (writer, bRaiseEvent) {\r\n        if (typeof bRaiseEvent === 'undefined') {\r\n            this.save(writer, true);\r\n        }\r\n        else {\r\n            writer.write(this.prefix);\r\n            if (typeof this.beginSave !== 'undefined') {\r\n                this.onBeginSave();\r\n            }\r\n            if (typeof this.descendantFontBeginSave !== 'undefined') {\r\n                this.onDescendantFontBeginSave();\r\n            }\r\n            if (typeof this.fontDictionaryBeginSave !== 'undefined') {\r\n                this.onFontDictionaryBeginSave();\r\n            }\r\n            if (typeof this.annotationBeginSave !== 'undefined') {\r\n                this.onBeginAnnotationSave();\r\n            }\r\n            if (typeof this.sectionBeginSave !== 'undefined') {\r\n                this.onSectionBeginSave(writer);\r\n            }\r\n            if (typeof this.pageBeginDrawTemplate !== 'undefined') {\r\n                this.onTemplateBeginSave();\r\n            }\r\n            // }\r\n            if (this.Count > 0) {\r\n                this.saveItems(writer);\r\n            }\r\n            writer.write(this.suffix);\r\n            writer.write(Operators.newLine);\r\n        }\r\n    };\r\n    /**\r\n     * `Save dictionary items`.\r\n     * @private\r\n     */\r\n    PdfDictionary.prototype.saveItems = function (writer) {\r\n        writer.write(Operators.newLine);\r\n        var keys = this.primitiveItems.keys();\r\n        var values = this.primitiveItems.values();\r\n        for (var index = 0; index < keys.length; index++) {\r\n            var key = keys[index];\r\n            var name_1 = new PdfName(key);\r\n            name_1.save(writer);\r\n            writer.write(Operators.whiteSpace);\r\n            var resources = values[index];\r\n            resources.save(writer);\r\n            writer.write(Operators.newLine);\r\n        }\r\n    };\r\n    return PdfDictionary;\r\n}());\r\nexport { PdfDictionary };\r\nvar SaveSectionCollectionEventHandler = /** @class */ (function () {\r\n    /**\r\n     * New instance for `save section collection event handler` class.\r\n     * @private\r\n     */\r\n    function SaveSectionCollectionEventHandler(sender) {\r\n        this.sender = sender;\r\n    }\r\n    return SaveSectionCollectionEventHandler;\r\n}());\r\nexport { SaveSectionCollectionEventHandler };\r\nvar SaveDescendantFontEventHandler = /** @class */ (function () {\r\n    /**\r\n     * New instance for `save section collection event handler` class.\r\n     * @private\r\n     */\r\n    function SaveDescendantFontEventHandler(sender) {\r\n        this.sender = sender;\r\n    }\r\n    return SaveDescendantFontEventHandler;\r\n}());\r\nexport { SaveDescendantFontEventHandler };\r\nvar SaveFontDictionaryEventHandler = /** @class */ (function () {\r\n    /**\r\n     * New instance for `save section collection event handler` class.\r\n     * @private\r\n     */\r\n    function SaveFontDictionaryEventHandler(sender) {\r\n        this.sender = sender;\r\n    }\r\n    return SaveFontDictionaryEventHandler;\r\n}());\r\nexport { SaveFontDictionaryEventHandler };\r\nvar SaveAnnotationEventHandler = /** @class */ (function () {\r\n    /**\r\n     * New instance for `save annotation event handler` class.\r\n     * @private\r\n     */\r\n    function SaveAnnotationEventHandler(sender) {\r\n        this.sender = sender;\r\n    }\r\n    return SaveAnnotationEventHandler;\r\n}());\r\nexport { SaveAnnotationEventHandler };\r\nvar SaveSectionEventHandler = /** @class */ (function () {\r\n    // constructors\r\n    /**\r\n     * New instance for `save section event handler` class.\r\n     * @private\r\n     */\r\n    function SaveSectionEventHandler(sender, state) {\r\n        this.sender = sender;\r\n        this.state = state;\r\n    }\r\n    return SaveSectionEventHandler;\r\n}());\r\nexport { SaveSectionEventHandler };\r\n/**\r\n * SaveTemplateEventHandler class used to store information about template elements.\r\n * @private\r\n * @hidden\r\n */\r\nvar SaveTemplateEventHandler = /** @class */ (function () {\r\n    /**\r\n     * New instance for save section collection event handler class.\r\n     * @public\r\n     */\r\n    function SaveTemplateEventHandler(sender) {\r\n        this.sender = sender;\r\n    }\r\n    return SaveTemplateEventHandler;\r\n}());\r\nexport { SaveTemplateEventHandler };\r\n"]},"metadata":{},"sourceType":"module"}