{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\r\n * PdfBitmap.ts class for EJ2-PDF\r\n */\n\n\nimport { ImageDecoder } from './../../graphics/images/image-decoder';\nimport { ByteArray } from './../../graphics/images/byte-array';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfImage } from './pdf-image';\n/**\r\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\r\n * ```typescript\r\n * // create a new PDF document.\r\n * let document : PdfDocument = new PdfDocument();\r\n * // add a page to the document.\r\n * let page1 : PdfPage = document.pages.add();\r\n * // base64 string of an image\r\n * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\r\n * // load the image from the base64 string of original image.\r\n * let image : PdfBitmap = new PdfBitmap(imageString);\r\n * // draw the image\r\n * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\r\n * // save the document.\r\n * document.save('output.pdf');\r\n * // destroy the document\r\n * document.destroy();\r\n * ```\r\n */\n\nvar PdfBitmap =\n/** @class */\nfunction (_super) {\n  __extends(PdfBitmap, _super);\n  /**\r\n   * Create an instance for `PdfBitmap` class.\r\n   * @param encodedString Base64 string of an image.\r\n   * ```typescript\r\n   * // create a new PDF document.\r\n   * let document : PdfDocument = new PdfDocument();\r\n   * // add a page to the document.\r\n   * let page1 : PdfPage = document.pages.add();\r\n   * // base64 string of an image\r\n   * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\r\n   * //\r\n   * // load the image from the base64 string of original image.\r\n   * let image : PdfBitmap = new PdfBitmap(imageString);\r\n   * //\r\n   * // draw the image\r\n   * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\r\n   * // save the document.\r\n   * document.save('output.pdf');\r\n   * // destroy the document\r\n   * document.destroy();\r\n   * ```\r\n   */\n\n\n  function PdfBitmap(encodedString) {\n    var _this = _super.call(this) || this; //Fields\n\n    /**\r\n     * Specifies the `status` of an image.\r\n     * @default true.\r\n     * @hidden\r\n     * @private\r\n     */\n\n\n    _this.imageStatus = true;\n    /**\r\n     * Internal variable for accessing fields from `DictionryProperties` class.\r\n     * @hidden\r\n     * @private\r\n     */\n\n    _this.dictionaryProperties = new DictionaryProperties();\n\n    _this.loadImage(encodedString);\n\n    return _this;\n  }\n  /**\r\n   * `Load image`.\r\n   * @hidden\r\n   * @private\r\n   */\n\n\n  PdfBitmap.prototype.loadImage = function (encodedString) {\n    var task = this.initializeAsync(encodedString);\n  };\n  /**\r\n   * `Initialize` image parameters.\r\n   * @private\r\n   */\n\n\n  PdfBitmap.prototype.initializeAsync = function (encodedString) {\n    var byteArray = new ByteArray(encodedString.length);\n    byteArray.writeFromBase64String(encodedString);\n    this.decoder = new ImageDecoder(byteArray);\n    this.height = this.decoder.height;\n    this.width = this.decoder.width; // FrameCount = BitmapImageDecoder.FrameCount;\n\n    this.bitsPerComponent = this.decoder.bitsPerComponent;\n  };\n  /**\r\n   * `Saves` the image into stream.\r\n   * @private\r\n   */\n\n\n  PdfBitmap.prototype.save = function () {\n    this.imageStatus = true;\n    this.imageStream = this.decoder.getImageDictionary();\n  };\n\n  return PdfBitmap;\n}(PdfImage);\n\nexport { PdfBitmap };","map":{"version":3,"sources":["C:/Users/amase/Desktop/open_dsa/openDSA_dashboard/project/node_modules/@syncfusion/ej2-react-grids/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/pdf-bitmap.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","ImageDecoder","ByteArray","DictionaryProperties","PdfImage","PdfBitmap","_super","encodedString","_this","call","imageStatus","dictionaryProperties","loadImage","task","initializeAsync","byteArray","length","writeFromBase64String","decoder","height","width","bitsPerComponent","save","imageStream","getImageDictionary"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAF9E;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;AAaA;AACA;AACA;;;AACA,SAASI,YAAT,QAA6B,uCAA7B;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA,SAASC,oBAAT,QAAqC,gDAArC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,SAAS;AAAG;AAAe,UAAUC,MAAV,EAAkB;AAC7CnB,EAAAA,SAAS,CAACkB,SAAD,EAAYC,MAAZ,CAAT;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI,WAASD,SAAT,CAAmBE,aAAnB,EAAkC;AAC9B,QAAIC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAY,IAAZ,KAAqB,IAAjC,CAD8B,CAE9B;;AACA;AACR;AACA;AACA;AACA;AACA;;;AACQD,IAAAA,KAAK,CAACE,WAAN,GAAoB,IAApB;AACA;AACR;AACA;AACA;AACA;;AACQF,IAAAA,KAAK,CAACG,oBAAN,GAA6B,IAAIR,oBAAJ,EAA7B;;AACAK,IAAAA,KAAK,CAACI,SAAN,CAAgBL,aAAhB;;AACA,WAAOC,KAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIH,EAAAA,SAAS,CAACN,SAAV,CAAoBa,SAApB,GAAgC,UAAUL,aAAV,EAAyB;AACrD,QAAIM,IAAI,GAAG,KAAKC,eAAL,CAAqBP,aAArB,CAAX;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIF,EAAAA,SAAS,CAACN,SAAV,CAAoBe,eAApB,GAAsC,UAAUP,aAAV,EAAyB;AAC3D,QAAIQ,SAAS,GAAG,IAAIb,SAAJ,CAAcK,aAAa,CAACS,MAA5B,CAAhB;AACAD,IAAAA,SAAS,CAACE,qBAAV,CAAgCV,aAAhC;AACA,SAAKW,OAAL,GAAe,IAAIjB,YAAJ,CAAiBc,SAAjB,CAAf;AACA,SAAKI,MAAL,GAAc,KAAKD,OAAL,CAAaC,MAA3B;AACA,SAAKC,KAAL,GAAa,KAAKF,OAAL,CAAaE,KAA1B,CAL2D,CAM3D;;AACA,SAAKC,gBAAL,GAAwB,KAAKH,OAAL,CAAaG,gBAArC;AACH,GARD;AASA;AACJ;AACA;AACA;;;AACIhB,EAAAA,SAAS,CAACN,SAAV,CAAoBuB,IAApB,GAA2B,YAAY;AACnC,SAAKZ,WAAL,GAAmB,IAAnB;AACA,SAAKa,WAAL,GAAmB,KAAKL,OAAL,CAAaM,kBAAb,EAAnB;AACH,GAHD;;AAIA,SAAOnB,SAAP;AACH,CAzE8B,CAyE7BD,QAzE6B,CAA/B;;AA0EA,SAASC,SAAT","sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * PdfBitmap.ts class for EJ2-PDF\r\n */\r\nimport { ImageDecoder } from './../../graphics/images/image-decoder';\r\nimport { ByteArray } from './../../graphics/images/byte-array';\r\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\r\nimport { PdfImage } from './pdf-image';\r\n/**\r\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\r\n * ```typescript\r\n * // create a new PDF document.\r\n * let document : PdfDocument = new PdfDocument();\r\n * // add a page to the document.\r\n * let page1 : PdfPage = document.pages.add();\r\n * // base64 string of an image\r\n * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\r\n * // load the image from the base64 string of original image.\r\n * let image : PdfBitmap = new PdfBitmap(imageString);\r\n * // draw the image\r\n * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\r\n * // save the document.\r\n * document.save('output.pdf');\r\n * // destroy the document\r\n * document.destroy();\r\n * ```\r\n */\r\nvar PdfBitmap = /** @class */ (function (_super) {\r\n    __extends(PdfBitmap, _super);\r\n    /**\r\n     * Create an instance for `PdfBitmap` class.\r\n     * @param encodedString Base64 string of an image.\r\n     * ```typescript\r\n     * // create a new PDF document.\r\n     * let document : PdfDocument = new PdfDocument();\r\n     * // add a page to the document.\r\n     * let page1 : PdfPage = document.pages.add();\r\n     * // base64 string of an image\r\n     * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\r\n     * //\r\n     * // load the image from the base64 string of original image.\r\n     * let image : PdfBitmap = new PdfBitmap(imageString);\r\n     * //\r\n     * // draw the image\r\n     * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\r\n     * // save the document.\r\n     * document.save('output.pdf');\r\n     * // destroy the document\r\n     * document.destroy();\r\n     * ```\r\n     */\r\n    function PdfBitmap(encodedString) {\r\n        var _this = _super.call(this) || this;\r\n        //Fields\r\n        /**\r\n         * Specifies the `status` of an image.\r\n         * @default true.\r\n         * @hidden\r\n         * @private\r\n         */\r\n        _this.imageStatus = true;\r\n        /**\r\n         * Internal variable for accessing fields from `DictionryProperties` class.\r\n         * @hidden\r\n         * @private\r\n         */\r\n        _this.dictionaryProperties = new DictionaryProperties();\r\n        _this.loadImage(encodedString);\r\n        return _this;\r\n    }\r\n    /**\r\n     * `Load image`.\r\n     * @hidden\r\n     * @private\r\n     */\r\n    PdfBitmap.prototype.loadImage = function (encodedString) {\r\n        var task = this.initializeAsync(encodedString);\r\n    };\r\n    /**\r\n     * `Initialize` image parameters.\r\n     * @private\r\n     */\r\n    PdfBitmap.prototype.initializeAsync = function (encodedString) {\r\n        var byteArray = new ByteArray(encodedString.length);\r\n        byteArray.writeFromBase64String(encodedString);\r\n        this.decoder = new ImageDecoder(byteArray);\r\n        this.height = this.decoder.height;\r\n        this.width = this.decoder.width;\r\n        // FrameCount = BitmapImageDecoder.FrameCount;\r\n        this.bitsPerComponent = this.decoder.bitsPerComponent;\r\n    };\r\n    /**\r\n     * `Saves` the image into stream.\r\n     * @private\r\n     */\r\n    PdfBitmap.prototype.save = function () {\r\n        this.imageStatus = true;\r\n        this.imageStream = this.decoder.getImageDictionary();\r\n    };\r\n    return PdfBitmap;\r\n}(PdfImage));\r\nexport { PdfBitmap };\r\n"]},"metadata":{},"sourceType":"module"}