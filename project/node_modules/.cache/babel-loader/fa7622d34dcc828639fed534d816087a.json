{"ast":null,"code":"import { PdfColor } from './../graphics/pdf-color';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfDictionary, SaveAnnotationEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfString } from './../primitives/pdf-string';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfSolidBrush } from './../graphics/brushes/pdf-solid-brush';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStringFormat } from './../graphics/fonts/pdf-string-format';\nimport { PdfTextAlignment } from './../graphics/enum';\n/**\r\n * `PdfAnnotation` class represents the base class for annotation objects.\r\n * @private\r\n */\n\nvar PdfAnnotation =\n/** @class */\nfunction () {\n  function PdfAnnotation(arg1) {\n    // Fields\n\n    /**\r\n     * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\r\n     * @private\r\n     */\n    this.dictionaryProperties = new DictionaryProperties();\n    /**\r\n     * `Color` of the annotation\r\n     * @private\r\n     */\n\n    this.pdfColor = new PdfColor(255, 255, 255);\n    /**\r\n     * `Bounds` of the annotation.\r\n     * @private\r\n     */\n\n    this.rectangle = new RectangleF(0, 0, 0, 0);\n    /**\r\n     * Parent `page` of the annotation.\r\n     * @private\r\n     */\n\n    this.pdfPage = null;\n    /**\r\n     * `Brush of the text` of the annotation.\r\n     * @default new PdfSolidBrush(new PdfColor(0, 0, 0))\r\n     * @private\r\n     */\n\n    this.textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n    /**\r\n     * `Font of the text` of the annotation.\r\n     * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)\r\n     * @private\r\n     */\n\n    this.textFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 10);\n    /**\r\n     * `StringFormat of the text` of the annotation.\r\n     * @default new PdfStringFormat(PdfTextAlignment.Left)\r\n     * @private\r\n     */\n\n    this.format = new PdfStringFormat(PdfTextAlignment.Left);\n    /**\r\n     * `Text` of the annotation.\r\n     * @private\r\n     */\n\n    this.content = '';\n    /**\r\n     * Internal variable to store `dictionary`.\r\n     * @private\r\n     */\n\n    this.pdfDictionary = new PdfDictionary();\n    /**\r\n     * To specifying the `Inner color` with which to fill the annotation\r\n     * @private\r\n     */\n\n    this.internalColor = new PdfColor();\n    /**\r\n     * `opacity or darkness` of the annotation.\r\n     * @private\r\n     * @default 1.0\r\n     */\n\n    this.darkness = 1.0;\n\n    if (typeof arg1 === 'undefined') {\n      this.initialize();\n    } else {\n      this.initialize();\n      this.bounds = arg1;\n    }\n  }\n\n  Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n    // Properties\n\n    /**\r\n     * `Color` of the annotation\r\n     * @private\r\n     */\n    get: function () {\n      return this.pdfColor;\n    },\n    set: function (value) {\n      this.pdfColor = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n    /**\r\n     * To specifying the `Inner color` with which to fill the annotation\r\n     * @private\r\n     */\n    get: function () {\n      return this.internalColor;\n    },\n    set: function (value) {\n      this.internalColor = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n    /**\r\n     * `bounds` of the annotation.\r\n     * @private\r\n     */\n    get: function () {\n      return this.rectangle;\n    },\n    set: function (value) {\n      this.rectangle = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"page\", {\n    /**\r\n     * Parent `page` of the annotation.\r\n     * @private\r\n     */\n    get: function () {\n      return this.pdfPage;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"font\", {\n    /**\r\n     * To specifying the `Font of the text` in the annotation.\r\n     * @private\r\n     */\n    get: function () {\n      return this.textFont;\n    },\n    set: function (value) {\n      this.textFont = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"stringFormat\", {\n    /**\r\n     * To specifying the `StringFormat of the text` in the annotation.\r\n     * @private\r\n     */\n    get: function () {\n      return this.format;\n    },\n    set: function (value) {\n      this.format = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"brush\", {\n    /**\r\n     * To specifying the `Brush of the text` in the annotation.\r\n     * @private\r\n     */\n    get: function () {\n      return this.textBrush;\n    },\n    set: function (value) {\n      this.textBrush = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n    /**\r\n     * `Text` of the annotation.\r\n     * @private\r\n     */\n    get: function () {\n      return this.content;\n    },\n    set: function (value) {\n      this.content = value;\n      this.dictionary.items.setValue(this.dictionaryProperties.contents, new PdfString(this.content));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"dictionary\", {\n    /**\r\n     * Internal variable to store `dictionary`.\r\n     * @hidden\r\n     */\n    get: function () {\n      return this.pdfDictionary;\n    },\n    set: function (value) {\n      this.pdfDictionary = value;\n    },\n    enumerable: true,\n    configurable: true\n  }); // Implementation\n\n  /**\r\n   * `Initialize` the annotation event handler and specifies the type of the annotation.\r\n   * @private\r\n   */\n\n  PdfAnnotation.prototype.initialize = function () {\n    this.pdfDictionary.annotationBeginSave = new SaveAnnotationEventHandler(this);\n    this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.annot));\n  };\n  /**\r\n   * Sets related `page` of the annotation.\r\n   * @private\r\n   */\n\n\n  PdfAnnotation.prototype.setPage = function (page) {\n    this.pdfPage = page;\n    this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new PdfReferenceHolder(this.pdfPage));\n  };\n  /**\r\n   * Handles the `BeginSave` event of the Dictionary.\r\n   * @private\r\n   */\n\n\n  PdfAnnotation.prototype.beginSave = function () {\n    this.save();\n  };\n  /**\r\n   * `Saves` an annotation.\r\n   * @private\r\n   */\n\n  /* tslint:disable */\n\n\n  PdfAnnotation.prototype.save = function () {\n    var nativeRectangle = new RectangleF(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n    var section = this.pdfPage.section;\n    var initialHeight = nativeRectangle.height;\n    var tempLoacation = section.pointToNativePdf(this.page, new PointF(nativeRectangle.x, nativeRectangle.y));\n    nativeRectangle.x = tempLoacation.x;\n    nativeRectangle.width = tempLoacation.x + nativeRectangle.width;\n    nativeRectangle.y = tempLoacation.y - this.page.document.pageSettings.margins.top;\n    nativeRectangle.height = nativeRectangle.y - initialHeight;\n    this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, PdfArray.fromRectangle(nativeRectangle));\n    this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(this.darkness));\n  };\n\n  Object.defineProperty(PdfAnnotation.prototype, \"element\", {\n    /* tslint:enable */\n    // IPdfWrapper Members\n\n    /**\r\n     * Gets the `element`.\r\n     * @private\r\n     */\n    get: function () {\n      return this.pdfDictionary;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfAnnotation;\n}();\n\nexport { PdfAnnotation };","map":{"version":3,"sources":["C:/Users/x/Desktop/openDSA/openDSA_dashboard/project/node_modules/@syncfusion/ej2-react-charts/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/annotation.js"],"names":["PdfColor","RectangleF","PointF","PdfDictionary","SaveAnnotationEventHandler","PdfArray","PdfNumber","PdfReferenceHolder","PdfString","DictionaryProperties","PdfName","PdfSolidBrush","PdfStandardFont","PdfFontFamily","PdfStringFormat","PdfTextAlignment","PdfAnnotation","arg1","dictionaryProperties","pdfColor","rectangle","pdfPage","textBrush","textFont","TimesRoman","format","Left","content","pdfDictionary","internalColor","darkness","initialize","bounds","Object","defineProperty","prototype","get","set","value","enumerable","configurable","dictionary","items","setValue","contents","annotationBeginSave","type","annot","setPage","page","p","beginSave","save","nativeRectangle","x","y","width","height","section","initialHeight","tempLoacation","pointToNativePdf","document","pageSettings","margins","top","rect","fromRectangle","ca"],"mappings":"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","sourcesContent":["import { PdfColor } from './../graphics/pdf-color';\r\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\r\nimport { PdfDictionary, SaveAnnotationEventHandler } from './../primitives/pdf-dictionary';\r\nimport { PdfArray } from './../primitives/pdf-array';\r\nimport { PdfNumber } from './../primitives/pdf-number';\r\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\r\nimport { PdfString } from './../primitives/pdf-string';\r\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\r\nimport { PdfName } from './../primitives/pdf-name';\r\nimport { PdfSolidBrush } from './../graphics/brushes/pdf-solid-brush';\r\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\r\nimport { PdfFontFamily } from './../graphics/fonts/enum';\r\nimport { PdfStringFormat } from './../graphics/fonts/pdf-string-format';\r\nimport { PdfTextAlignment } from './../graphics/enum';\r\n/**\r\n * `PdfAnnotation` class represents the base class for annotation objects.\r\n * @private\r\n */\r\nvar PdfAnnotation = /** @class */ (function () {\r\n    function PdfAnnotation(arg1) {\r\n        // Fields\r\n        /**\r\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\r\n         * @private\r\n         */\r\n        this.dictionaryProperties = new DictionaryProperties();\r\n        /**\r\n         * `Color` of the annotation\r\n         * @private\r\n         */\r\n        this.pdfColor = new PdfColor(255, 255, 255);\r\n        /**\r\n         * `Bounds` of the annotation.\r\n         * @private\r\n         */\r\n        this.rectangle = new RectangleF(0, 0, 0, 0);\r\n        /**\r\n         * Parent `page` of the annotation.\r\n         * @private\r\n         */\r\n        this.pdfPage = null;\r\n        /**\r\n         * `Brush of the text` of the annotation.\r\n         * @default new PdfSolidBrush(new PdfColor(0, 0, 0))\r\n         * @private\r\n         */\r\n        this.textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\r\n        /**\r\n         * `Font of the text` of the annotation.\r\n         * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)\r\n         * @private\r\n         */\r\n        this.textFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 10);\r\n        /**\r\n         * `StringFormat of the text` of the annotation.\r\n         * @default new PdfStringFormat(PdfTextAlignment.Left)\r\n         * @private\r\n         */\r\n        this.format = new PdfStringFormat(PdfTextAlignment.Left);\r\n        /**\r\n         * `Text` of the annotation.\r\n         * @private\r\n         */\r\n        this.content = '';\r\n        /**\r\n         * Internal variable to store `dictionary`.\r\n         * @private\r\n         */\r\n        this.pdfDictionary = new PdfDictionary();\r\n        /**\r\n         * To specifying the `Inner color` with which to fill the annotation\r\n         * @private\r\n         */\r\n        this.internalColor = new PdfColor();\r\n        /**\r\n         * `opacity or darkness` of the annotation.\r\n         * @private\r\n         * @default 1.0\r\n         */\r\n        this.darkness = 1.0;\r\n        if (typeof arg1 === 'undefined') {\r\n            this.initialize();\r\n        }\r\n        else {\r\n            this.initialize();\r\n            this.bounds = arg1;\r\n        }\r\n    }\r\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\r\n        // Properties\r\n        /**\r\n         * `Color` of the annotation\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.pdfColor;\r\n        },\r\n        set: function (value) {\r\n            this.pdfColor = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\r\n        /**\r\n         * To specifying the `Inner color` with which to fill the annotation\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.internalColor;\r\n        },\r\n        set: function (value) {\r\n            this.internalColor = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\r\n        /**\r\n         * `bounds` of the annotation.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.rectangle;\r\n        },\r\n        set: function (value) {\r\n            this.rectangle = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfAnnotation.prototype, \"page\", {\r\n        /**\r\n         * Parent `page` of the annotation.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.pdfPage;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfAnnotation.prototype, \"font\", {\r\n        /**\r\n         * To specifying the `Font of the text` in the annotation.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.textFont;\r\n        },\r\n        set: function (value) {\r\n            this.textFont = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfAnnotation.prototype, \"stringFormat\", {\r\n        /**\r\n         * To specifying the `StringFormat of the text` in the annotation.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.format;\r\n        },\r\n        set: function (value) {\r\n            this.format = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfAnnotation.prototype, \"brush\", {\r\n        /**\r\n         * To specifying the `Brush of the text` in the annotation.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.textBrush;\r\n        },\r\n        set: function (value) {\r\n            this.textBrush = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\r\n        /**\r\n         * `Text` of the annotation.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.content;\r\n        },\r\n        set: function (value) {\r\n            this.content = value;\r\n            this.dictionary.items.setValue(this.dictionaryProperties.contents, new PdfString(this.content));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfAnnotation.prototype, \"dictionary\", {\r\n        /**\r\n         * Internal variable to store `dictionary`.\r\n         * @hidden\r\n         */\r\n        get: function () {\r\n            return this.pdfDictionary;\r\n        },\r\n        set: function (value) {\r\n            this.pdfDictionary = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    // Implementation\r\n    /**\r\n     * `Initialize` the annotation event handler and specifies the type of the annotation.\r\n     * @private\r\n     */\r\n    PdfAnnotation.prototype.initialize = function () {\r\n        this.pdfDictionary.annotationBeginSave = new SaveAnnotationEventHandler(this);\r\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.annot));\r\n    };\r\n    /**\r\n     * Sets related `page` of the annotation.\r\n     * @private\r\n     */\r\n    PdfAnnotation.prototype.setPage = function (page) {\r\n        this.pdfPage = page;\r\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new PdfReferenceHolder(this.pdfPage));\r\n    };\r\n    /**\r\n     * Handles the `BeginSave` event of the Dictionary.\r\n     * @private\r\n     */\r\n    PdfAnnotation.prototype.beginSave = function () {\r\n        this.save();\r\n    };\r\n    /**\r\n     * `Saves` an annotation.\r\n     * @private\r\n     */\r\n    /* tslint:disable */\r\n    PdfAnnotation.prototype.save = function () {\r\n        var nativeRectangle = new RectangleF(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\r\n        var section = this.pdfPage.section;\r\n        var initialHeight = nativeRectangle.height;\r\n        var tempLoacation = section.pointToNativePdf(this.page, new PointF(nativeRectangle.x, nativeRectangle.y));\r\n        nativeRectangle.x = tempLoacation.x;\r\n        nativeRectangle.width = tempLoacation.x + nativeRectangle.width;\r\n        nativeRectangle.y = (tempLoacation.y - this.page.document.pageSettings.margins.top);\r\n        nativeRectangle.height = nativeRectangle.y - initialHeight;\r\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, PdfArray.fromRectangle(nativeRectangle));\r\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(this.darkness));\r\n    };\r\n    Object.defineProperty(PdfAnnotation.prototype, \"element\", {\r\n        /* tslint:enable */\r\n        // IPdfWrapper Members\r\n        /**\r\n         * Gets the `element`.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.pdfDictionary;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PdfAnnotation;\r\n}());\r\nexport { PdfAnnotation };\r\n"]},"metadata":{},"sourceType":"module"}