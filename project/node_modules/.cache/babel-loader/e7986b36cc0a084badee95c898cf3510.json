{"ast":null,"code":"/**\r\n * Represents the `collection of pages in a section`.\r\n * @private\r\n */\nvar PdfSectionPageCollection =\n/** @class */\nfunction () {\n  // Constructors\n\n  /**\r\n   * Initializes a new instance of the `PdfSectionPageCollection` class.\r\n   * @private\r\n   */\n  function PdfSectionPageCollection(section) {\n    //  Fields\n\n    /**\r\n     * @hidden\r\n     * @private\r\n     */\n    this.pdfSection = null;\n\n    if (section == null) {\n      throw Error('ArgumentNullException(\"section\")');\n    }\n\n    this.section = section;\n  }\n\n  Object.defineProperty(PdfSectionPageCollection.prototype, \"section\", {\n    // Properties\n\n    /**\r\n     * Gets the `PdfPage` at the specified index.\r\n     * @private\r\n     */\n    get: function () {\n      return this.pdfSection;\n    },\n    set: function (value) {\n      this.pdfSection = value;\n    },\n    enumerable: true,\n    configurable: true\n  }); // Public Methods\n\n  /**\r\n   * `Determines` whether the specified page is within the collection.\r\n   * @private\r\n   */\n\n  PdfSectionPageCollection.prototype.contains = function (page) {\n    return this.section.contains(page);\n  };\n  /**\r\n   * `Removes` the specified page from collection.\r\n   * @private\r\n   */\n\n\n  PdfSectionPageCollection.prototype.remove = function (page) {\n    this.section.remove(page);\n  };\n  /**\r\n   * `Adds` a new page from collection.\r\n   * @private\r\n   */\n\n\n  PdfSectionPageCollection.prototype.add = function () {\n    return this.section.add();\n  };\n\n  return PdfSectionPageCollection;\n}();\n\nexport { PdfSectionPageCollection };","map":{"version":3,"sources":["C:/Users/x/Desktop/openDSA/openDSA_dashboard/project/node_modules/@syncfusion/ej2-react-charts/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section-page-collection.js"],"names":["PdfSectionPageCollection","section","pdfSection","Error","Object","defineProperty","prototype","get","set","value","enumerable","configurable","contains","page","remove","add"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,wBAAwB;AAAG;AAAe,YAAY;AACtD;;AACA;AACJ;AACA;AACA;AACI,WAASA,wBAAT,CAAkCC,OAAlC,EAA2C;AACvC;;AACA;AACR;AACA;AACA;AACQ,SAAKC,UAAL,GAAkB,IAAlB;;AACA,QAAID,OAAO,IAAI,IAAf,EAAqB;AACjB,YAAME,KAAK,CAAC,kCAAD,CAAX;AACH;;AACD,SAAKF,OAAL,GAAeA,OAAf;AACH;;AACDG,EAAAA,MAAM,CAACC,cAAP,CAAsBL,wBAAwB,CAACM,SAA/C,EAA0D,SAA1D,EAAqE;AACjE;;AACA;AACR;AACA;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKL,UAAZ;AACH,KARgE;AASjEM,IAAAA,GAAG,EAAE,UAAUC,KAAV,EAAiB;AAClB,WAAKP,UAAL,GAAkBO,KAAlB;AACH,KAXgE;AAYjEC,IAAAA,UAAU,EAAE,IAZqD;AAajEC,IAAAA,YAAY,EAAE;AAbmD,GAArE,EAlBsD,CAiCtD;;AACA;AACJ;AACA;AACA;;AACIX,EAAAA,wBAAwB,CAACM,SAAzB,CAAmCM,QAAnC,GAA8C,UAAUC,IAAV,EAAgB;AAC1D,WAAO,KAAKZ,OAAL,CAAaW,QAAb,CAAsBC,IAAtB,CAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIb,EAAAA,wBAAwB,CAACM,SAAzB,CAAmCQ,MAAnC,GAA4C,UAAUD,IAAV,EAAgB;AACxD,SAAKZ,OAAL,CAAaa,MAAb,CAAoBD,IAApB;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACIb,EAAAA,wBAAwB,CAACM,SAAzB,CAAmCS,GAAnC,GAAyC,YAAY;AACjD,WAAO,KAAKd,OAAL,CAAac,GAAb,EAAP;AACH,GAFD;;AAGA,SAAOf,wBAAP;AACH,CAxD6C,EAA9C;;AAyDA,SAASA,wBAAT","sourcesContent":["/**\r\n * Represents the `collection of pages in a section`.\r\n * @private\r\n */\r\nvar PdfSectionPageCollection = /** @class */ (function () {\r\n    // Constructors\r\n    /**\r\n     * Initializes a new instance of the `PdfSectionPageCollection` class.\r\n     * @private\r\n     */\r\n    function PdfSectionPageCollection(section) {\r\n        //  Fields\r\n        /**\r\n         * @hidden\r\n         * @private\r\n         */\r\n        this.pdfSection = null;\r\n        if (section == null) {\r\n            throw Error('ArgumentNullException(\"section\")');\r\n        }\r\n        this.section = section;\r\n    }\r\n    Object.defineProperty(PdfSectionPageCollection.prototype, \"section\", {\r\n        // Properties\r\n        /**\r\n         * Gets the `PdfPage` at the specified index.\r\n         * @private\r\n         */\r\n        get: function () {\r\n            return this.pdfSection;\r\n        },\r\n        set: function (value) {\r\n            this.pdfSection = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    // Public Methods\r\n    /**\r\n     * `Determines` whether the specified page is within the collection.\r\n     * @private\r\n     */\r\n    PdfSectionPageCollection.prototype.contains = function (page) {\r\n        return this.section.contains(page);\r\n    };\r\n    /**\r\n     * `Removes` the specified page from collection.\r\n     * @private\r\n     */\r\n    PdfSectionPageCollection.prototype.remove = function (page) {\r\n        this.section.remove(page);\r\n    };\r\n    /**\r\n     * `Adds` a new page from collection.\r\n     * @private\r\n     */\r\n    PdfSectionPageCollection.prototype.add = function () {\r\n        return this.section.add();\r\n    };\r\n    return PdfSectionPageCollection;\r\n}());\r\nexport { PdfSectionPageCollection };\r\n"]},"metadata":{},"sourceType":"module"}