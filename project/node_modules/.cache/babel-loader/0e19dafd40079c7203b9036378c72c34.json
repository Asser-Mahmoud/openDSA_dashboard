{"ast":null,"code":"import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { iterateArrayOrObject, isGroupAdaptive } from '../base/util';\nimport * as events from '../base/constant';\n/**\r\n * The `ShowHide` module is used to control column visibility.\r\n */\n\nvar ShowHide =\n/** @class */\nfunction () {\n  /**\r\n   * Constructor for the show hide module.\r\n   *\r\n   * @param {IGrid} parent - specifies the IGrid\r\n   * @hidden\r\n   */\n  function ShowHide(parent) {\n    this.parent = parent;\n  }\n  /**\r\n   * Shows a column by column name.\r\n   *\r\n   * @param  {string|string[]} columnName - Defines a single or collection of column names to show.\r\n   * @param  {string} showBy - Defines the column key either as field name or header text.\r\n   * @returns {void}\r\n   */\n\n\n  ShowHide.prototype.show = function (columnName, showBy) {\n    var keys = this.getToggleFields(columnName);\n    var columns = this.getColumns(keys, showBy);\n    this.parent.notify(events.tooltipDestroy, {\n      module: 'edit'\n    });\n\n    for (var i = 0; i < columns.length; i++) {\n      columns[i].visible = true;\n    }\n\n    this.setVisible(columns);\n  };\n  /**\r\n   * Hides a column by column name.\r\n   *\r\n   * @param  {string|string[]} columnName - Defines a single or collection of column names to hide.\r\n   * @param  {string} hideBy - Defines the column key either as field name or header text.\r\n   * @returns {void}\r\n   */\n\n\n  ShowHide.prototype.hide = function (columnName, hideBy) {\n    var keys = this.getToggleFields(columnName);\n    var columns = this.getColumns(keys, hideBy);\n    this.parent.notify(events.tooltipDestroy, {\n      module: 'edit'\n    });\n\n    for (var i = 0; i < columns.length; i++) {\n      columns[i].visible = false;\n    }\n\n    this.setVisible(columns);\n  };\n\n  ShowHide.prototype.getToggleFields = function (key) {\n    var finalized = [];\n\n    if (typeof key === 'string') {\n      finalized = [key];\n    } else {\n      finalized = key;\n    }\n\n    return finalized;\n  };\n\n  ShowHide.prototype.getColumns = function (keys, getKeyBy) {\n    var _this = this;\n\n    var columns = iterateArrayOrObject(keys, function (key) {\n      return iterateArrayOrObject(_this.parent.columnModel, function (item) {\n        if (item[getKeyBy] === key) {\n          return item;\n        }\n\n        return undefined;\n      })[0];\n    });\n    return columns;\n  };\n  /**\r\n   * Shows or hides columns by given column collection.\r\n   *\r\n   * @private\r\n   * @param {Column[]} columns - Specifies the columns.\r\n   * @param {Column[]} changedStateColumns - specifies the changedStateColumns\r\n   * @returns {void}\r\n   */\n\n\n  ShowHide.prototype.setVisible = function (columns, changedStateColumns) {\n    var _this = this;\n\n    if (changedStateColumns === void 0) {\n      changedStateColumns = [];\n    }\n\n    changedStateColumns = changedStateColumns.length > 0 ? changedStateColumns : columns;\n    var args = {\n      requestType: 'columnstate',\n      cancel: false,\n      columns: changedStateColumns\n    };\n    var cancel = 'cancel';\n    this.parent.trigger(events.actionBegin, args, function (showHideArgs) {\n      var currentViewCols = _this.parent.getColumns();\n\n      columns = isNullOrUndefined(columns) ? currentViewCols : columns;\n\n      if (showHideArgs[cancel]) {\n        _this.parent.notify(events.resetColumns, {\n          showHideArgs: showHideArgs\n        });\n\n        if (columns.length > 0) {\n          columns[0].visible = true;\n        }\n\n        return;\n      }\n\n      if (isGroupAdaptive(_this.parent)) {\n        _this.parent.contentModule.emptyVcRows();\n      }\n\n      if (_this.parent.allowSelection && _this.parent.getSelectedRecords().length && !_this.parent.selectionSettings.persistSelection) {\n        _this.parent.clearSelection();\n      }\n\n      if (_this.parent.enableColumnVirtualization) {\n        var colsInCurrentView = columns.filter(function (col1) {\n          return currentViewCols.some(function (col2) {\n            return col1.field === col2.field;\n          });\n        });\n\n        if (colsInCurrentView.length) {\n          _this.parent.notify(events.columnVisibilityChanged, columns);\n        }\n      } else {\n        _this.parent.notify(events.columnVisibilityChanged, columns);\n      }\n\n      var params = {\n        requestType: 'columnstate',\n        columns: changedStateColumns\n      };\n\n      _this.parent.trigger(events.actionComplete, params);\n\n      if (_this.parent.columnQueryMode !== 'All') {\n        _this.parent.refresh();\n      }\n    });\n  };\n\n  return ShowHide;\n}();\n\nexport { ShowHide };","map":{"version":3,"sources":["C:/Users/amase/Desktop/open_dsa/openDSA_dashboard/project/node_modules/@syncfusion/ej2-react-grids/node_modules/@syncfusion/ej2-grids/src/grid/actions/show-hide.js"],"names":["isNullOrUndefined","iterateArrayOrObject","isGroupAdaptive","events","ShowHide","parent","prototype","show","columnName","showBy","keys","getToggleFields","columns","getColumns","notify","tooltipDestroy","module","i","length","visible","setVisible","hide","hideBy","key","finalized","getKeyBy","_this","columnModel","item","undefined","changedStateColumns","args","requestType","cancel","trigger","actionBegin","showHideArgs","currentViewCols","resetColumns","contentModule","emptyVcRows","allowSelection","getSelectedRecords","selectionSettings","persistSelection","clearSelection","enableColumnVirtualization","colsInCurrentView","filter","col1","some","col2","field","columnVisibilityChanged","params","actionComplete","columnQueryMode","refresh"],"mappings":"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","sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\r\nimport { iterateArrayOrObject, isGroupAdaptive } from '../base/util';\r\nimport * as events from '../base/constant';\r\n/**\r\n * The `ShowHide` module is used to control column visibility.\r\n */\r\nvar ShowHide = /** @class */ (function () {\r\n    /**\r\n     * Constructor for the show hide module.\r\n     *\r\n     * @param {IGrid} parent - specifies the IGrid\r\n     * @hidden\r\n     */\r\n    function ShowHide(parent) {\r\n        this.parent = parent;\r\n    }\r\n    /**\r\n     * Shows a column by column name.\r\n     *\r\n     * @param  {string|string[]} columnName - Defines a single or collection of column names to show.\r\n     * @param  {string} showBy - Defines the column key either as field name or header text.\r\n     * @returns {void}\r\n     */\r\n    ShowHide.prototype.show = function (columnName, showBy) {\r\n        var keys = this.getToggleFields(columnName);\r\n        var columns = this.getColumns(keys, showBy);\r\n        this.parent.notify(events.tooltipDestroy, { module: 'edit' });\r\n        for (var i = 0; i < columns.length; i++) {\r\n            columns[i].visible = true;\r\n        }\r\n        this.setVisible(columns);\r\n    };\r\n    /**\r\n     * Hides a column by column name.\r\n     *\r\n     * @param  {string|string[]} columnName - Defines a single or collection of column names to hide.\r\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\r\n     * @returns {void}\r\n     */\r\n    ShowHide.prototype.hide = function (columnName, hideBy) {\r\n        var keys = this.getToggleFields(columnName);\r\n        var columns = this.getColumns(keys, hideBy);\r\n        this.parent.notify(events.tooltipDestroy, { module: 'edit' });\r\n        for (var i = 0; i < columns.length; i++) {\r\n            columns[i].visible = false;\r\n        }\r\n        this.setVisible(columns);\r\n    };\r\n    ShowHide.prototype.getToggleFields = function (key) {\r\n        var finalized = [];\r\n        if (typeof key === 'string') {\r\n            finalized = [key];\r\n        }\r\n        else {\r\n            finalized = key;\r\n        }\r\n        return finalized;\r\n    };\r\n    ShowHide.prototype.getColumns = function (keys, getKeyBy) {\r\n        var _this = this;\r\n        var columns = iterateArrayOrObject(keys, function (key) {\r\n            return iterateArrayOrObject(_this.parent.columnModel, function (item) {\r\n                if (item[getKeyBy] === key) {\r\n                    return item;\r\n                }\r\n                return undefined;\r\n            })[0];\r\n        });\r\n        return columns;\r\n    };\r\n    /**\r\n     * Shows or hides columns by given column collection.\r\n     *\r\n     * @private\r\n     * @param {Column[]} columns - Specifies the columns.\r\n     * @param {Column[]} changedStateColumns - specifies the changedStateColumns\r\n     * @returns {void}\r\n     */\r\n    ShowHide.prototype.setVisible = function (columns, changedStateColumns) {\r\n        var _this = this;\r\n        if (changedStateColumns === void 0) { changedStateColumns = []; }\r\n        changedStateColumns = (changedStateColumns.length > 0) ? changedStateColumns : columns;\r\n        var args = {\r\n            requestType: 'columnstate',\r\n            cancel: false,\r\n            columns: changedStateColumns\r\n        };\r\n        var cancel = 'cancel';\r\n        this.parent.trigger(events.actionBegin, args, function (showHideArgs) {\r\n            var currentViewCols = _this.parent.getColumns();\r\n            columns = isNullOrUndefined(columns) ? currentViewCols : columns;\r\n            if (showHideArgs[cancel]) {\r\n                _this.parent.notify(events.resetColumns, { showHideArgs: showHideArgs });\r\n                if (columns.length > 0) {\r\n                    columns[0].visible = true;\r\n                }\r\n                return;\r\n            }\r\n            if (isGroupAdaptive(_this.parent)) {\r\n                _this.parent.contentModule.emptyVcRows();\r\n            }\r\n            if (_this.parent.allowSelection && _this.parent.getSelectedRecords().length &&\r\n                !_this.parent.selectionSettings.persistSelection) {\r\n                _this.parent.clearSelection();\r\n            }\r\n            if (_this.parent.enableColumnVirtualization) {\r\n                var colsInCurrentView = columns.filter(function (col1) { return (currentViewCols.some(function (col2) { return col1.field === col2.field; })); });\r\n                if (colsInCurrentView.length) {\r\n                    _this.parent.notify(events.columnVisibilityChanged, columns);\r\n                }\r\n            }\r\n            else {\r\n                _this.parent.notify(events.columnVisibilityChanged, columns);\r\n            }\r\n            var params = {\r\n                requestType: 'columnstate',\r\n                columns: changedStateColumns\r\n            };\r\n            _this.parent.trigger(events.actionComplete, params);\r\n            if (_this.parent.columnQueryMode !== 'All') {\r\n                _this.parent.refresh();\r\n            }\r\n        });\r\n    };\r\n    return ShowHide;\r\n}());\r\nexport { ShowHide };\r\n"]},"metadata":{},"sourceType":"module"}