{"ast":null,"code":"var instances = 'ej2_instances';\nvar uid = 0;\nvar isBlazorPlatform = false;\n/**\n * Function to check whether the platform is blazor or not.\n *\n * @returns {void} result\n * @private\n */\n\nexport function disableBlazorMode() {\n  isBlazorPlatform = false;\n}\n/**\n * Create Instance from constructor function with desired parameters.\n *\n * @param {Function} classFunction - Class function to which need to create instance\n * @param {any[]} params - Parameters need to passed while creating instance\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\nexport function createInstance(classFunction, params) {\n  var arrayParam = params;\n  arrayParam.unshift(undefined);\n  return new (Function.prototype.bind.apply(classFunction, arrayParam))();\n}\n/**\n * To run a callback function immediately after the browser has completed other operations.\n *\n * @param {Function} handler - callback function to be triggered.\n * @returns {Function} ?\n * @private\n */\n\nexport function setImmediate(handler) {\n  var unbind; // eslint-disable-next-line\n\n  var num = new Uint16Array(5);\n  var intCrypto = window.msCrypto || window.crypto;\n  intCrypto.getRandomValues(num);\n  var secret = 'ej2' + combineArray(num); // eslint-disable-next-line\n\n  var messageHandler = function (event) {\n    if (event.source === window && typeof event.data === 'string' && event.data.length <= 32 && event.data === secret) {\n      handler();\n      unbind();\n    }\n  };\n\n  window.addEventListener('message', messageHandler, false);\n  window.postMessage(secret, '*');\n  return unbind = function () {\n    window.removeEventListener('message', messageHandler);\n    handler = messageHandler = secret = undefined;\n  };\n}\n/**\n * To get nameSpace value from the desired object.\n *\n * @param {string} nameSpace - String value to the get the inner object\n * @param {any} obj - Object to get the inner object value.\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\nexport function getValue(nameSpace, obj) {\n  // eslint-disable-next-line\n  var value = obj;\n  var splits = nameSpace.replace(/\\[/g, '.').replace(/\\]/g, '').split('.');\n\n  for (var i = 0; i < splits.length && !isUndefined(value); i++) {\n    value = value[splits[parseInt(i.toString(), 10)]];\n  }\n\n  return value;\n}\n/**\n * To set value for the nameSpace in desired object.\n *\n * @param {string} nameSpace - String value to the get the inner object\n * @param {any} value - Value that you need to set.\n * @param {any} obj - Object to get the inner object value.\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\nexport function setValue(nameSpace, value, obj) {\n  var keys = nameSpace.replace(/\\[/g, '.').replace(/\\]/g, '').split('.'); // eslint-disable-next-line\n\n  var start = obj || {}; // eslint-disable-next-line\n\n  var fromObj = start;\n  var i;\n  var length = keys.length;\n  var key;\n\n  for (i = 0; i < length; i++) {\n    key = keys[parseInt(i.toString(), 10)];\n\n    if (i + 1 === length) {\n      fromObj[\"\" + key] = value === undefined ? {} : value;\n    } else if (isNullOrUndefined(fromObj[\"\" + key])) {\n      fromObj[\"\" + key] = {};\n    }\n\n    fromObj = fromObj[\"\" + key];\n  }\n\n  return start;\n}\n/**\n * Delete an item from Object\n *\n * @param {any} obj - Object in which we need to delete an item.\n * @param {string} key - String value to the get the inner object\n * @returns {void} ?\n * @private\n */\n// eslint-disable-next-line\n\nexport function deleteObject(obj, key) {\n  delete obj[\"\" + key];\n}\n/**\n *@private\n */\n// eslint-disable-next-line\n\nexport var containerObject = typeof window !== 'undefined' ? window : {};\n/**\n * Check weather the given argument is only object.\n *\n * @param {any} obj - Object which is need to check.\n * @returns {boolean} ?\n * @private\n */\n// eslint-disable-next-line\n\nexport function isObject(obj) {\n  var objCon = {};\n  return !isNullOrUndefined(obj) && obj.constructor === objCon.constructor;\n}\n/**\n * To get enum value by giving the string.\n *\n * @param {any} enumObject - Enum object.\n * @param {string} enumValue - Enum value to be searched\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\nexport function getEnumValue(enumObject, enumValue) {\n  // eslint-disable-next-line\n  return enumObject[enumValue];\n}\n/**\n * Merge the source object into destination object.\n *\n * @param {any} source - source object which is going to merge with destination object\n * @param {any} destination - object need to be merged\n * @returns {void} ?\n * @private\n */\n\nexport function merge(source, destination) {\n  if (!isNullOrUndefined(destination)) {\n    var temrObj = source;\n    var tempProp = destination;\n    var keys = Object.keys(destination);\n    var deepmerge = 'deepMerge';\n\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n      var key = keys_1[_i];\n\n      if (!isNullOrUndefined(temrObj[\"\" + deepmerge]) && temrObj[\"\" + deepmerge].indexOf(key) !== -1 && (isObject(tempProp[\"\" + key]) || Array.isArray(tempProp[\"\" + key]))) {\n        extend(temrObj[\"\" + key], temrObj[\"\" + key], tempProp[\"\" + key], true);\n      } else {\n        temrObj[\"\" + key] = tempProp[\"\" + key];\n      }\n    }\n  }\n}\n/**\n * Extend the two object with newer one.\n *\n * @param {any} copied - Resultant object after merged\n * @param {Object} first - First object need to merge\n * @param {Object} second - Second object need to merge\n * @param {boolean} deep ?\n * @returns {Object} ?\n * @private\n */\n\nexport function extend(copied, first, second, deep) {\n  var result = copied && typeof copied === 'object' ? copied : {};\n  var length = arguments.length;\n\n  if (deep) {\n    length = length - 1;\n  }\n\n  var _loop_1 = function (i) {\n    // eslint-disable-next-line\n    if (!arguments_1[i]) {\n      return \"continue\";\n    } // eslint-disable-next-line\n\n\n    var obj1 = arguments_1[i];\n    Object.keys(obj1).forEach(function (key) {\n      var src = result[\"\" + key];\n      var copy = obj1[\"\" + key];\n      var clone;\n      var isArrayChanged = Array.isArray(copy) && Array.isArray(src) && copy.length !== src.length; // eslint-disable-next-line\n\n      var blazorEventExtend = isBlazor() ? !(src instanceof Event) && !isArrayChanged : true;\n\n      if (deep && blazorEventExtend && (isObject(copy) || Array.isArray(copy))) {\n        if (isObject(copy)) {\n          clone = src ? src : {}; // eslint-disable-next-line\n\n          if (Array.isArray(clone) && clone.hasOwnProperty('isComplexArray')) {\n            extend(clone, {}, copy, deep);\n          } else {\n            result[\"\" + key] = extend(clone, {}, copy, deep);\n          }\n        } else {\n          /* istanbul ignore next */\n          clone = isBlazor() ? src && Object.keys(copy).length : src ? src : []; // eslint-disable-next-line\n\n          result[\"\" + key] = extend([], clone, copy, clone && clone.length || copy && copy.length);\n        }\n      } else {\n        result[\"\" + key] = copy;\n      }\n    });\n  };\n\n  var arguments_1 = arguments;\n\n  for (var i = 1; i < length; i++) {\n    _loop_1(i);\n  }\n\n  return result;\n}\n/**\n * To check whether the object is null or undefined.\n *\n * @param {Object} value - To check the object is null or undefined\n * @returns {boolean} ?\n * @private\n */\n\nexport function isNullOrUndefined(value) {\n  return value === undefined || value === null;\n}\n/**\n * To check whether the object is undefined.\n *\n * @param {Object} value - To check the object is undefined\n * @returns {boolean} ?\n * @private\n */\n\nexport function isUndefined(value) {\n  return 'undefined' === typeof value;\n}\n/**\n * To return the generated unique name\n *\n * @param {string} definedName - To concatenate the unique id to provided name\n * @returns {string} ?\n * @private\n */\n\nexport function getUniqueID(definedName) {\n  return definedName + '_' + uid++;\n}\n/**\n * It limits the rate at which a function can fire. The function will fire only once every provided second instead of as quickly.\n *\n * @param {Function} eventFunction - Specifies the function to run when the event occurs\n * @param {number} delay - A number that specifies the milliseconds for function delay call option\n * @returns {Function} ?\n * @private\n */\n\nexport function debounce(eventFunction, delay) {\n  // eslint-disable-next-line\n  var out;\n  return function () {\n    var _this = this; // eslint-disable-next-line\n\n\n    var args = arguments;\n\n    var later = function () {\n      out = null;\n      return eventFunction.apply(_this, args);\n    };\n\n    clearTimeout(out);\n    out = setTimeout(later, delay);\n  };\n}\n/**\n * To convert the object to string for query url\n *\n * @param  {Object} data ?\n * @returns {string} ?\n * @private\n */\n// eslint-disable-next-line\n\nexport function queryParams(data) {\n  var array = [];\n  var keys = Object.keys(data);\n\n  for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n    var key = keys_2[_i];\n    array.push(encodeURIComponent(key) + '=' + encodeURIComponent('' + data[\"\" + key]));\n  }\n\n  return array.join('&');\n}\n/**\n * To check whether the given array contains object.\n *\n * @param {any} value - Specifies the T type array to be checked.\n * @returns {boolean} ?\n * @private\n */\n\nexport function isObjectArray(value) {\n  var parser = Object.prototype.toString;\n\n  if (parser.call(value) === '[object Array]') {\n    if (parser.call(value[0]) === '[object Object]') {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * To check whether the  child element is descendant to parent element or parent and child are same element.\n *\n * @param {Element} child - Specifies the child element to compare with parent.\n * @param {Element} parent - Specifies the parent element.\n * @returns {boolean} ?\n * @private\n */\n\nexport function compareElementParent(child, parent) {\n  var node = child;\n\n  if (node === parent) {\n    return true;\n  } else if (node === document || !node) {\n    return false;\n  } else {\n    return compareElementParent(node.parentNode, parent);\n  }\n}\n/**\n * To throw custom error message.\n *\n * @param {string} message - Specifies the error message to be thrown.\n * @returns {void} ?\n * @private\n */\n\nexport function throwError(message) {\n  try {\n    throw new Error(message);\n  } catch (e) {\n    // eslint-disable-next-line\n    throw e.message + '\\n' + e.stack;\n  }\n}\n/**\n * This function is used to print given element\n *\n * @param {Element} element - Specifies the print content element.\n * @param {Window} printWindow - Specifies the print window.\n * @returns {Window} ?\n * @private\n */\n\nexport function print(element, printWindow) {\n  var div = document.createElement('div');\n  var links = [].slice.call(document.getElementsByTagName('head')[0].querySelectorAll('base, link, style'));\n  var blinks = [].slice.call(document.getElementsByTagName('body')[0].querySelectorAll('link, style'));\n\n  if (blinks.length) {\n    for (var l = 0, len = blinks.length; l < len; l++) {\n      links.push(blinks[parseInt(l.toString(), 10)]);\n    }\n  }\n\n  var reference = '';\n\n  if (isNullOrUndefined(printWindow)) {\n    printWindow = window.open('', 'print', 'height=452,width=1024,tabbar=no');\n  }\n\n  div.appendChild(element.cloneNode(true));\n\n  for (var i = 0, len = links.length; i < len; i++) {\n    reference += links[parseInt(i.toString(), 10)].outerHTML;\n  }\n\n  printWindow.document.write('<!DOCTYPE html> <html><head>' + reference + '</head><body>' + div.innerHTML + '<script> (function() { window.ready = true; })(); </script>' + '</body></html>');\n  printWindow.document.close();\n  printWindow.focus(); // eslint-disable-next-line\n\n  var interval = setInterval(function () {\n    if (printWindow.ready) {\n      printWindow.print();\n      printWindow.close();\n      clearInterval(interval);\n    }\n  }, 500);\n  return printWindow;\n}\n/**\n * Function to normalize the units applied to the element.\n *\n * @param {number|string} value ?\n * @returns {string} result\n * @private\n */\n\nexport function formatUnit(value) {\n  var result = value + '';\n\n  if (result.match(/auto|cm|mm|in|px|pt|pc|%|em|ex|ch|rem|vw|vh|vmin|vmax/)) {\n    return result;\n  }\n\n  return result + 'px';\n}\n/**\n * Function to check whether the platform is blazor or not.\n *\n * @returns {void} result\n * @private\n */\n\nexport function enableBlazorMode() {\n  isBlazorPlatform = true;\n}\n/**\n * Function to check whether the platform is blazor or not.\n *\n * @returns {boolean} result\n * @private\n */\n\nexport function isBlazor() {\n  return isBlazorPlatform;\n}\n/**\n * Function to convert xPath to DOM element in blazor platform\n *\n * @returns {HTMLElement} result\n * @param {HTMLElement | object} element ?\n * @private\n */\n\nexport function getElement(element) {\n  var xPath = 'xPath';\n\n  if (!(element instanceof Node) && isBlazor() && !isNullOrUndefined(element[\"\" + xPath])) {\n    return document.evaluate(element[\"\" + xPath], document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n  }\n\n  return element;\n}\n/**\n * Function to fetch the Instances of a HTML element for the given component.\n *\n * @param {string | HTMLElement} element ?\n * @param {any} component ?\n * @returns {Object} ?\n * @private\n */\n// eslint-disable-next-line\n\nexport function getInstance(element, component) {\n  // eslint-disable-next-line\n  var elem = typeof element === 'string' ? document.querySelector(element) : element;\n\n  if (elem[\"\" + instances]) {\n    for (var _i = 0, _a = elem[\"\" + instances]; _i < _a.length; _i++) {\n      var inst = _a[_i];\n\n      if (inst instanceof component) {\n        return inst;\n      }\n    }\n  }\n\n  return null;\n}\n/**\n * Function to add instances for the given element.\n *\n * @param {string | HTMLElement} element ?\n * @param {Object} instance ?\n * @returns {void} ?\n * @private\n */\n\nexport function addInstance(element, instance) {\n  // eslint-disable-next-line\n  var elem = typeof element === 'string' ? document.querySelector(element) : element;\n\n  if (elem[\"\" + instances]) {\n    elem[\"\" + instances].push(instance);\n  } else {\n    elem[\"\" + instances] = [instance];\n  }\n}\n/**\n * Function to generate the unique id.\n *\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\n\nexport function uniqueID() {\n  if (typeof window === 'undefined') {\n    return;\n  } // eslint-disable-next-line\n\n\n  var num = new Uint16Array(5);\n  var intCrypto = window.msCrypto || window.crypto;\n  return intCrypto.getRandomValues(num);\n}\n/**\n *\n * @param {Int16Array} num ?\n * @returns {string} ?\n */\n\nfunction combineArray(num) {\n  var ret = '';\n\n  for (var i = 0; i < 5; i++) {\n    ret += (i ? ',' : '') + num[parseInt(i.toString(), 10)];\n  }\n\n  return ret;\n}","map":{"version":3,"sources":["C:/Users/amase/Desktop/open_dsa/openDSA_dashboard/project/node_modules/@syncfusion/ej2-base/src/util.js"],"names":["instances","uid","isBlazorPlatform","disableBlazorMode","createInstance","classFunction","params","arrayParam","unshift","undefined","Function","prototype","bind","apply","setImmediate","handler","unbind","num","Uint16Array","intCrypto","window","msCrypto","crypto","getRandomValues","secret","combineArray","messageHandler","event","source","data","length","addEventListener","postMessage","removeEventListener","getValue","nameSpace","obj","value","splits","replace","split","i","isUndefined","parseInt","toString","setValue","keys","start","fromObj","key","isNullOrUndefined","deleteObject","containerObject","isObject","objCon","constructor","getEnumValue","enumObject","enumValue","merge","destination","temrObj","tempProp","Object","deepmerge","_i","keys_1","indexOf","Array","isArray","extend","copied","first","second","deep","result","arguments","_loop_1","arguments_1","obj1","forEach","src","copy","clone","isArrayChanged","blazorEventExtend","isBlazor","Event","hasOwnProperty","getUniqueID","definedName","debounce","eventFunction","delay","out","_this","args","later","clearTimeout","setTimeout","queryParams","array","keys_2","push","encodeURIComponent","join","isObjectArray","parser","call","compareElementParent","child","parent","node","document","parentNode","throwError","message","Error","e","stack","print","element","printWindow","div","createElement","links","slice","getElementsByTagName","querySelectorAll","blinks","l","len","reference","open","appendChild","cloneNode","outerHTML","write","innerHTML","close","focus","interval","setInterval","ready","clearInterval","formatUnit","match","enableBlazorMode","getElement","xPath","Node","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","getInstance","component","elem","querySelector","_a","inst","addInstance","instance","uniqueID","ret"],"mappings":"AAAA,IAAIA,SAAS,GAAG,eAAhB;AACA,IAAIC,GAAG,GAAG,CAAV;AACA,IAAIC,gBAAgB,GAAG,KAAvB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,iBAAT,GAA6B;AAChCD,EAAAA,gBAAgB,GAAG,KAAnB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,cAAT,CAAwBC,aAAxB,EAAuCC,MAAvC,EAA+C;AAClD,MAAIC,UAAU,GAAGD,MAAjB;AACAC,EAAAA,UAAU,CAACC,OAAX,CAAmBC,SAAnB;AACA,SAAO,KAAKC,QAAQ,CAACC,SAAT,CAAmBC,IAAnB,CAAwBC,KAAxB,CAA8BR,aAA9B,EAA6CE,UAA7C,CAAL,GAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASO,YAAT,CAAsBC,OAAtB,EAA+B;AAClC,MAAIC,MAAJ,CADkC,CAElC;;AACA,MAAIC,GAAG,GAAG,IAAIC,WAAJ,CAAgB,CAAhB,CAAV;AACA,MAAIC,SAAS,GAAGC,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACE,MAA1C;AACAH,EAAAA,SAAS,CAACI,eAAV,CAA0BN,GAA1B;AACA,MAAIO,MAAM,GAAG,QAAQC,YAAY,CAACR,GAAD,CAAjC,CANkC,CAOlC;;AACA,MAAIS,cAAc,GAAG,UAAUC,KAAV,EAAiB;AAClC,QAAIA,KAAK,CAACC,MAAN,KAAiBR,MAAjB,IAA2B,OAAOO,KAAK,CAACE,IAAb,KAAsB,QAAjD,IAA6DF,KAAK,CAACE,IAAN,CAAWC,MAAX,IAAqB,EAAlF,IAAwFH,KAAK,CAACE,IAAN,KAAeL,MAA3G,EAAmH;AAC/GT,MAAAA,OAAO;AACPC,MAAAA,MAAM;AACT;AACJ,GALD;;AAMAI,EAAAA,MAAM,CAACW,gBAAP,CAAwB,SAAxB,EAAmCL,cAAnC,EAAmD,KAAnD;AACAN,EAAAA,MAAM,CAACY,WAAP,CAAmBR,MAAnB,EAA2B,GAA3B;AACA,SAAOR,MAAM,GAAG,YAAY;AACxBI,IAAAA,MAAM,CAACa,mBAAP,CAA2B,SAA3B,EAAsCP,cAAtC;AACAX,IAAAA,OAAO,GAAGW,cAAc,GAAGF,MAAM,GAAGf,SAApC;AACH,GAHD;AAIH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASyB,QAAT,CAAkBC,SAAlB,EAA6BC,GAA7B,EAAkC;AACrC;AACA,MAAIC,KAAK,GAAGD,GAAZ;AACA,MAAIE,MAAM,GAAGH,SAAS,CAACI,OAAV,CAAkB,KAAlB,EAAyB,GAAzB,EAA8BA,OAA9B,CAAsC,KAAtC,EAA6C,EAA7C,EAAiDC,KAAjD,CAAuD,GAAvD,CAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACR,MAAX,IAAqB,CAACY,WAAW,CAACL,KAAD,CAAjD,EAA0DI,CAAC,EAA3D,EAA+D;AAC3DJ,IAAAA,KAAK,GAAGA,KAAK,CAACC,MAAM,CAACK,QAAQ,CAACF,CAAC,CAACG,QAAF,EAAD,EAAe,EAAf,CAAT,CAAP,CAAb;AACH;;AACD,SAAOP,KAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASQ,QAAT,CAAkBV,SAAlB,EAA6BE,KAA7B,EAAoCD,GAApC,EAAyC;AAC5C,MAAIU,IAAI,GAAGX,SAAS,CAACI,OAAV,CAAkB,KAAlB,EAAyB,GAAzB,EAA8BA,OAA9B,CAAsC,KAAtC,EAA6C,EAA7C,EAAiDC,KAAjD,CAAuD,GAAvD,CAAX,CAD4C,CAE5C;;AACA,MAAIO,KAAK,GAAGX,GAAG,IAAI,EAAnB,CAH4C,CAI5C;;AACA,MAAIY,OAAO,GAAGD,KAAd;AACA,MAAIN,CAAJ;AACA,MAAIX,MAAM,GAAGgB,IAAI,CAAChB,MAAlB;AACA,MAAImB,GAAJ;;AACA,OAAKR,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGX,MAAhB,EAAwBW,CAAC,EAAzB,EAA6B;AACzBQ,IAAAA,GAAG,GAAGH,IAAI,CAACH,QAAQ,CAACF,CAAC,CAACG,QAAF,EAAD,EAAe,EAAf,CAAT,CAAV;;AACA,QAAIH,CAAC,GAAG,CAAJ,KAAUX,MAAd,EAAsB;AAClBkB,MAAAA,OAAO,CAAC,KAAKC,GAAN,CAAP,GAAoBZ,KAAK,KAAK5B,SAAV,GAAsB,EAAtB,GAA2B4B,KAA/C;AACH,KAFD,MAGK,IAAIa,iBAAiB,CAACF,OAAO,CAAC,KAAKC,GAAN,CAAR,CAArB,EAA0C;AAC3CD,MAAAA,OAAO,CAAC,KAAKC,GAAN,CAAP,GAAoB,EAApB;AACH;;AACDD,IAAAA,OAAO,GAAGA,OAAO,CAAC,KAAKC,GAAN,CAAjB;AACH;;AACD,SAAOF,KAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASI,YAAT,CAAsBf,GAAtB,EAA2Ba,GAA3B,EAAgC;AACnC,SAAOb,GAAG,CAAC,KAAKa,GAAN,CAAV;AACH;AACD;AACA;AACA;AACA;;AACA,OAAO,IAAIG,eAAe,GAAG,OAAOhC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyC,EAA/D;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASiC,QAAT,CAAkBjB,GAAlB,EAAuB;AAC1B,MAAIkB,MAAM,GAAG,EAAb;AACA,SAAQ,CAACJ,iBAAiB,CAACd,GAAD,CAAlB,IAA2BA,GAAG,CAACmB,WAAJ,KAAoBD,MAAM,CAACC,WAA9D;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,YAAT,CAAsBC,UAAtB,EAAkCC,SAAlC,EAA6C;AAChD;AACA,SAAOD,UAAU,CAACC,SAAD,CAAjB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,KAAT,CAAe/B,MAAf,EAAuBgC,WAAvB,EAAoC;AACvC,MAAI,CAACV,iBAAiB,CAACU,WAAD,CAAtB,EAAqC;AACjC,QAAIC,OAAO,GAAGjC,MAAd;AACA,QAAIkC,QAAQ,GAAGF,WAAf;AACA,QAAId,IAAI,GAAGiB,MAAM,CAACjB,IAAP,CAAYc,WAAZ,CAAX;AACA,QAAII,SAAS,GAAG,WAAhB;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,MAAM,GAAGpB,IAA1B,EAAgCmB,EAAE,GAAGC,MAAM,CAACpC,MAA5C,EAAoDmC,EAAE,EAAtD,EAA0D;AACtD,UAAIhB,GAAG,GAAGiB,MAAM,CAACD,EAAD,CAAhB;;AACA,UAAI,CAACf,iBAAiB,CAACW,OAAO,CAAC,KAAKG,SAAN,CAAR,CAAlB,IAAgDH,OAAO,CAAC,KAAKG,SAAN,CAAP,CAAwBG,OAAxB,CAAgClB,GAAhC,MAAyC,CAAC,CAA1F,KACCI,QAAQ,CAACS,QAAQ,CAAC,KAAKb,GAAN,CAAT,CAAR,IAAgCmB,KAAK,CAACC,OAAN,CAAcP,QAAQ,CAAC,KAAKb,GAAN,CAAtB,CADjC,CAAJ,EACyE;AACrEqB,QAAAA,MAAM,CAACT,OAAO,CAAC,KAAKZ,GAAN,CAAR,EAAoBY,OAAO,CAAC,KAAKZ,GAAN,CAA3B,EAAuCa,QAAQ,CAAC,KAAKb,GAAN,CAA/C,EAA2D,IAA3D,CAAN;AACH,OAHD,MAIK;AACDY,QAAAA,OAAO,CAAC,KAAKZ,GAAN,CAAP,GAAoBa,QAAQ,CAAC,KAAKb,GAAN,CAA5B;AACH;AACJ;AACJ;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASqB,MAAT,CAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,IAAvC,EAA6C;AAChD,MAAIC,MAAM,GAAGJ,MAAM,IAAI,OAAOA,MAAP,KAAkB,QAA5B,GAAuCA,MAAvC,GAAgD,EAA7D;AACA,MAAIzC,MAAM,GAAG8C,SAAS,CAAC9C,MAAvB;;AACA,MAAI4C,IAAJ,EAAU;AACN5C,IAAAA,MAAM,GAAGA,MAAM,GAAG,CAAlB;AACH;;AACD,MAAI+C,OAAO,GAAG,UAAUpC,CAAV,EAAa;AACvB;AACA,QAAI,CAACqC,WAAW,CAACrC,CAAD,CAAhB,EAAqB;AACjB,aAAO,UAAP;AACH,KAJsB,CAKvB;;;AACA,QAAIsC,IAAI,GAAGD,WAAW,CAACrC,CAAD,CAAtB;AACAsB,IAAAA,MAAM,CAACjB,IAAP,CAAYiC,IAAZ,EAAkBC,OAAlB,CAA0B,UAAU/B,GAAV,EAAe;AACrC,UAAIgC,GAAG,GAAGN,MAAM,CAAC,KAAK1B,GAAN,CAAhB;AACA,UAAIiC,IAAI,GAAGH,IAAI,CAAC,KAAK9B,GAAN,CAAf;AACA,UAAIkC,KAAJ;AACA,UAAIC,cAAc,GAAGhB,KAAK,CAACC,OAAN,CAAca,IAAd,KAAuBd,KAAK,CAACC,OAAN,CAAcY,GAAd,CAAvB,IAA8CC,IAAI,CAACpD,MAAL,KAAgBmD,GAAG,CAACnD,MAAvF,CAJqC,CAKrC;;AACA,UAAIuD,iBAAiB,GAAGC,QAAQ,KAAM,EAAEL,GAAG,YAAYM,KAAjB,KAA2B,CAACH,cAAlC,GAAoD,IAApF;;AACA,UAAIV,IAAI,IAAIW,iBAAR,KAA8BhC,QAAQ,CAAC6B,IAAD,CAAR,IAAkBd,KAAK,CAACC,OAAN,CAAca,IAAd,CAAhD,CAAJ,EAA0E;AACtE,YAAI7B,QAAQ,CAAC6B,IAAD,CAAZ,EAAoB;AAChBC,UAAAA,KAAK,GAAGF,GAAG,GAAGA,GAAH,GAAS,EAApB,CADgB,CAEhB;;AACA,cAAIb,KAAK,CAACC,OAAN,CAAcc,KAAd,KAAwBA,KAAK,CAACK,cAAN,CAAqB,gBAArB,CAA5B,EAAoE;AAChElB,YAAAA,MAAM,CAACa,KAAD,EAAQ,EAAR,EAAYD,IAAZ,EAAkBR,IAAlB,CAAN;AACH,WAFD,MAGK;AACDC,YAAAA,MAAM,CAAC,KAAK1B,GAAN,CAAN,GAAmBqB,MAAM,CAACa,KAAD,EAAQ,EAAR,EAAYD,IAAZ,EAAkBR,IAAlB,CAAzB;AACH;AACJ,SATD,MAUK;AACD;AACAS,UAAAA,KAAK,GAAGG,QAAQ,KAAKL,GAAG,IAAIlB,MAAM,CAACjB,IAAP,CAAYoC,IAAZ,EAAkBpD,MAA9B,GAAuCmD,GAAG,GAAGA,GAAH,GAAS,EAAnE,CAFC,CAGD;;AACAN,UAAAA,MAAM,CAAC,KAAK1B,GAAN,CAAN,GAAmBqB,MAAM,CAAC,EAAD,EAAKa,KAAL,EAAYD,IAAZ,EAAmBC,KAAK,IAAIA,KAAK,CAACrD,MAAhB,IAA4BoD,IAAI,IAAIA,IAAI,CAACpD,MAA3D,CAAzB;AACH;AACJ,OAjBD,MAkBK;AACD6C,QAAAA,MAAM,CAAC,KAAK1B,GAAN,CAAN,GAAmBiC,IAAnB;AACH;AACJ,KA5BD;AA6BH,GApCD;;AAqCA,MAAIJ,WAAW,GAAGF,SAAlB;;AACA,OAAK,IAAInC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,MAApB,EAA4BW,CAAC,EAA7B,EAAiC;AAC7BoC,IAAAA,OAAO,CAACpC,CAAD,CAAP;AACH;;AACD,SAAOkC,MAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASzB,iBAAT,CAA2Bb,KAA3B,EAAkC;AACrC,SAAOA,KAAK,KAAK5B,SAAV,IAAuB4B,KAAK,KAAK,IAAxC;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASK,WAAT,CAAqBL,KAArB,EAA4B;AAC/B,SAAQ,gBAAgB,OAAOA,KAA/B;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASoD,WAAT,CAAqBC,WAArB,EAAkC;AACrC,SAAOA,WAAW,GAAG,GAAd,GAAoBzF,GAAG,EAA9B;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAAS0F,QAAT,CAAkBC,aAAlB,EAAiCC,KAAjC,EAAwC;AAC3C;AACA,MAAIC,GAAJ;AACA,SAAO,YAAY;AACf,QAAIC,KAAK,GAAG,IAAZ,CADe,CAEf;;;AACA,QAAIC,IAAI,GAAGpB,SAAX;;AACA,QAAIqB,KAAK,GAAG,YAAY;AACpBH,MAAAA,GAAG,GAAG,IAAN;AACA,aAAOF,aAAa,CAAC/E,KAAd,CAAoBkF,KAApB,EAA2BC,IAA3B,CAAP;AACH,KAHD;;AAIAE,IAAAA,YAAY,CAACJ,GAAD,CAAZ;AACAA,IAAAA,GAAG,GAAGK,UAAU,CAACF,KAAD,EAAQJ,KAAR,CAAhB;AACH,GAVD;AAWH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASO,WAAT,CAAqBvE,IAArB,EAA2B;AAC9B,MAAIwE,KAAK,GAAG,EAAZ;AACA,MAAIvD,IAAI,GAAGiB,MAAM,CAACjB,IAAP,CAAYjB,IAAZ,CAAX;;AACA,OAAK,IAAIoC,EAAE,GAAG,CAAT,EAAYqC,MAAM,GAAGxD,IAA1B,EAAgCmB,EAAE,GAAGqC,MAAM,CAACxE,MAA5C,EAAoDmC,EAAE,EAAtD,EAA0D;AACtD,QAAIhB,GAAG,GAAGqD,MAAM,CAACrC,EAAD,CAAhB;AACAoC,IAAAA,KAAK,CAACE,IAAN,CAAWC,kBAAkB,CAACvD,GAAD,CAAlB,GAA0B,GAA1B,GAAgCuD,kBAAkB,CAAC,KAAK3E,IAAI,CAAC,KAAKoB,GAAN,CAAV,CAA7D;AACH;;AACD,SAAOoD,KAAK,CAACI,IAAN,CAAW,GAAX,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,aAAT,CAAuBrE,KAAvB,EAA8B;AACjC,MAAIsE,MAAM,GAAG5C,MAAM,CAACpD,SAAP,CAAiBiC,QAA9B;;AACA,MAAI+D,MAAM,CAACC,IAAP,CAAYvE,KAAZ,MAAuB,gBAA3B,EAA6C;AACzC,QAAIsE,MAAM,CAACC,IAAP,CAAYvE,KAAK,CAAC,CAAD,CAAjB,MAA0B,iBAA9B,EAAiD;AAC7C,aAAO,IAAP;AACH;AACJ;;AACD,SAAO,KAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASwE,oBAAT,CAA8BC,KAA9B,EAAqCC,MAArC,EAA6C;AAChD,MAAIC,IAAI,GAAGF,KAAX;;AACA,MAAIE,IAAI,KAAKD,MAAb,EAAqB;AACjB,WAAO,IAAP;AACH,GAFD,MAGK,IAAIC,IAAI,KAAKC,QAAT,IAAqB,CAACD,IAA1B,EAAgC;AACjC,WAAO,KAAP;AACH,GAFI,MAGA;AACD,WAAOH,oBAAoB,CAACG,IAAI,CAACE,UAAN,EAAkBH,MAAlB,CAA3B;AACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASI,UAAT,CAAoBC,OAApB,EAA6B;AAChC,MAAI;AACA,UAAM,IAAIC,KAAJ,CAAUD,OAAV,CAAN;AACH,GAFD,CAGA,OAAOE,CAAP,EAAU;AACN;AACA,UAAMA,CAAC,CAACF,OAAF,GAAY,IAAZ,GAAmBE,CAAC,CAACC,KAA3B;AACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,KAAT,CAAeC,OAAf,EAAwBC,WAAxB,EAAqC;AACxC,MAAIC,GAAG,GAAGV,QAAQ,CAACW,aAAT,CAAuB,KAAvB,CAAV;AACA,MAAIC,KAAK,GAAG,GAAGC,KAAH,CAASlB,IAAT,CAAcK,QAAQ,CAACc,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,gBAAzC,CAA0D,mBAA1D,CAAd,CAAZ;AACA,MAAIC,MAAM,GAAG,GAAGH,KAAH,CAASlB,IAAT,CAAcK,QAAQ,CAACc,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,gBAAzC,CAA0D,aAA1D,CAAd,CAAb;;AACA,MAAIC,MAAM,CAACnG,MAAX,EAAmB;AACf,SAAK,IAAIoG,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGF,MAAM,CAACnG,MAA7B,EAAqCoG,CAAC,GAAGC,GAAzC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/CL,MAAAA,KAAK,CAACtB,IAAN,CAAW0B,MAAM,CAACtF,QAAQ,CAACuF,CAAC,CAACtF,QAAF,EAAD,EAAe,EAAf,CAAT,CAAjB;AACH;AACJ;;AACD,MAAIwF,SAAS,GAAG,EAAhB;;AACA,MAAIlF,iBAAiB,CAACwE,WAAD,CAArB,EAAoC;AAChCA,IAAAA,WAAW,GAAGtG,MAAM,CAACiH,IAAP,CAAY,EAAZ,EAAgB,OAAhB,EAAyB,iCAAzB,CAAd;AACH;;AACDV,EAAAA,GAAG,CAACW,WAAJ,CAAgBb,OAAO,CAACc,SAAR,CAAkB,IAAlB,CAAhB;;AACA,OAAK,IAAI9F,CAAC,GAAG,CAAR,EAAW0F,GAAG,GAAGN,KAAK,CAAC/F,MAA5B,EAAoCW,CAAC,GAAG0F,GAAxC,EAA6C1F,CAAC,EAA9C,EAAkD;AAC9C2F,IAAAA,SAAS,IAAIP,KAAK,CAAClF,QAAQ,CAACF,CAAC,CAACG,QAAF,EAAD,EAAe,EAAf,CAAT,CAAL,CAAkC4F,SAA/C;AACH;;AACDd,EAAAA,WAAW,CAACT,QAAZ,CAAqBwB,KAArB,CAA2B,iCAAiCL,SAAjC,GAA6C,eAA7C,GAA+DT,GAAG,CAACe,SAAnE,GACvB,6DADuB,GACyC,gBADpE;AAEAhB,EAAAA,WAAW,CAACT,QAAZ,CAAqB0B,KAArB;AACAjB,EAAAA,WAAW,CAACkB,KAAZ,GApBwC,CAqBxC;;AACA,MAAIC,QAAQ,GAAGC,WAAW,CAAC,YAAY;AACnC,QAAIpB,WAAW,CAACqB,KAAhB,EAAuB;AACnBrB,MAAAA,WAAW,CAACF,KAAZ;AACAE,MAAAA,WAAW,CAACiB,KAAZ;AACAK,MAAAA,aAAa,CAACH,QAAD,CAAb;AACH;AACJ,GANyB,EAMvB,GANuB,CAA1B;AAOA,SAAOnB,WAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASuB,UAAT,CAAoB5G,KAApB,EAA2B;AAC9B,MAAIsC,MAAM,GAAGtC,KAAK,GAAG,EAArB;;AACA,MAAIsC,MAAM,CAACuE,KAAP,CAAa,uDAAb,CAAJ,EAA2E;AACvE,WAAOvE,MAAP;AACH;;AACD,SAAOA,MAAM,GAAG,IAAhB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASwE,gBAAT,GAA4B;AAC/BjJ,EAAAA,gBAAgB,GAAG,IAAnB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASoF,QAAT,GAAoB;AACvB,SAAOpF,gBAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASkJ,UAAT,CAAoB3B,OAApB,EAA6B;AAChC,MAAI4B,KAAK,GAAG,OAAZ;;AACA,MAAI,EAAE5B,OAAO,YAAY6B,IAArB,KAA8BhE,QAAQ,EAAtC,IAA4C,CAACpC,iBAAiB,CAACuE,OAAO,CAAC,KAAK4B,KAAN,CAAR,CAAlE,EAAyF;AACrF,WAAOpC,QAAQ,CAACsC,QAAT,CAAkB9B,OAAO,CAAC,KAAK4B,KAAN,CAAzB,EAAuCpC,QAAvC,EAAiD,IAAjD,EAAuDuC,WAAW,CAACC,uBAAnE,EAA4F,IAA5F,EAAkGC,eAAzG;AACH;;AACD,SAAOjC,OAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASkC,WAAT,CAAqBlC,OAArB,EAA8BmC,SAA9B,EAAyC;AAC5C;AACA,MAAIC,IAAI,GAAI,OAAQpC,OAAR,KAAqB,QAAtB,GAAkCR,QAAQ,CAAC6C,aAAT,CAAuBrC,OAAvB,CAAlC,GAAoEA,OAA/E;;AACA,MAAIoC,IAAI,CAAC,KAAK7J,SAAN,CAAR,EAA0B;AACtB,SAAK,IAAIiE,EAAE,GAAG,CAAT,EAAY8F,EAAE,GAAGF,IAAI,CAAC,KAAK7J,SAAN,CAA1B,EAA4CiE,EAAE,GAAG8F,EAAE,CAACjI,MAApD,EAA4DmC,EAAE,EAA9D,EAAkE;AAC9D,UAAI+F,IAAI,GAAGD,EAAE,CAAC9F,EAAD,CAAb;;AACA,UAAI+F,IAAI,YAAYJ,SAApB,EAA+B;AAC3B,eAAOI,IAAP;AACH;AACJ;AACJ;;AACD,SAAO,IAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,WAAT,CAAqBxC,OAArB,EAA8ByC,QAA9B,EAAwC;AAC3C;AACA,MAAIL,IAAI,GAAI,OAAQpC,OAAR,KAAqB,QAAtB,GAAkCR,QAAQ,CAAC6C,aAAT,CAAuBrC,OAAvB,CAAlC,GAAoEA,OAA/E;;AACA,MAAIoC,IAAI,CAAC,KAAK7J,SAAN,CAAR,EAA0B;AACtB6J,IAAAA,IAAI,CAAC,KAAK7J,SAAN,CAAJ,CAAqBuG,IAArB,CAA0B2D,QAA1B;AACH,GAFD,MAGK;AACDL,IAAAA,IAAI,CAAC,KAAK7J,SAAN,CAAJ,GAAuB,CAACkK,QAAD,CAAvB;AACH;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,QAAT,GAAoB;AACvB,MAAK,OAAO/I,MAAR,KAAoB,WAAxB,EAAqC;AACjC;AACH,GAHsB,CAIvB;;;AACA,MAAIH,GAAG,GAAG,IAAIC,WAAJ,CAAgB,CAAhB,CAAV;AACA,MAAIC,SAAS,GAAGC,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACE,MAA1C;AACA,SAAOH,SAAS,CAACI,eAAV,CAA0BN,GAA1B,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;;AACA,SAASQ,YAAT,CAAsBR,GAAtB,EAA2B;AACvB,MAAImJ,GAAG,GAAG,EAAV;;AACA,OAAK,IAAI3H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB2H,IAAAA,GAAG,IAAI,CAAC3H,CAAC,GAAG,GAAH,GAAS,EAAX,IAAiBxB,GAAG,CAAC0B,QAAQ,CAACF,CAAC,CAACG,QAAF,EAAD,EAAe,EAAf,CAAT,CAA3B;AACH;;AACD,SAAOwH,GAAP;AACH","sourcesContent":["var instances = 'ej2_instances';\nvar uid = 0;\nvar isBlazorPlatform = false;\n/**\n * Function to check whether the platform is blazor or not.\n *\n * @returns {void} result\n * @private\n */\nexport function disableBlazorMode() {\n    isBlazorPlatform = false;\n}\n/**\n * Create Instance from constructor function with desired parameters.\n *\n * @param {Function} classFunction - Class function to which need to create instance\n * @param {any[]} params - Parameters need to passed while creating instance\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nexport function createInstance(classFunction, params) {\n    var arrayParam = params;\n    arrayParam.unshift(undefined);\n    return new (Function.prototype.bind.apply(classFunction, arrayParam));\n}\n/**\n * To run a callback function immediately after the browser has completed other operations.\n *\n * @param {Function} handler - callback function to be triggered.\n * @returns {Function} ?\n * @private\n */\nexport function setImmediate(handler) {\n    var unbind;\n    // eslint-disable-next-line\n    var num = new Uint16Array(5);\n    var intCrypto = window.msCrypto || window.crypto;\n    intCrypto.getRandomValues(num);\n    var secret = 'ej2' + combineArray(num);\n    // eslint-disable-next-line\n    var messageHandler = function (event) {\n        if (event.source === window && typeof event.data === 'string' && event.data.length <= 32 && event.data === secret) {\n            handler();\n            unbind();\n        }\n    };\n    window.addEventListener('message', messageHandler, false);\n    window.postMessage(secret, '*');\n    return unbind = function () {\n        window.removeEventListener('message', messageHandler);\n        handler = messageHandler = secret = undefined;\n    };\n}\n/**\n * To get nameSpace value from the desired object.\n *\n * @param {string} nameSpace - String value to the get the inner object\n * @param {any} obj - Object to get the inner object value.\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nexport function getValue(nameSpace, obj) {\n    // eslint-disable-next-line\n    var value = obj;\n    var splits = nameSpace.replace(/\\[/g, '.').replace(/\\]/g, '').split('.');\n    for (var i = 0; i < splits.length && !isUndefined(value); i++) {\n        value = value[splits[parseInt(i.toString(), 10)]];\n    }\n    return value;\n}\n/**\n * To set value for the nameSpace in desired object.\n *\n * @param {string} nameSpace - String value to the get the inner object\n * @param {any} value - Value that you need to set.\n * @param {any} obj - Object to get the inner object value.\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nexport function setValue(nameSpace, value, obj) {\n    var keys = nameSpace.replace(/\\[/g, '.').replace(/\\]/g, '').split('.');\n    // eslint-disable-next-line\n    var start = obj || {};\n    // eslint-disable-next-line\n    var fromObj = start;\n    var i;\n    var length = keys.length;\n    var key;\n    for (i = 0; i < length; i++) {\n        key = keys[parseInt(i.toString(), 10)];\n        if (i + 1 === length) {\n            fromObj[\"\" + key] = value === undefined ? {} : value;\n        }\n        else if (isNullOrUndefined(fromObj[\"\" + key])) {\n            fromObj[\"\" + key] = {};\n        }\n        fromObj = fromObj[\"\" + key];\n    }\n    return start;\n}\n/**\n * Delete an item from Object\n *\n * @param {any} obj - Object in which we need to delete an item.\n * @param {string} key - String value to the get the inner object\n * @returns {void} ?\n * @private\n */\n// eslint-disable-next-line\nexport function deleteObject(obj, key) {\n    delete obj[\"\" + key];\n}\n/**\n *@private\n */\n// eslint-disable-next-line\nexport var containerObject = typeof window !== 'undefined' ? window : {};\n/**\n * Check weather the given argument is only object.\n *\n * @param {any} obj - Object which is need to check.\n * @returns {boolean} ?\n * @private\n */\n// eslint-disable-next-line\nexport function isObject(obj) {\n    var objCon = {};\n    return (!isNullOrUndefined(obj) && obj.constructor === objCon.constructor);\n}\n/**\n * To get enum value by giving the string.\n *\n * @param {any} enumObject - Enum object.\n * @param {string} enumValue - Enum value to be searched\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nexport function getEnumValue(enumObject, enumValue) {\n    // eslint-disable-next-line\n    return enumObject[enumValue];\n}\n/**\n * Merge the source object into destination object.\n *\n * @param {any} source - source object which is going to merge with destination object\n * @param {any} destination - object need to be merged\n * @returns {void} ?\n * @private\n */\nexport function merge(source, destination) {\n    if (!isNullOrUndefined(destination)) {\n        var temrObj = source;\n        var tempProp = destination;\n        var keys = Object.keys(destination);\n        var deepmerge = 'deepMerge';\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            if (!isNullOrUndefined(temrObj[\"\" + deepmerge]) && (temrObj[\"\" + deepmerge].indexOf(key) !== -1) &&\n                (isObject(tempProp[\"\" + key]) || Array.isArray(tempProp[\"\" + key]))) {\n                extend(temrObj[\"\" + key], temrObj[\"\" + key], tempProp[\"\" + key], true);\n            }\n            else {\n                temrObj[\"\" + key] = tempProp[\"\" + key];\n            }\n        }\n    }\n}\n/**\n * Extend the two object with newer one.\n *\n * @param {any} copied - Resultant object after merged\n * @param {Object} first - First object need to merge\n * @param {Object} second - Second object need to merge\n * @param {boolean} deep ?\n * @returns {Object} ?\n * @private\n */\nexport function extend(copied, first, second, deep) {\n    var result = copied && typeof copied === 'object' ? copied : {};\n    var length = arguments.length;\n    if (deep) {\n        length = length - 1;\n    }\n    var _loop_1 = function (i) {\n        // eslint-disable-next-line\n        if (!arguments_1[i]) {\n            return \"continue\";\n        }\n        // eslint-disable-next-line\n        var obj1 = arguments_1[i];\n        Object.keys(obj1).forEach(function (key) {\n            var src = result[\"\" + key];\n            var copy = obj1[\"\" + key];\n            var clone;\n            var isArrayChanged = Array.isArray(copy) && Array.isArray(src) && (copy.length !== src.length);\n            // eslint-disable-next-line\n            var blazorEventExtend = isBlazor() ? (!(src instanceof Event) && !isArrayChanged) : true;\n            if (deep && blazorEventExtend && (isObject(copy) || Array.isArray(copy))) {\n                if (isObject(copy)) {\n                    clone = src ? src : {};\n                    // eslint-disable-next-line\n                    if (Array.isArray(clone) && clone.hasOwnProperty('isComplexArray')) {\n                        extend(clone, {}, copy, deep);\n                    }\n                    else {\n                        result[\"\" + key] = extend(clone, {}, copy, deep);\n                    }\n                }\n                else {\n                    /* istanbul ignore next */\n                    clone = isBlazor() ? src && Object.keys(copy).length : src ? src : [];\n                    // eslint-disable-next-line\n                    result[\"\" + key] = extend([], clone, copy, (clone && clone.length) || (copy && copy.length));\n                }\n            }\n            else {\n                result[\"\" + key] = copy;\n            }\n        });\n    };\n    var arguments_1 = arguments;\n    for (var i = 1; i < length; i++) {\n        _loop_1(i);\n    }\n    return result;\n}\n/**\n * To check whether the object is null or undefined.\n *\n * @param {Object} value - To check the object is null or undefined\n * @returns {boolean} ?\n * @private\n */\nexport function isNullOrUndefined(value) {\n    return value === undefined || value === null;\n}\n/**\n * To check whether the object is undefined.\n *\n * @param {Object} value - To check the object is undefined\n * @returns {boolean} ?\n * @private\n */\nexport function isUndefined(value) {\n    return ('undefined' === typeof value);\n}\n/**\n * To return the generated unique name\n *\n * @param {string} definedName - To concatenate the unique id to provided name\n * @returns {string} ?\n * @private\n */\nexport function getUniqueID(definedName) {\n    return definedName + '_' + uid++;\n}\n/**\n * It limits the rate at which a function can fire. The function will fire only once every provided second instead of as quickly.\n *\n * @param {Function} eventFunction - Specifies the function to run when the event occurs\n * @param {number} delay - A number that specifies the milliseconds for function delay call option\n * @returns {Function} ?\n * @private\n */\nexport function debounce(eventFunction, delay) {\n    // eslint-disable-next-line\n    var out;\n    return function () {\n        var _this = this;\n        // eslint-disable-next-line\n        var args = arguments;\n        var later = function () {\n            out = null;\n            return eventFunction.apply(_this, args);\n        };\n        clearTimeout(out);\n        out = setTimeout(later, delay);\n    };\n}\n/**\n * To convert the object to string for query url\n *\n * @param  {Object} data ?\n * @returns {string} ?\n * @private\n */\n// eslint-disable-next-line\nexport function queryParams(data) {\n    var array = [];\n    var keys = Object.keys(data);\n    for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n        var key = keys_2[_i];\n        array.push(encodeURIComponent(key) + '=' + encodeURIComponent('' + data[\"\" + key]));\n    }\n    return array.join('&');\n}\n/**\n * To check whether the given array contains object.\n *\n * @param {any} value - Specifies the T type array to be checked.\n * @returns {boolean} ?\n * @private\n */\nexport function isObjectArray(value) {\n    var parser = Object.prototype.toString;\n    if (parser.call(value) === '[object Array]') {\n        if (parser.call(value[0]) === '[object Object]') {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * To check whether the  child element is descendant to parent element or parent and child are same element.\n *\n * @param {Element} child - Specifies the child element to compare with parent.\n * @param {Element} parent - Specifies the parent element.\n * @returns {boolean} ?\n * @private\n */\nexport function compareElementParent(child, parent) {\n    var node = child;\n    if (node === parent) {\n        return true;\n    }\n    else if (node === document || !node) {\n        return false;\n    }\n    else {\n        return compareElementParent(node.parentNode, parent);\n    }\n}\n/**\n * To throw custom error message.\n *\n * @param {string} message - Specifies the error message to be thrown.\n * @returns {void} ?\n * @private\n */\nexport function throwError(message) {\n    try {\n        throw new Error(message);\n    }\n    catch (e) {\n        // eslint-disable-next-line\n        throw e.message + '\\n' + e.stack;\n    }\n}\n/**\n * This function is used to print given element\n *\n * @param {Element} element - Specifies the print content element.\n * @param {Window} printWindow - Specifies the print window.\n * @returns {Window} ?\n * @private\n */\nexport function print(element, printWindow) {\n    var div = document.createElement('div');\n    var links = [].slice.call(document.getElementsByTagName('head')[0].querySelectorAll('base, link, style'));\n    var blinks = [].slice.call(document.getElementsByTagName('body')[0].querySelectorAll('link, style'));\n    if (blinks.length) {\n        for (var l = 0, len = blinks.length; l < len; l++) {\n            links.push(blinks[parseInt(l.toString(), 10)]);\n        }\n    }\n    var reference = '';\n    if (isNullOrUndefined(printWindow)) {\n        printWindow = window.open('', 'print', 'height=452,width=1024,tabbar=no');\n    }\n    div.appendChild(element.cloneNode(true));\n    for (var i = 0, len = links.length; i < len; i++) {\n        reference += links[parseInt(i.toString(), 10)].outerHTML;\n    }\n    printWindow.document.write('<!DOCTYPE html> <html><head>' + reference + '</head><body>' + div.innerHTML +\n        '<script> (function() { window.ready = true; })(); </script>' + '</body></html>');\n    printWindow.document.close();\n    printWindow.focus();\n    // eslint-disable-next-line\n    var interval = setInterval(function () {\n        if (printWindow.ready) {\n            printWindow.print();\n            printWindow.close();\n            clearInterval(interval);\n        }\n    }, 500);\n    return printWindow;\n}\n/**\n * Function to normalize the units applied to the element.\n *\n * @param {number|string} value ?\n * @returns {string} result\n * @private\n */\nexport function formatUnit(value) {\n    var result = value + '';\n    if (result.match(/auto|cm|mm|in|px|pt|pc|%|em|ex|ch|rem|vw|vh|vmin|vmax/)) {\n        return result;\n    }\n    return result + 'px';\n}\n/**\n * Function to check whether the platform is blazor or not.\n *\n * @returns {void} result\n * @private\n */\nexport function enableBlazorMode() {\n    isBlazorPlatform = true;\n}\n/**\n * Function to check whether the platform is blazor or not.\n *\n * @returns {boolean} result\n * @private\n */\nexport function isBlazor() {\n    return isBlazorPlatform;\n}\n/**\n * Function to convert xPath to DOM element in blazor platform\n *\n * @returns {HTMLElement} result\n * @param {HTMLElement | object} element ?\n * @private\n */\nexport function getElement(element) {\n    var xPath = 'xPath';\n    if (!(element instanceof Node) && isBlazor() && !isNullOrUndefined(element[\"\" + xPath])) {\n        return document.evaluate(element[\"\" + xPath], document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n    }\n    return element;\n}\n/**\n * Function to fetch the Instances of a HTML element for the given component.\n *\n * @param {string | HTMLElement} element ?\n * @param {any} component ?\n * @returns {Object} ?\n * @private\n */\n// eslint-disable-next-line\nexport function getInstance(element, component) {\n    // eslint-disable-next-line\n    var elem = (typeof (element) === 'string') ? document.querySelector(element) : element;\n    if (elem[\"\" + instances]) {\n        for (var _i = 0, _a = elem[\"\" + instances]; _i < _a.length; _i++) {\n            var inst = _a[_i];\n            if (inst instanceof component) {\n                return inst;\n            }\n        }\n    }\n    return null;\n}\n/**\n * Function to add instances for the given element.\n *\n * @param {string | HTMLElement} element ?\n * @param {Object} instance ?\n * @returns {void} ?\n * @private\n */\nexport function addInstance(element, instance) {\n    // eslint-disable-next-line\n    var elem = (typeof (element) === 'string') ? document.querySelector(element) : element;\n    if (elem[\"\" + instances]) {\n        elem[\"\" + instances].push(instance);\n    }\n    else {\n        elem[\"\" + instances] = [instance];\n    }\n}\n/**\n * Function to generate the unique id.\n *\n * @returns {any} ?\n * @private\n */\n// eslint-disable-next-line\nexport function uniqueID() {\n    if ((typeof window) === 'undefined') {\n        return;\n    }\n    // eslint-disable-next-line\n    var num = new Uint16Array(5);\n    var intCrypto = window.msCrypto || window.crypto;\n    return intCrypto.getRandomValues(num);\n}\n/**\n *\n * @param {Int16Array} num ?\n * @returns {string} ?\n */\nfunction combineArray(num) {\n    var ret = '';\n    for (var i = 0; i < 5; i++) {\n        ret += (i ? ',' : '') + num[parseInt(i.toString(), 10)];\n    }\n    return ret;\n}\n"]},"metadata":{},"sourceType":"module"}