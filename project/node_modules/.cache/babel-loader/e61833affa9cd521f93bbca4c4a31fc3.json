{"ast":null,"code":"import { createEmptyMap, assign } from './map.js';\n/**\r\n * Create a new scope which can access the parent scope,\r\n * but does not affect it when written. This is suitable for variable definitions\r\n * within a block node, or function definition.\r\n *\r\n * If parent scope has a createSubScope method, it delegates to that. Otherwise,\r\n * creates an empty map, and copies the parent scope to it, adding in\r\n * the remaining `args`.\r\n *\r\n * @param {Map} parentScope\r\n * @param  {...any} args\r\n * @returns {Map}\r\n */\n\nexport function createSubScope(parentScope) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (typeof parentScope.createSubScope === 'function') {\n    return assign(parentScope.createSubScope(), ...args);\n  }\n\n  return assign(createEmptyMap(), parentScope, ...args);\n}","map":{"version":3,"sources":["C:/Users/x/Desktop/openDSA/openDSA_dashboard/project/node_modules/mathjs/lib/esm/utils/scope.js"],"names":["createEmptyMap","assign","createSubScope","parentScope","_len","arguments","length","args","Array","_key"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,MAAzB,QAAuC,UAAvC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,cAAT,CAAwBC,WAAxB,EAAqC;AAC1C,OAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAApC,EAAwEK,IAAI,GAAG,CAApF,EAAuFA,IAAI,GAAGL,IAA9F,EAAoGK,IAAI,EAAxG,EAA4G;AAC1GF,IAAAA,IAAI,CAACE,IAAI,GAAG,CAAR,CAAJ,GAAiBJ,SAAS,CAACI,IAAD,CAA1B;AACD;;AACD,MAAI,OAAON,WAAW,CAACD,cAAnB,KAAsC,UAA1C,EAAsD;AACpD,WAAOD,MAAM,CAACE,WAAW,CAACD,cAAZ,EAAD,EAA+B,GAAGK,IAAlC,CAAb;AACD;;AACD,SAAON,MAAM,CAACD,cAAc,EAAf,EAAmBG,WAAnB,EAAgC,GAAGI,IAAnC,CAAb;AACD","sourcesContent":["import { createEmptyMap, assign } from './map.js';\r\n\r\n/**\r\n * Create a new scope which can access the parent scope,\r\n * but does not affect it when written. This is suitable for variable definitions\r\n * within a block node, or function definition.\r\n *\r\n * If parent scope has a createSubScope method, it delegates to that. Otherwise,\r\n * creates an empty map, and copies the parent scope to it, adding in\r\n * the remaining `args`.\r\n *\r\n * @param {Map} parentScope\r\n * @param  {...any} args\r\n * @returns {Map}\r\n */\r\nexport function createSubScope(parentScope) {\r\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n    args[_key - 1] = arguments[_key];\r\n  }\r\n  if (typeof parentScope.createSubScope === 'function') {\r\n    return assign(parentScope.createSubScope(), ...args);\r\n  }\r\n  return assign(createEmptyMap(), parentScope, ...args);\r\n}"]},"metadata":{},"sourceType":"module"}