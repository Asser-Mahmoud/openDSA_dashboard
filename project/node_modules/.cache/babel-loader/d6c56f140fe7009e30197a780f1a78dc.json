{"ast":null,"code":"import { RowModelGenerator } from '../services/row-model-generator';\nimport { splitFrozenRowObjectCells } from '../base/util';\n/**\r\n * FreezeRowModelGenerator is used to generate grid data rows with freeze row and column.\r\n *\r\n * @hidden\r\n */\n\nvar FreezeRowModelGenerator =\n/** @class */\nfunction () {\n  function FreezeRowModelGenerator(parent) {\n    this.parent = parent;\n    this.rowModelGenerator = new RowModelGenerator(this.parent);\n  }\n\n  FreezeRowModelGenerator.prototype.generateRows = function (data, notifyArgs, virtualRows) {\n    var tableName;\n\n    if (notifyArgs.renderFrozenRightContent || notifyArgs.renderMovableContent && !this.parent.enableVirtualization) {\n      tableName = 'frozen-right';\n    } else if (notifyArgs.renderMovableContent || notifyArgs.isFrozen) {\n      tableName = 'movable';\n    } else {\n      tableName = this.parent.getFrozenLeftCount() ? 'frozen-left' : 'frozen-right';\n    }\n\n    if (notifyArgs.requestType === 'virtualscroll' && notifyArgs.virtualInfo.sentinelInfo.axis === 'X') {\n      if (tableName !== 'movable') {\n        return null;\n      }\n    }\n\n    var row = this.parent.enableVirtualization && !notifyArgs.isFrozenRowsRender ? virtualRows : this.rowModelGenerator.generateRows(data, notifyArgs);\n\n    for (var i = 0, len = row.length; i < len; i++) {\n      row[i].cells = splitFrozenRowObjectCells(this.parent, row[i].cells, tableName);\n    }\n\n    return row;\n  };\n\n  return FreezeRowModelGenerator;\n}();\n\nexport { FreezeRowModelGenerator };","map":{"version":3,"sources":["C:/Users/amase/Desktop/open_dsa/openDSA_dashboard/project/node_modules/@syncfusion/ej2-react-grids/node_modules/@syncfusion/ej2-grids/src/grid/services/freeze-row-model-generator.js"],"names":["RowModelGenerator","splitFrozenRowObjectCells","FreezeRowModelGenerator","parent","rowModelGenerator","prototype","generateRows","data","notifyArgs","virtualRows","tableName","renderFrozenRightContent","renderMovableContent","enableVirtualization","isFrozen","getFrozenLeftCount","requestType","virtualInfo","sentinelInfo","axis","row","isFrozenRowsRender","i","len","length","cells"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,iCAAlC;AACA,SAASC,yBAAT,QAA0C,cAA1C;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,uBAAuB;AAAG;AAAe,YAAY;AACrD,WAASA,uBAAT,CAAiCC,MAAjC,EAAyC;AACrC,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,iBAAL,GAAyB,IAAIJ,iBAAJ,CAAsB,KAAKG,MAA3B,CAAzB;AACH;;AACDD,EAAAA,uBAAuB,CAACG,SAAxB,CAAkCC,YAAlC,GAAiD,UAAUC,IAAV,EAAgBC,UAAhB,EAA4BC,WAA5B,EAAyC;AACtF,QAAIC,SAAJ;;AACA,QAAIF,UAAU,CAACG,wBAAX,IAAwCH,UAAU,CAACI,oBAAX,IAAmC,CAAC,KAAKT,MAAL,CAAYU,oBAA5F,EAAmH;AAC/GH,MAAAA,SAAS,GAAG,cAAZ;AACH,KAFD,MAGK,IAAIF,UAAU,CAACI,oBAAX,IAAmCJ,UAAU,CAACM,QAAlD,EAA4D;AAC7DJ,MAAAA,SAAS,GAAG,SAAZ;AACH,KAFI,MAGA;AACDA,MAAAA,SAAS,GAAG,KAAKP,MAAL,CAAYY,kBAAZ,KAAmC,aAAnC,GAAmD,cAA/D;AACH;;AACD,QAAIP,UAAU,CAACQ,WAAX,KAA2B,eAA3B,IAA8CR,UAAU,CAACS,WAAX,CAAuBC,YAAvB,CAAoCC,IAApC,KAA6C,GAA/F,EAAoG;AAChG,UAAIT,SAAS,KAAK,SAAlB,EAA6B;AACzB,eAAO,IAAP;AACH;AACJ;;AACD,QAAIU,GAAG,GAAG,KAAKjB,MAAL,CAAYU,oBAAZ,IAAoC,CAACL,UAAU,CAACa,kBAAhD,GAAqEZ,WAArE,GACJ,KAAKL,iBAAL,CAAuBE,YAAvB,CAAoCC,IAApC,EAA0CC,UAA1C,CADN;;AAEA,SAAK,IAAIc,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGH,GAAG,CAACI,MAA1B,EAAkCF,CAAC,GAAGC,GAAtC,EAA2CD,CAAC,EAA5C,EAAgD;AAC5CF,MAAAA,GAAG,CAACE,CAAD,CAAH,CAAOG,KAAP,GAAexB,yBAAyB,CAAC,KAAKE,MAAN,EAAciB,GAAG,CAACE,CAAD,CAAH,CAAOG,KAArB,EAA4Bf,SAA5B,CAAxC;AACH;;AACD,WAAOU,GAAP;AACH,GAtBD;;AAuBA,SAAOlB,uBAAP;AACH,CA7B4C,EAA7C;;AA8BA,SAASA,uBAAT","sourcesContent":["import { RowModelGenerator } from '../services/row-model-generator';\r\nimport { splitFrozenRowObjectCells } from '../base/util';\r\n/**\r\n * FreezeRowModelGenerator is used to generate grid data rows with freeze row and column.\r\n *\r\n * @hidden\r\n */\r\nvar FreezeRowModelGenerator = /** @class */ (function () {\r\n    function FreezeRowModelGenerator(parent) {\r\n        this.parent = parent;\r\n        this.rowModelGenerator = new RowModelGenerator(this.parent);\r\n    }\r\n    FreezeRowModelGenerator.prototype.generateRows = function (data, notifyArgs, virtualRows) {\r\n        var tableName;\r\n        if (notifyArgs.renderFrozenRightContent || (notifyArgs.renderMovableContent && !this.parent.enableVirtualization)) {\r\n            tableName = 'frozen-right';\r\n        }\r\n        else if (notifyArgs.renderMovableContent || notifyArgs.isFrozen) {\r\n            tableName = 'movable';\r\n        }\r\n        else {\r\n            tableName = this.parent.getFrozenLeftCount() ? 'frozen-left' : 'frozen-right';\r\n        }\r\n        if (notifyArgs.requestType === 'virtualscroll' && notifyArgs.virtualInfo.sentinelInfo.axis === 'X') {\r\n            if (tableName !== 'movable') {\r\n                return null;\r\n            }\r\n        }\r\n        var row = this.parent.enableVirtualization && !notifyArgs.isFrozenRowsRender ? virtualRows\r\n            : this.rowModelGenerator.generateRows(data, notifyArgs);\r\n        for (var i = 0, len = row.length; i < len; i++) {\r\n            row[i].cells = splitFrozenRowObjectCells(this.parent, row[i].cells, tableName);\r\n        }\r\n        return row;\r\n    };\r\n    return FreezeRowModelGenerator;\r\n}());\r\nexport { FreezeRowModelGenerator };\r\n"]},"metadata":{},"sourceType":"module"}