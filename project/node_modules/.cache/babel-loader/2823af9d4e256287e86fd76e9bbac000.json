{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\r\n * PdfCompositeField.ts class for EJ2-PDF\r\n */\n\n\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\r\n * Represents class which can concatenate multiple automatic fields into single string.\r\n */\n\nvar PdfCompositeField =\n/** @class */\nfunction (_super) {\n  __extends(PdfCompositeField, _super); // Constructor\n\n  /**\r\n   * Initialize a new instance of `PdfCompositeField` class.\r\n   * @param font Font of the field.\r\n   * @param brush Color of the field.\r\n   * @param text Content of the field.\r\n   * @param list List of the automatic fields in specific order based on the text content.\r\n   */\n\n\n  function PdfCompositeField(font, brush, text) {\n    var list = [];\n\n    for (var _i = 3; _i < arguments.length; _i++) {\n      list[_i - 3] = arguments[_i];\n    }\n\n    var _this = _super.call(this) || this; // Fields\n\n    /**\r\n     * Stores the array of automatic fields.\r\n     * @private\r\n     */\n\n\n    _this.internalAutomaticFields = null;\n    /**\r\n     * Stores the text value of the field.\r\n     * @private\r\n     */\n\n    _this.internalText = '';\n    _this.font = font;\n    _this.brush = brush;\n    _this.text = text;\n    _this.automaticFields = list;\n    return _this;\n  }\n\n  Object.defineProperty(PdfCompositeField.prototype, \"text\", {\n    // Properties\n\n    /**\r\n     * Gets and sets the content of the field.\r\n     * @public\r\n     */\n    get: function () {\n      return this.internalText;\n    },\n    set: function (value) {\n      this.internalText = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfCompositeField.prototype, \"automaticFields\", {\n    /**\r\n     * Gets and sets the list of the field to drawn.\r\n     * @public\r\n     */\n    get: function () {\n      return this.internalAutomaticFields;\n    },\n    set: function (value) {\n      this.internalAutomaticFields = value;\n    },\n    enumerable: true,\n    configurable: true\n  }); // Implementation\n\n  /**\r\n   * Return the actual value generated from the list of automatic fields.\r\n   * @public\r\n   */\n\n  PdfCompositeField.prototype.getValue = function (graphics) {\n    var values = [];\n    var text = this.text.toString();\n\n    if (typeof this.automaticFields !== 'undefined' && this.automaticFields != null && this.automaticFields.length > 0) {\n      for (var i = 0; i < this.automaticFields.length; i++) {\n        var automaticField = this.automaticFields[i];\n        text = text.replace('{' + i + '}', automaticField.getValue(graphics));\n      }\n    }\n\n    return text;\n  };\n\n  return PdfCompositeField;\n}(PdfMultipleValueField);\n\nexport { PdfCompositeField };","map":{"version":3,"sources":["C:/Users/x/Desktop/openDSA/openDSA_dashboard/project/node_modules/@syncfusion/ej2-react-charts/node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/composite-field.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","PdfMultipleValueField","PdfCompositeField","_super","font","brush","text","list","_i","arguments","length","_this","call","internalAutomaticFields","internalText","automaticFields","defineProperty","get","set","value","enumerable","configurable","getValue","graphics","values","toString","i","automaticField","replace"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n/**\r\n * PdfCompositeField.ts class for EJ2-PDF\r\n */\r\nimport { PdfMultipleValueField } from './multiple-value-field';\r\n/**\r\n * Represents class which can concatenate multiple automatic fields into single string.\r\n */\r\nvar PdfCompositeField = /** @class */ (function (_super) {\r\n    __extends(PdfCompositeField, _super);\r\n    // Constructor\r\n    /**\r\n     * Initialize a new instance of `PdfCompositeField` class.\r\n     * @param font Font of the field.\r\n     * @param brush Color of the field.\r\n     * @param text Content of the field.\r\n     * @param list List of the automatic fields in specific order based on the text content.\r\n     */\r\n    function PdfCompositeField(font, brush, text) {\r\n        var list = [];\r\n        for (var _i = 3; _i < arguments.length; _i++) {\r\n            list[_i - 3] = arguments[_i];\r\n        }\r\n        var _this = _super.call(this) || this;\r\n        // Fields\r\n        /**\r\n         * Stores the array of automatic fields.\r\n         * @private\r\n         */\r\n        _this.internalAutomaticFields = null;\r\n        /**\r\n         * Stores the text value of the field.\r\n         * @private\r\n         */\r\n        _this.internalText = '';\r\n        _this.font = font;\r\n        _this.brush = brush;\r\n        _this.text = text;\r\n        _this.automaticFields = list;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PdfCompositeField.prototype, \"text\", {\r\n        // Properties\r\n        /**\r\n         * Gets and sets the content of the field.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            return this.internalText;\r\n        },\r\n        set: function (value) {\r\n            this.internalText = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PdfCompositeField.prototype, \"automaticFields\", {\r\n        /**\r\n         * Gets and sets the list of the field to drawn.\r\n         * @public\r\n         */\r\n        get: function () {\r\n            return this.internalAutomaticFields;\r\n        },\r\n        set: function (value) {\r\n            this.internalAutomaticFields = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    // Implementation\r\n    /**\r\n     * Return the actual value generated from the list of automatic fields.\r\n     * @public\r\n     */\r\n    PdfCompositeField.prototype.getValue = function (graphics) {\r\n        var values = [];\r\n        var text = this.text.toString();\r\n        if (typeof this.automaticFields !== 'undefined' && this.automaticFields != null && this.automaticFields.length > 0) {\r\n            for (var i = 0; i < this.automaticFields.length; i++) {\r\n                var automaticField = this.automaticFields[i];\r\n                text = text.replace('{' + i + '}', automaticField.getValue(graphics));\r\n            }\r\n        }\r\n        return text;\r\n    };\r\n    return PdfCompositeField;\r\n}(PdfMultipleValueField));\r\nexport { PdfCompositeField };\r\n"]},"metadata":{},"sourceType":"module"}